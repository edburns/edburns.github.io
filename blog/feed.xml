<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2025-08-19T14:38:10-04:00</updated><id>/blog/feed.xml</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">I have made another impressively insignificant contribution to Wikipedia</title><link href="/blog/2025/08/18/gpt-5-research-and-trivial-wikipedia.html" rel="alternate" type="text/html" title="I have made another impressively insignificant contribution to Wikipedia" /><published>2025-08-18T15:14:00-04:00</published><updated>2025-08-18T15:14:00-04:00</updated><id>/blog/2025/08/18/gpt-5-research-and-trivial-wikipedia</id><content type="html" xml:base="/blog/2025/08/18/gpt-5-research-and-trivial-wikipedia.html">&lt;p&gt;It’s been nearly 19 years since my last &lt;a href=&quot;/blog/2006/10/16/i-have-made-impressively-insignificant-contribution-wikipedia.html&quot;&gt;trivial Wikipedia contribution&lt;/a&gt;,so high time for another one.&lt;/p&gt;

&lt;p&gt;I recently enjoyed watching &lt;a href=&quot;https://www.imdb.com/title/tt1896747/&quot;&gt;Fly Me to the Moon (2024)&lt;/a&gt;, which got me curious about what the original TV broadcast of the Apollo 11 moon landing looked like. I found this &lt;a href=&quot;https://www.youtube.com/watch?v=WQDjy2csPP0&amp;amp;t=141s&quot;&gt;video&lt;/a&gt; which, to my surprise, had a lunar lander set very similar to the one in the movie. But this one is clearly labeled as CBS NEWS SIMULATION.&lt;/p&gt;

&lt;p&gt;I was further curious about the names of the actors that protrayed Neil Armstrong and Buzz Aldrin? I went to ChatGPT and had &lt;a href=&quot;https://chatgpt.com/share/6898357f-0e58-8000-98a8-0c9fd3cc436f&quot;&gt;this dialog&lt;/a&gt;. It could not find the identities of the actor, but it offered to research the matter and get back to me. I said, “sure”. What do you know but a couple weeks later it sends me an email, even though ChatGPT said it could not send me an email.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Findings (new):&lt;/strong&gt;&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;
      &lt;p&gt;The best-documented “stand-in” for CBS’s Apollo 11 simulation was &lt;strong&gt;Scott MacLeod&lt;/strong&gt;, a Grumman lunar module consulting pilot/test engineer. He appeared on-air in a suit, climbed down the LM ladder on the Bethpage moonscape, and “simulated Armstrong’s and Aldrin’s duties during the moon landing.”&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;Evidence also indicates &lt;strong&gt;Tom Sylvester&lt;/strong&gt; of &lt;strong&gt;ILC Industries&lt;/strong&gt; (the Apollo suit maker) suited up for CBS’s Bethpage filming prior to the landing; contemporary captions describe him climbing down a full-scale LM for CBS’s simulation package (likely B-roll used in coverage). This aligns with community documentation that CBS used Grumman/ILC personnel rather than hired actors for the second suited role. (Primary: archival captioned images; secondary: space-history forum recollections.)&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt;PBS’s production history and CBS’s own retrospective confirm the &lt;strong&gt;Grumman moonscape set&lt;/strong&gt; at Bethpage and that &lt;strong&gt;two suited “astronauts”&lt;/strong&gt; were sometimes shown, but they do &lt;strong&gt;not&lt;/strong&gt; name the second individual on-air.&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;&lt;strong&gt;Bottom line:&lt;/strong&gt;
A named, high-confidence ID exists for the commander role (&lt;strong&gt;Scott MacLeod&lt;/strong&gt;). The likely second suited performer was &lt;strong&gt;Tom Sylvester (ILC)&lt;/strong&gt; for pre-taped segments, though CBS’s public records don’t explicitly credit him in the broadcast itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pleased with this asynchronous research feature, I decided to update the Wikipedia page &lt;a href=&quot;https://en.wikipedia.org/wiki/Apollo_11_in_popular_culture#Films_and_television&quot;&gt;Apollo 11 in popular culture&lt;/a&gt;, which I copy here in case my edit gets reverted.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CBS news coverage of the Apollo 11 landing itself included several aspects of portrayal. Grumman engineer Scott MacLeod portrayed Neil Armstrong descending from the steps of a full-scale model of Lunar Module Eagle so viewers could see what was happening before the live TV broadcast from the moon commenced.&lt;a href=&quot;https://www.collectspace.com/news/news-081621a-scott-macleod-test-astronaut-cronkite.html&quot;&gt;19&lt;/a&gt; Tom Sylvester portrayed Buzz Aldrin during the same broadcast.&lt;a href=&quot;https://www.flickr.com/photos/apollo4ever/51738415385/in/photolist-2owPCX3-2nBDkMS-2htaTmr-2mPWUmz-5meN7Y-2kShh8P-2ndDPMi-2ndDHPw-2mKWj4D-389dHK-2dzTfiR-5tAwna-4mrbGe-2jqYMz1-vEi2b-5t7DDn-XXAgNC-5ifBZf-Fw2Cvs-2jmj6eK-2gfLZwd-2cWYTF9-2ez8Qj7-vEi29-4xUWzN-4JsgQq-2LN9Sk-4PJHC7-5WXLCV-a2GEF-4yzZ9z-5nqBDJ-2pF4E95-FArL7E-22JaEAF-X9CLvV-4JsgQC-a2GGa-4PGE8T-2VCVDi-9V8BT-hoKJg-2MTzTU-a2GFe-U1qENN-5puZLD-2aWUH8x-2isHfXJ-a2Jor-tp4Bg&quot;&gt;20&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">It’s been nearly 19 years since my last trivial Wikipedia contribution,so high time for another one.</summary></entry><entry><title type="html">Ed’s JUG tour around JavaLand 2025</title><link href="/blog/2025/02/27/javaland-2025-jug-tour.html" rel="alternate" type="text/html" title="Ed’s JUG tour around JavaLand 2025" /><published>2025-02-27T15:50:00-05:00</published><updated>2025-02-27T15:50:00-05:00</updated><id>/blog/2025/02/27/javaland-2025-jug-tour</id><content type="html" xml:base="/blog/2025/02/27/javaland-2025-jug-tour.html">&lt;p&gt;I’m very excited to do my typical JUG tour around JavaLand. Here are my planned stops this year. I hope we can meet in person somewhere on the road.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update 2025-03-12, added two more dates: Vienna and Berlin&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Java Vienna Meetup 17 March - &lt;a href=&quot;https://www.meetup.com/java-vienna/events/305897191/?eventOrigin=group_upcoming_events&quot;&gt;Lightning talk: How to get trustworthy enterprise AI in your favorite IDE&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Global AI Bootcamp 18 March - &lt;a href=&quot;https://globalai.community/chapters/vienna/events/global-ai-bootcamp-vienna/&quot;&gt;How to get trustworthy enterprise AI in your favorite IDE&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Leipzig 24 March - &lt;a href=&quot;https://www.jugsaxony.org/timeline/2025/3/24/EnterpriseAI-in-IDE&quot;&gt;How to get trustworthy enterprise AI in your trusted IDE&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Berlin 25 March - &lt;a href=&quot;https://www.meetup.com/jug-bb/events/306661697/?slug=jug-bb&amp;amp;eventId=306661697&quot;&gt;How to get trustworthy enterprise AI in your trusted IDE&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Braunschweig 26 March - &lt;a href=&quot;https://www.jug-ostfalen.de/event/2025/03/26/langchain4j.html&quot;&gt;Java and AI with LangChain4j&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Bielefeld 27 March - &lt;a href=&quot;https://www.meetup.com/java-user-group-bielefeld/events/306454726/&quot;&gt;Java and AI with LangChain4j&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Darmstadt 8 April - &lt;a href=&quot;https://www.jug-da.de/2025/04/LangChain4j/&quot;&gt;Java and AI with LangChain4j&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Pforzheim 9 April - Open talk, demo of latest extensions&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JUG Stuttgart 10 April - &lt;a href=&quot;https://www.meetup.com/jugstuttgart/events/306177115/&quot;&gt;Java and AI with LangChain4j&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">I’m very excited to do my typical JUG tour around JavaLand. Here are my planned stops this year. I hope we can meet in person somewhere on the road.</summary></entry><entry><title type="html">Ed’s JavaLand 2025 Session Picks</title><link href="/blog/2025/02/25/javaland-2025-picks.html" rel="alternate" type="text/html" title="Ed’s JavaLand 2025 Session Picks" /><published>2025-02-25T15:50:00-05:00</published><updated>2025-02-25T15:50:00-05:00</updated><id>/blog/2025/02/25/javaland-2025-picks</id><content type="html" xml:base="/blog/2025/02/25/javaland-2025-picks.html">&lt;p&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns00/eds-javaland-2025-session-picks-3p2i&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m very blessed to have the opportunity to speak at the 11th anniversary &lt;a href=&quot;https://javaland.eu/&quot;&gt;JavaLand conference&lt;/a&gt;. This is the second year the conference will be held at &lt;a href=&quot;https://thevendry.com/venue/197499/nurburgring-nurburg-germany&quot;&gt;Nürburgring&lt;/a&gt;. It turns out it took even more time to walk between sessions. Maybe this year will be better.&lt;/p&gt;

&lt;p&gt;Here are my previous session picks posts.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2024/03/02/javaland-2024-picks.html&quot;&gt;2024&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2022/02/15/javaland-2022-picks.html&quot;&gt;2022&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2019/03/11/javaland-2019-picks.html&quot;&gt;2019&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2018/03/12/javaland-holly-cummins.html&quot;&gt;2018&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2017/02/27/javaland-2017-picks.html&quot;&gt;2017&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2015/01/15/javaland-2015-conference-picks.html&quot;&gt;2015&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2014/03/03/eds-javaland-2014-picks.html&quot;&gt;2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All times in local time zone in JavaLand.  The program can change so please see &lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#eventDay.all&quot;&gt;the program&lt;/a&gt; for more details on each session.&lt;/p&gt;

&lt;h3 id=&quot;monday-31-march-2025-community-day&quot;&gt;Monday, 31 March 2025 Community day&lt;/h3&gt;

&lt;p&gt;There is also an Unconference on Community day from 15:00 - 18:30 in the Coca-Cola business°lounge 1. It’s impossible to list an Unconference in a session picks blog post because I have no idea what the content will be.&lt;/p&gt;

&lt;h4 id=&quot;1500---1700-lindner-congress-hotel-grid-4---architektur-kata&quot;&gt;15:00 - 17:00 Lindner Congress Hotel Grid 4 - Architektur Kata&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5376&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.linkedin.com/in/sebastian-rose-9b0617ab/&quot;&gt;Sebastian Rose&lt;/a&gt; and &lt;a href=&quot;https://www.ahus1.de/&quot;&gt;Alexander Schwartz&lt;/a&gt; are promising an interesting learning opportunity about software architecture. The idea is to build feedback gathering into your design process so it happens as early as possible. It seems like common sense, but I suspect there is a lot about the way they propose to do it that is novel and new. I think it’s worth a look.&lt;/p&gt;

&lt;h4 id=&quot;1715---1830-lindner-congress-hotel-grid-4---easily-illustrate-impactful-flipcharts&quot;&gt;17:15 - 18:30 Lindner Congress Hotel Grid 4 - Easily illustrate impactful flipcharts&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5383&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I haven’t used flipcharts much, but they do seem very accessible and durable. I think I should learn more about how to use them. Sebastian and Alexander present a session inspired by the lessons from the book &lt;a href=&quot;https://www.amazon.com/Flipchart-Coach-Profi-Tipps-Visualisieren-Pr%C3%A4sentieren-Flipchart/dp/3941965948&quot;&gt;Der Flipchart Coach&lt;/a&gt;. Because I have become a huge fan of the book &lt;a href=&quot;https://www.amazon.com/Presentation-Patterns-Techniques-Crafting-Presentations/dp/0321820800/&quot;&gt;Presentation Patterns&lt;/a&gt;, I appreciate the power of a session that is based on a book. As I enter the third decade of my career, it’s high time I learn how to use flipcharts to make impact.&lt;/p&gt;

&lt;h3 id=&quot;tuesday-1-april-2025&quot;&gt;Tuesday 1 April 2025&lt;/h3&gt;

&lt;h4 id=&quot;tuesday-0830---1010-ringkino---deserialization-exploits-in-java-why-should-i-care&quot;&gt;Tuesday 08:30 - 10:10 ring°kino - Deserialization exploits in Java: why should I care?&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5333&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This talk has several things going for it. First and foremost, the speaker, &lt;a href=&quot;https://brianvermeer.nl/&quot;&gt;Brian Vermeer&lt;/a&gt; is a seasoned veteran with a stellar track record of engaging talks. Second the topic. I’m familiar with deserialization attacks back from my JSF days: client side state saving at one time used something like serialization.  But this talk goes beyond Java to also XML, JSON, and YAML serialization. An attack vector as old as seralization attacks means the prior art for attackers is vast. This one is important.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1000---1040-ringarena---fried-begrüßung-and-adam-bien-keynote&quot;&gt;Tuesday 10:00 - 10:40 ring°arena - Fried Begrüßung and Adam Bien Keynote&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5162&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fried’s Begrüßung is always entertaining. In a bold statement of the German identity of JavaLand, Adam Bien’s keynote will be delivered in German. This is fine for me, but it does mark a first for the big stage keynote. In any case, Adam Bien is a Java legend. I had a personal hand in creating some of the acronyms he mentions, so I expect to love this one.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1100---1140-bitburger-event-center-teil-a---building-ai-powered-applications-in-java&quot;&gt;Tuesday 11:00 - 11:40 Bitburger Event Center Teil A - Building AI powered applications in Java&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5163&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There is no question that powerful forces in our industry have bet the future AI and are doing everything they can to make that future happen. I look to my old friend and former PowerPoint karaoke sparring partner &lt;a href=&quot;https://andresalmiray.com/&quot;&gt;Andres Almiray&lt;/a&gt; to sort the hype from the reality.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1200---1240&quot;&gt;Tuesday 12:00 - 12:40&lt;/h4&gt;

&lt;p&gt;Because these two sessions are so very different, I have no problem recommending them both.&lt;/p&gt;

&lt;h5 id=&quot;ringarena&quot;&gt;ring°arena&lt;/h5&gt;

&lt;p&gt;If you want a soft skills session at this time, go with &lt;a href=&quot;https://www.linkedin.com/in/sophie-k%C3%BCster-1901b4149/&quot;&gt;Sophie Küster&lt;/a&gt;’s &lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5164&quot;&gt;One of the Lads - Things I’m tired of hearing about women in tech&lt;/a&gt;. First, let me appeal to your self-interest. By learning about workplace concerns are important to a cohort including a large and growing segment of the workforce, you’l improve your workplace effectiveness. Second, Sophie is an excellent and engaging speaker.&lt;/p&gt;

&lt;h5 id=&quot;bitburger-event-center-teil-b&quot;&gt;Bitburger Event Center Teil B&lt;/h5&gt;

&lt;p&gt;If you want a technical sesion at this time go with &lt;a href=&quot;https://developer-sam.de/&quot;&gt;Samuel Nitsche&lt;/a&gt;’s &lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5171&quot;&gt;Code Reading - Die unterschätzte Superkraft&lt;/a&gt;. Given that AI is so great at parsing text, but not so great at reasoning about it, I believe having this skill in your head will give you a big edge.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1300---1340-coca-cola-businesslounge-7---bergwerk-sboms-die-stückliste-für-sichere-softwarearchitektur&quot;&gt;Tuesday 13:00 - 13:40 Coca-Cola business°lounge 7 - Bergwerk SBOMs: Die Stückliste für sichere Softwarearchitektur&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5212&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am choosing to highlight this session from &lt;a href=&quot;https://www.linkedin.com/in/richard-attermeyer/&quot;&gt;Richard Attermeyer&lt;/a&gt; because ensuring all your software produces SBOMs is a great way to be a part of the solution for building world less prone to hacking. Sooner or later, all of us will be victims. We as software professionals have a duty to make things better, or at least atone for some of the damage we have already caused.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1400---1440-ringarena---no-dependencies-pure-java-aillm-integration&quot;&gt;Tuesday 14:00 - 14:40 ring°arena - No Dependencies: Pure Java AI/LLM integration&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5166&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The legendary &lt;a href=&quot;https://adam-bien.com&quot;&gt;Adam Bien&lt;/a&gt; comes to JavaLand. Adam’s approach for decades has been to show how you can accomplish most of what you need in an enterprise software stack with a minimum of external dependencies. As the previous session from Richard Attermeyer showed, every dependency you introduce is a security risk (that’s why everything needs an SBOM, just so you can check.) While this is true, it’s even better to minimize your dependencies as much as possible. Don’t miss this one!&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1500---1540-bmw-m-showroom---learning-genaillm-programming-with-langchain4j-and-testcontainers&quot;&gt;Tuesday 15:00 - 15:40 BMW M Showroom - Learning GenAI/LLM programming with langchain4j and Testcontainers&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5207&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mr. Testcontainer himself, &lt;a href=&quot;https://wittek.dev/&quot;&gt;Kevin Wittek&lt;/a&gt; is an experienced speaker, software developer, and &lt;a href=&quot;https://www.youtube.com/watch?v=LfbDw8f-AbM&quot;&gt;musician&lt;/a&gt;. Given the centrality of testing to all software development in the past and future, and the centrality of AI to all software development in the present and future, this combination will be very important to understand. Kevin will show you how.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1600---1640-coca-cola-businesslounge-6-a-survey-of-cloud-readiness-for-jakarta-ee-11&quot;&gt;Tuesday 16:00 - 16:40 Coca-Cola business°lounge 6 A survey of cloud readiness for Jakarta EE 11&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5208&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first of my three sessions is in this time slot. If you’re interested in Jakarta EE 11, I ask you to consider it.&lt;/p&gt;

&lt;p&gt;My session will teach:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;What’s new in Jakarta EE 11 and why it’s interesting to Java developers.&lt;/li&gt;
  &lt;li&gt;An overview of how to run Jakarta EE 11 on Azure, Google, and AWS.&lt;/li&gt;
  &lt;li&gt;A deep dive in how to run Jakarta EE 11 on Azure Container Apps.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otherwise, you may want to check out this one.&lt;/p&gt;

&lt;h5 id=&quot;bitburger-event-center-teil-a---walking-skeleton---softwarearchitektur-ohne-fleisch&quot;&gt;Bitburger Event-Center Teil A - Walking Skeleton - Softwarearchitektur ohne Fleisch?&lt;/h5&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5175&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I had the extreme pleasure of seeing Alastair Cockburn give a keynote when I presented at &lt;a href=&quot;https://web.archive.org/web/20060925101953/http://www.jaoo.dk/speakers/show_speaker.jsp?oid=27&quot;&gt;Jaoo 2006&lt;/a&gt;. Apparently this is one of Alastair Cockburn’s more recent ideas on the further evolution of agile development. &lt;a href=&quot;https://www.sippsack.de/&quot;&gt;Falk Sippach&lt;/a&gt; is an experienced speaker, JUG leader, and iJUG contributor. I look forward to this talk.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1700---1740-bitburger-event-center-teil-b---boost-your-performance-and-developer-productivity-with-jakarta-ee-11&quot;&gt;Tuesday 17:00 - 17:40 Bitburger Event-Center Teil B - Boost Your Performance and Developer Productivity with Jakarta EE 11&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5169&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My colleague &lt;a href=&quot;https://www.linkedin.com/in/ivargrimstad&quot;&gt;Ivar Grimstad&lt;/a&gt; gives the productivity angle on the latest iteration of the standard for enterprise Java.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1800---1840-bitburger-event-center-teil-b---what-is-new-in-microprofile&quot;&gt;Tuesday 18:00 - 18:40 Bitburger Event-Center Teil B - What is New in MicroProfile?&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5320&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a perfect complement to Ivar’s session, my colleague &lt;a href=&quot;https://www.linkedin.com/in/emilyfhjiang/&quot;&gt;Emily Jiang&lt;/a&gt; gives an overview in the latest version of MicroProfile. MicroProfile sits alongside Jakarta EE as a collection of standards adopted by multiple vendors for enterprise Java.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-1900---1940-lindner-congress-hotel-grid-4---from-zero-to-secured-live-coding-a-jakarta-ee-rest-app-with-microprofile--jwt&quot;&gt;Tuesday 19:00 - 19:40 Lindner Congress Hotel Grid 4 - From Zero to Secured: Live-Coding a Jakarta EE REST App with MicroProfile &amp;amp; JWT&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5225&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As Adam Bien has long shown, the power of combining open standard specifications in an a la carte fashion tends to help delivering maintainable enterprise software on schedule and within budget. This session from &lt;a href=&quot;https://hanno.codes&quot;&gt;Hanno Embregts&lt;/a&gt; is another example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Live-coding a RESTful app from scratch using the latest versions of JAX-RS, JPA, and MicroProfile.&lt;/li&gt;
  &lt;li&gt;Implementing JWT-based authentication.&lt;/li&gt;
  &lt;li&gt;Documenting REST endpoints with OpenAPI.&lt;/li&gt;
  &lt;li&gt;Creating a responsive frontend with Angular and connecting it to the REST app.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;wednesday-02-april-2025&quot;&gt;Wednesday, 02 April 2025&lt;/h3&gt;

&lt;h4 id=&quot;0900---0940-bitburger-event-center-teil-a---technische-und-soziale-muster-für-teamübergreifende-integration&quot;&gt;09:00 - 09:40 Bitburger Event-Center Teil A - Technische und soziale Muster für teamübergreifende Integration&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5244&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’ve been working and leading distributed teams for two decades, but there is always something new to learn. This intriguing session from &lt;a href=&quot;https://twitter.com/alexksbr&quot;&gt;Alexander Kaserbacher&lt;/a&gt; seems to use a pattern language to ease the problem of cross-team colaboration.&lt;/p&gt;

&lt;h4 id=&quot;1000---1040-bitburger-event-center-teil-a---high-performance-serverless-java-on-aws&quot;&gt;10:00 - 10:40 Bitburger Event-Center Teil A - High performance Serverless Java on AWS&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5245&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Even though my own employer’s serverless compute offer supports Java very well, it’s always useful to see another vendor’s take on the problem set. &lt;a href=&quot;https://www.linkedin.com/in/vadymkazulkin/&quot;&gt;Vadym Kazulkin&lt;/a&gt; seems to have a solid command of the space, so let’s check him out.&lt;/p&gt;

&lt;!--

#### 11:00 - 11:40 ring°arena Die unsichtbare Hand im Code

Of course [Hendrik Ebbers](https://twitter.com/hendrikEbbers) and [Sandra Parsick](https://twitter.com/SandraParsick) will do an amazing job with the community keynote. I don't know how they are going to follow-up [last year's impactful installment](https://www.doag.org/de/home/news/javaland-2023-community-keynote-teilt-eure-geschichte/), which dealt with some weighty topics. As an insider at one of these IT-Giganten, I'll be curious to see what they think is really happening inside our &quot;Geheime Räte&quot; (hint, at least for my employer, it is always customer obsession).

--&gt;

&lt;h4 id=&quot;1200---1240-business-center---bergwerk---how-to-get-trustworthy-ai-in-your-favorite-ide&quot;&gt;12:00 - 12:40 Business Center - Bergwerk - How to get trustworthy AI in your favorite IDE&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5292&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m very excited about this session where I get to talk about my teammate’s amazing work in making GitHub Copilot available in IntelliJ IDEA and Eclipse. I’ll weave this work into my talk about how Microsoft is making AI fun and safe for you to use at work.&lt;/p&gt;

&lt;h4 id=&quot;1300---1340-bitburger-event-center-teil-b---validating-llms---a-true-story&quot;&gt;13:00 - 13:40 Bitburger Event-Center Teil B - Validating LLMs - a true story&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5239&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Having ony recently discovered the concept of &lt;a href=&quot;https://www.swebench.com/&quot;&gt;SWE-bench&lt;/a&gt; and the notion that LLMs can compete against eachother for supremacy, this talk from &lt;a href=&quot;https://www.linkedin.com/in/emilyfhjiang/&quot;&gt;Emily Jiang&lt;/a&gt; seems very timely.&lt;/p&gt;

&lt;h4 id=&quot;1400---1440-coca-cola-businesslounge-6---von-java-ee-6-zu-quarkus-eine-migrationsreise-mit-openrewrite&quot;&gt;14:00 - 14:40 Coca-Cola business°lounge 6 - Von Java EE 6 zu Quarkus: Eine Migrationsreise mit OpenRewrite&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5303&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m always excited to see what becomes of old JSF apps. This talk from &lt;a href=&quot;https://www.linkedin.com/in/christian-gruemme/&quot;&gt;Christian Grümme&lt;/a&gt; should be fun.&lt;/p&gt;

&lt;h4 id=&quot;1500---1540-bitburger-event-center-teil-b---technical-enshittification-why-it-is-broken-and-how-to-fix-it&quot;&gt;15:00 - 15:40 Bitburger Event-Center Teil B - Technical Enshittification: Why IT is Broken and How to Fix It&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5241&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I was delighted to see my old pal &lt;a href=&quot;https://twitter.com/jbaruch&quot;&gt;Baruch Sadogursky&lt;/a&gt; on the program. The provocative term in his title was coined by American malcontent Cory Doctorow to describe how unchecked exponential monetization leads to progressively worse user experiences. The causes of Cory Doctorow’s problem are well understood and almost impossible to improve. I hope Baruch’s analysis is more hopeful.&lt;/p&gt;

&lt;h4 id=&quot;1600---1640-bitburger-event-center-teil-b---jakarta-ee-community-panel&quot;&gt;16:00 - 16:40 Bitburger Event-Center Teil B - Jakarta EE Community Panel&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5242&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I’m very happy to participate in this panel. Come ask me anything about Jakarta EE.&lt;/p&gt;

&lt;h4 id=&quot;1700---1740-coca-cola-businesslounge-1---82-bugs-i-collected-in-a-year-you-wont-believe-made-it-to-production&quot;&gt;17:00 - 17:40 Coca-Cola business°lounge 1 - 82 Bugs I Collected in a Year You Won’t Believe Made It to Production&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5270&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The idea of taking a birding approach to software bugs is very novel. Let’s see what &lt;a href=&quot;https://linkedin.com/in/fran%C3%A7oismartin&quot;&gt;Francois Martin&lt;/a&gt; has to say about it.&lt;/p&gt;

&lt;h3 id=&quot;thursday-03-april-2025&quot;&gt;Thursday, 03 April 2025&lt;/h3&gt;

&lt;h4 id=&quot;0900---1700-lindner-congres-hotel-grid-3---java-with-al-on-azure-container-apps-and-kubernetes&quot;&gt;09:00 - 17:00 Lindner Congres Hotel Grid 3 - Java with Al on Azure Container Apps and Kubernetes&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://meine.doag.org/events/javaland/2025/agenda/#agendaId.5364&quot;&gt;Program link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Azure Container Apps is the premiere cloud environment for Java workloads on
Azure. It combines the power, scale, and reliability of infrastructure-as-a-service offerings such as Kubernetes with the ease-of-use of a platform-as-a-service offering.&lt;/p&gt;

&lt;p&gt;Azure Kubernetes Service is the premier cloud environment for advanced enterprise workloads on Azure, including Java. It is the industry standard Kubernetes on the hyperscale Azure cloud.&lt;/p&gt;

&lt;p&gt;Azure Developer CLI is a tool for quickly standing up Azure infrastructure to run your application. This workshop will cover three common Java scenarios: Spring, and Quarkus on Azure Container Apps, and Jakarta EE on Azure Kubernetes Service.&lt;/p&gt;

&lt;p&gt;All three scenarios are enabled by Azure Developer CLI. The AI aspect will be run through the scenarios in two dimensions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;AI for the act of writing software and&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;AI for use in the actual domain of the software. The Spring and Quarkus scenarios will show a microservice application in the domain of a localized weather forecasting service.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The AI in this domain is a conversational chat about the localized weather forecast.&lt;/p&gt;

&lt;p&gt;The Jakarta EE scenario will show a monolithic application, CargoTracker, running on Azure Kubernetes service.&lt;/p&gt;

&lt;p&gt;The AI in this domain is a shortest-path calculation for routing cargo.&lt;/p&gt;

&lt;p&gt;A USD $50 Azure credit for use in the workshop and afterward is provided to all participants.&lt;/p&gt;

&lt;p&gt;Bonus:&lt;/p&gt;

&lt;p&gt;Every participant is entitled to a 30-minute 1:1 career counseling session teleconference with Ed, scheduled at their convenience. For Ed’s credentials in this domain, see his abstract from JavaLand last year https://meine.doag.org/events/javaland/2024/agenda/#agendaId.3689 .&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">Using the tmate GitHub Action from Max Schmitt to aid debugging GitHub Actions workflows</title><link href="/blog/2024/12/04/tmate-github-actions-debug.html" rel="alternate" type="text/html" title="Using the tmate GitHub Action from Max Schmitt to aid debugging GitHub Actions workflows" /><published>2024-12-04T13:30:00-05:00</published><updated>2024-12-04T13:30:00-05:00</updated><id>/blog/2024/12/04/tmate-github-actions-debug</id><content type="html" xml:base="/blog/2024/12/04/tmate-github-actions-debug.html">&lt;h3 id=&quot;executive-summary&quot;&gt;Executive Summary&lt;/h3&gt;

&lt;p&gt;This post shows how to use the &lt;a href=&quot;https://github.com/mxschmitt/action-tmate&quot;&gt;action-tmate&lt;/a&gt; GitHub Action to allow you to SSH into the runner for your GitHub Actions workflow.&lt;/p&gt;

&lt;h3 id=&quot;details&quot;&gt;Details&lt;/h3&gt;

&lt;h4 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You have an existing GitHub Actions workflow that runs, at least somewhat.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You have set up your SSH key with GitHub and can use it to push commits to the repo which has the GitHub Actions workflow.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;steps&quot;&gt;Steps&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Put these lines in your GitHub Actions workflow. Personally I always have a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preflight&lt;/code&gt; job that sets up some very basic things. I put the below lines as the first thing in the first job &lt;strong&gt;after&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;preflight&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      after-preflight:
          needs: preflight
          runs-on: ubuntu-latest
          steps:
              - name: Setup tmate session
                uses: mxschmitt/action-tmate@v3
                timeout-minutes: 120
                with:
                  detached: true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;When the workflow reaches the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;after-preflight&lt;/code&gt; job, you’ll see a bunch of tmate related stuff in the job log, something like:&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Run mxschmitt/action-tmate@v3
Get:1 file:/etc/apt/apt-mirrors.txt Mirrorlist [142 B]
Hit:2 http://azure.archive.ubuntu.com/ubuntu jammy InRelease
Hit:6 https://packages.microsoft.com/repos/azure-cli jammy InRelease
Get:3 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]
Get:7 https://packages.microsoft.com/ubuntu/22.04/prod jammy InRelease [3632 B]
Get:4 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]
Get:5 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease [129 kB]
Get:8 https://packages.microsoft.com/ubuntu/22.04/prod jammy/main armhf Packages [15.7 kB]
Get:9 https://packages.microsoft.com/ubuntu/22.04/prod jammy/main arm64 Packages [40.2 kB]
Get:10 https://packages.microsoft.com/ubuntu/22.04/prod jammy/main amd64 Packages [172 kB]
Get:11 http://azure.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2180 kB]
Get:12 http://azure.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1177 kB]
Get:13 http://azure.archive.ubuntu.com/ubuntu jammy-updates/multiverse Translation-en [11.5 kB]
Get:14 http://azure.archive.ubuntu.com/ubuntu jammy-security/main amd64 Packages [1956 kB]
Get:15 http://azure.archive.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [957 kB]
Fetched 6897 kB in 1s (6399 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
xz-utils is already the newest version (5.2.5-2ubuntu1).
openssh-client is already the newest version (1:8.9p1-3ubuntu0.10).
0 upgraded, 0 newly installed, 0 to remove and 38 not upgraded.
ssh redacted@nyc1.tmate.io

Notice: SSH: ssh redacted@nyc1.tmate.io
Notice: or: ssh -i &amp;lt;path-to-private-SSH-key&amp;gt; redacted@nyc1.tmate.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Here’s where the magic happens. Max Schmitt’s tmate action somehow uses the SSH key you configured as the SSH key for the connection. So when you run either of those two commands, the ssh “just works” and you are able to get into the runner. I find this is useful to be able to poke around and debug things.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Thanks of course to &lt;a href=&quot;https://github.com/mxschmitt&quot;&gt;Max Schmitt&lt;/a&gt; for creating and maintaining the software and to my colleagues &lt;a href=&quot;https://github.com/majguo&quot;&gt;Jianguo&lt;/a&gt; and &lt;a href=&quot;https://github.com/backwind1233/&quot;&gt;Zhihao&lt;/a&gt; for reducing my &lt;a href=&quot;https://aka.ms/rockstarignorance/&quot;&gt;2nd order ignorance&lt;/a&gt; about it.&lt;/p&gt;</content><author><name></name></author><summary type="html">Executive Summary</summary></entry><entry><title type="html">How well did Jakarta EE 11 respond to the needs of developers?</title><link href="/blog/2024/09/23/jakarta-ee-11-incorporating-feedback.html" rel="alternate" type="text/html" title="How well did Jakarta EE 11 respond to the needs of developers?" /><published>2024-09-23T16:15:00-04:00</published><updated>2024-09-23T16:15:00-04:00</updated><id>/blog/2024/09/23/jakarta-ee-11-incorporating-feedback</id><content type="html" xml:base="/blog/2024/09/23/jakarta-ee-11-incorporating-feedback.html">&lt;p&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns/how-well-did-jakarta-ee-11-respond-to-the-needs-of-developers-1824&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;executive-summary&quot;&gt;Executive Summary&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://jakarta.ee/committees/steering/&quot;&gt;Jakarta Steering Committee&lt;/a&gt; chartered the &lt;a href=&quot;https://jakartaee.github.io/platform/&quot;&gt;Jakarta EE Platform project&lt;/a&gt; with the goal of incorporating developer feedback in the development of EE 11. This blog post reviews the performance of the Platform Project and awards a &lt;a href=&quot;https://gpacalculator.io/how-to-calculate-gpa/&quot;&gt;GPA&lt;/a&gt; of 3.43 on a 4 point scale of achieving this goal.&lt;/p&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I am humbled and honored to find myself in a position of helping to deliver the next iteration of Jakarta EE. I’ve held many roles in J2EE/Java EE/Jakarta EE over the decades: implementer, spec lead, advocate, author, tester, and more. My current role, however, is a new one for me release co-coordinator.&lt;/p&gt;

&lt;p&gt;In this role, I co-lead (along with Arjan Tijms) the Jakarta EE Platform project, which is responsible for delivering the finished Jakarta EE specification (and component specifications), the corresponding TCK, and at least on ratifying compatible implementation for all of the specifications. Importantly, there need not be one single monolithic implementation that satisfies all the component TCKs at the same time, but there must be one single monolithic implementation that passes the Platform TCK.&lt;/p&gt;

&lt;p&gt;In the spirit of transparency that I was fortunate enough to start over &lt;a href=&quot;https://www.ridingthecrest.com/blog/2004/06/28/welcome-javaserver-tm-faces-implementation-project.html&quot;&gt;two decades ago&lt;/a&gt;, this blog post examines how well the &lt;a href=&quot;https://jakartaee.github.io/platform/&quot;&gt;Jakarta EE Platform project&lt;/a&gt; did during EE 11 in meeting one of the goals set for the Platform project by the &lt;a href=&quot;https://jakarta.ee/committees/steering/&quot;&gt;Steering Committee&lt;/a&gt;: incorporate developer feedback.&lt;/p&gt;

&lt;h3 id=&quot;underpromise-and-overdeliver&quot;&gt;Underpromise and overdeliver&lt;/h3&gt;

&lt;p&gt;Institutional memory is the way groups of humans learn from mistakes and avoid repeating them. By that definition, I hope we can all agree that institutional memory is important and worth preserving. Because software is &lt;a href=&quot;https://www.routledge.com/The-Laws-of-Software-Process-A-New-Model-for-the-Production-and-Management-of-Software/Armour/p/book/9780849314896&quot;&gt;executable knowledge&lt;/a&gt;, a very long running open-source software project is a special kind of institutional memory. A project that is a long running ecosystem of long running open-source projects is pretty much the pinnacle of special. With all that specialness in mind, what does it mean to incorporate developer feedback?&lt;/p&gt;

&lt;p&gt;It is far easier to show responsiveness to developer feedback when the possible costs of a committing a mistake are contained within a single project. In light of the high possible costs, the Jakarta EE 11 platform project was intentionally modest with our goals for incorporating developer feedback. This is our implementation of the tried and true strategy of “underpromise and overdeliver”.&lt;/p&gt;

&lt;p&gt;Leading up to Jakarta EE 11, we conducted an open community discussion on requirements for Jakarta EE 11 and captured them in this &lt;a href=&quot;https://docs.google.com/document/d/1m-dkvbL0iFFzitO4vt1SVq6GGSJyFdCDM2NU_FzGS10/edit#heading=h.il1isyaqw4eb&quot;&gt;Jakarta EE 11 Discussion&lt;/a&gt; document. Let’s review the community input we received, which was primarily developer-driven, and see how we did in EE11.&lt;/p&gt;

&lt;h3 id=&quot;underpromise&quot;&gt;Underpromise&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta Data&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta NoSQL&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Adopt Java SE 11, 17, 21 new features and Breaking Changes&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Virtual Threads&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TCK Refactoring&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CDI Centric&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;CDI replacing managed beans&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI repleacing EJB&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Resolve redundant HTTP stacks: Servlet and REST&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MicroProfile and Jakarta Alignment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CORS support&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta Config&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make it easier to migrate from one vendor to another&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mixed-delivery&quot;&gt;Mixed delivery&lt;/h3&gt;

&lt;p&gt;I’m going to group the delivery in four buckets: over-delivered, delivered, somewhat delivered, did not deliver.&lt;/p&gt;

&lt;h4 id=&quot;over-delivered&quot;&gt;Over-delivered&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Jakarta Persistence - programmatic configuration instead of persistence.xml and a lot more &lt;a href=&quot;https://gavinking.substack.com/p/a-summary-of-jakarta-persistence&quot;&gt;Gavin King blog post&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Jakarta Security - dynamically choose an authentication mechanism &lt;a href=&quot;https://github.com/jakartaee/security/issues/311&quot;&gt;security-311&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;delivered&quot;&gt;Delivered&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta Data&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Yes, this new specification is present in the platform.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Adopt Java SE 11, 17, 21 new features and Breaking Changes.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Yes, there are numerous specs that take advantage of new language features from 11 - 21.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;TCK Refactoring (we will deliver this. We’re holding the release for it).&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The Jakarta EE Platform TCK is a vital software component for delivering the value proposition of IT investment stability on the scale of decades. The software of the TCK has been accruing technical debt due to lack of maintenance investment. In Jakarta EE 11 we are bringing the TCK up to date with the state of the art of testing tools. This investment will enable better compatibility testing and lower the barrier to adding more tests as the Jakarta EE platform evolves.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API Flexibility, i.e. no more Umbrella JARs.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;No more questions like “do I have to wait for Jakarta EE xx” to have this feature?&lt;/li&gt;
      &lt;li&gt;Jakarta EE Platform APIs are now just a collection of default APIs.&lt;/li&gt;
      &lt;li&gt;Individual specs can be excluded or upgraded by the users as they wish,&lt;/li&gt;
      &lt;li&gt;New specs can be added as well.&lt;/li&gt;
      &lt;li&gt;This makes Jakarta EE platform as flexible as Spring Boot, but without having the implementation baggage in your application, the best of both worlds!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;somewhat-delivered&quot;&gt;Somewhat delivered&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Virtual Threads&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The concurrency specification has rigorously specified annotation attribute that requires implementations to take advantage of virtual threads if it is available in the runtime. If you’re running on Java 21 or higher, you get virtual threads when you use the annotation attribute. If you’re running on 17, you don’t.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CDI Centric&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;CDI replacing managed beans.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;We did&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@ManagedBean&lt;/code&gt; annotation.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Move the “integration” parts of CDI from the CDI spec to the platform spec.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;Jakarta Concurrency adds scheduling to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Asynchronous&lt;/code&gt; annotation to replace the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Scheduled&lt;/code&gt; annotation on EJBs &lt;a href=&quot;https://github.com/jakartaee/concurrency/pull/271&quot;&gt;concurrency-271&lt;/a&gt;&lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Injecting Concurrency resources into CDI beans instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Resource&lt;/code&gt; in an EJB &lt;a href=&quot;https://github.com/jakartaee/concurrency/pull/348&quot;&gt;concurrency-348&lt;/a&gt;.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Removed managed beans support in Jakarta REST.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;Qualifiers for persistence units in Persistence - allow injecting persistence context in a CDI-idiomatic way.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;New Java features&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;records as embeddables and IDs in Jakarta Persistence.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;records in Expression Language.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;records in Validation (formerly Bean Validation) &lt;a href=&quot;https://github.com/jakartaee/validation-spec/pull/275&quot;&gt;validation-275&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Flow API in Concurrency &lt;a href=&quot;https://github.com/jakartaee/concurrency/pull/368&quot;&gt;concurreny-368&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MicroProfile and Jakarta Alignment&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;We did&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;Create the Jakarta Security MicroProfile Security bridge spec.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;did-not-deliver&quot;&gt;Did not deliver&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta NoSQL&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This did not pass the ballot at the beginning of the EE 11 development cycle. In my opinion, the reasons were non-technical, and therefore can be resolved for EE 12.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Resolve redundant HTTP stacks: Servlet and REST&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This is a very big one. In my opinion, it would take a major vendor standing behind this idea and dedicating significant resources to make it happen, likely with donating work to competitors so they could also do the same.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CORS support&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This one did not even emerge on my radar.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Jakarta Config&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This one seems to be stuck in a “MicroProfile Config is good enough”, and thus is falling between the cracks. I think we’d have to convince the MicroProfile project to allow this to move from MicroProfile to the Jakarta EE Core Profile specification.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make it easier to migrate from one vendor to another&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This one is antithetical to the business interests of each vendor, so I don’t see this one getting much attention.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;Let’s get quantitative. For each item in the &lt;strong&gt;Underpromise&lt;/strong&gt; list, I’ll give us a letter grade. A for over-delivered or delivered, B for somewhat delivered, D for did not deliver.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Feedback to incorporate&lt;/td&gt;
      &lt;td&gt;Grade&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
  &lt;tfoot&gt;
    &lt;tr&gt;
      &lt;td&gt;Jakarta Data&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Jakarta NoSQL&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adopt Java SE 11, 17, 21 new features and Breaking Changes&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Virtual Threads&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TCK Refactoring&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CDI Centric&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Resolve redundant HTTP stacks: Servlet and REST&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MicroProfile and Jakarta Alignment&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CORS support&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Jakarta Config&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Make it easier to migrate from one vendor to another&lt;/td&gt;
      &lt;td&gt;D&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tfoot&gt;
&lt;/table&gt;

&lt;p&gt;With this list, we only scored a 2.54 GPA. Not so great. If we strike from the list the developer feedback requests that I judge are not realistic to include (CORS, Redundant HTTP stacks, Jakarta Config, Make it easier to migrate from one vendor to another), we get a better grade: 3.43. Not bad, but we have room to grow.&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">Ed’s JavaLand 2024 Session Picks</title><link href="/blog/2024/03/02/javaland-2024-picks.html" rel="alternate" type="text/html" title="Ed’s JavaLand 2024 Session Picks" /><published>2024-03-02T20:20:00-05:00</published><updated>2024-03-02T20:20:00-05:00</updated><id>/blog/2024/03/02/javaland-2024-picks</id><content type="html" xml:base="/blog/2024/03/02/javaland-2024-picks.html">&lt;p&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns/eds-javaland-2024-session-picks-23cd&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m very blessed to have the opportunity to speak at the 10th anniversary JavaLand conference. It will be very different to not be at PhantasiaLand this year, but I am so fortunate to have been there all the previous years. It’s just as well since I was starting to not be able to handle the Black Mamba roller coaster anymore.  Also, I’m hoping it takes less time to walk between sessions at this &lt;a href=&quot;https://thevendry.com/venue/197499/nurburgring-nurburg-germany&quot;&gt;new venue&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since this is the tenth anniversary of JavaLand, and I have had the extreme good fortune at presenting at every one of them, I dug up the links of all my previous session picks posts. See how far we’ve come together!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2022/02/15/javaland-2022-picks.html&quot;&gt;2022&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2019/03/11/javaland-2019-picks.html&quot;&gt;2019&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2018/03/12/javaland-holly-cummins.html&quot;&gt;2018&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2017/02/27/javaland-2017-picks.html&quot;&gt;2017&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2015/01/15/javaland-2015-conference-picks.html&quot;&gt;2015&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;/blog/2014/03/03/eds-javaland-2014-picks.html&quot;&gt;2014&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All times in local time zone in JavaLand.  See &lt;a href=&quot;https://www.javaland.eu/de/programm/&quot;&gt;the program&lt;/a&gt; for more details on each session.&lt;/p&gt;

&lt;h3 id=&quot;tuesday-09-april-2024&quot;&gt;Tuesday, 09 April 2024&lt;/h3&gt;

&lt;h4 id=&quot;0830---0940-ringacademy-rest-vs-grpc&quot;&gt;08:30 - 09:40 ring°academy REST vs. gRPC&lt;/h4&gt;

&lt;p&gt;The first slot before Fried’s famous Begrüßung is unenviable, from a speaker’s perspective, but there were some great ones. I chose the REST vs gRPC talk from &lt;a href=&quot;https://www.linkedin.com/in/sebastian-tiemann-467206263/?originalSubdomain=de&quot;&gt;Sebastian Tiemann&lt;/a&gt;. It looks hard core technical. Both REST and gRPC are venerable ancient technologies at this point, so it’s amazing how absolutely essential they still are. Let’s see what Sebastian has to say.&lt;/p&gt;

&lt;h4 id=&quot;0930---1040-ringarena-fried-begrüßung-and-opening-keynote&quot;&gt;09:30 - 10:40 ring°arena Fried Begrüßung and opening Keynote&lt;/h4&gt;

&lt;p&gt;I’m sure Fried will pull out all the stops for the 10th anniversary of JavaLand. The actual keynote looks great too. I don’t know &lt;a href=&quot;https://www.linkedin.com/in/shelley-lambert-6120961/?originalSubdomain=ca&quot;&gt;Shelly Lambert&lt;/a&gt;, but the philosophy of being self-aware and focusing on improvement is very good to learn and apply.&lt;/p&gt;

&lt;h4 id=&quot;1100---1140-ringarena-modern-java-in-action&quot;&gt;11:00 - 11:40 ring°arena Modern Java in Action&lt;/h4&gt;

&lt;p&gt;When I spoke of the great job that advocates are doing in my &lt;a href=&quot;https://www.heise.de/hintergrund/Ed-Burns-Java-kann-jede-andere-aktuelle-Sprache-in-den-Schatten-stellen-9636703.html&quot;&gt;pre-conference interview on Heise.de&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/nipafx&quot;&gt;Nicolai Parlog&lt;/a&gt;, was one of the ones I had in mind. It’s so important to show only the bits of Java that represent current recommended usage, and gloss over, or even omit entirely the parts that still remain for backward compatibility rather than being correct to continue to use. I’m confident Nicolai will do this.&lt;/p&gt;

&lt;h4 id=&quot;1200---1240-bitburger-event-center-teil-b-prepare-for-jakarta-ee-11&quot;&gt;12:00 - 12:40 Bitburger Event-Center Teil B Prepare for Jakarta EE 11&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20240302-bitburburger-edburns.jpg&quot; width=&quot;200&quot; alt=&quot;Author enjoying Bitburger 0.0&quot; style=&quot;float: left;&quot; /&gt; As a longtime fan of Das gute Bitburger Pils, I’m excited that my first of three back-to-back talks on Tuesday is in the Bitburger Event Center. I’m confident that part B is the best part.&lt;/p&gt;

&lt;p&gt;My talk is Prepare for Jakarta EE 11. I am giving this talk on behalf of &lt;a href=&quot;https://twitter.com/ivar_grimstad&quot;&gt;Ivar Grimstad&lt;/a&gt; due to Ivar being at the very poorly scheduled, from a JavaLand attendee’s perspective, &lt;a href=&quot;https://devnexus.org/&quot;&gt;DevNexus&lt;/a&gt;. However, I’m well qualified to give the talk because I’m the &lt;a href=&quot;https://projects.eclipse.org/content/project-lead-election-edward-burns-jakarta-ee-platform&quot;&gt;release co-coordinator for Jakarta EE 11&lt;/a&gt;. Come to this talk to hear what’s new in the very soon-to-be-released Jakarta EE 11.&lt;/p&gt;

&lt;p&gt;If I wasn’t giving a talk in this timeslot, I’d attend visit &lt;strong&gt;Nürburgring Hotel Grid 1 - 3&lt;/strong&gt; for “The (Unknown) Nifty Details of Maven Plugin Configuration” by &lt;a href=&quot;https://twitter.com/khmarbaise&quot;&gt;Karl Heinz Marbaise&lt;/a&gt;. Maven plugins are super powerful, and usable in both Maven and Gradle. But how much do you know about getting the most from the plugins you use? This talk has the answers.&lt;/p&gt;

&lt;h4 id=&quot;1300---1430-nürburgring-hotel-grid-4-ist-meine-java-anwendung-bereit-für-ide-cloud-wass-kann-ich-wie-migrieren&quot;&gt;13:00 - 14:30 Nürburgring Hotel Grid 4 Ist meine Java-Anwendung bereit für ide Cloud? Wass kann ich wie migrieren?&lt;/h4&gt;

&lt;p&gt;I’m delighted to have the opportunity to present this session with my colleague and longtime collaborator &lt;a href=&quot;https://twitter.com/skriemhild&quot;&gt;Sandra Ahlgrimm&lt;/a&gt;. In this new-to-JavaLand format 80-minute session. We’ll cover how to get your Jakarta EE application into the cloud, on App Service, Container Apps, AKS, ARO, and VMs.&lt;/p&gt;

&lt;p&gt;If I wasn’t giving a talk in this timeslot, I’d visit &lt;strong&gt;ring°arena&lt;/strong&gt; to attend Der Mensch in Mittlepunkt: Moderne Developer Experience im Enterprise-Context, by &lt;a href=&quot;https://www.f-i.de/Ueber-uns/mehralsTech/TeamFI/People-Stories/Nico-Enking&quot;&gt;Nico Enking&lt;/a&gt; and &lt;a href=&quot;https://www.linkedin.com/in/jan-christoph-schlieker/?originalSubdomain=de&quot;&gt;Jan-Christoph Schlieker&lt;/a&gt;. This session looks like it will introduce the role of a developer experience curator in the context of enterprise software development. This role seems like it can really help increase the success of software projects.&lt;/p&gt;

&lt;p&gt;Due to the 80-minute format of my session, there’s time for another if you don’t want to attend it. In this case, I’d recommend Philosophy4Devs by &lt;a href=&quot;https://twitter.com/ruezd&quot;&gt;Rüdiger zu Dohna&lt;/a&gt;. Do any readers remember famous fluff talker &lt;a href=&quot;https://twitter.com/tedneward&quot;&gt;Ted Neward&lt;/a&gt;? I recall Ted was very proud of his philosophy background. Considering how well he’s done for himself, you may want to check out this talk.&lt;/p&gt;

&lt;h4 id=&quot;1500---1540-ringkino-pair-programming-with-github-copilot&quot;&gt;15:00 - 15:40 ring°kino Pair Programming with GitHub Copilot&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/fbascheper&quot;&gt;Frederieke Scheper&lt;/a&gt; promises to show us how well GitHub Copilot delivers on its promise to let you “focus on solving bigger problems by spending less time creating boilerplate and repetitive code.” I’ve used it myself, and I can say it does pretty well at that, for many classes of problem. Also, no slides. Venkat style!&lt;/p&gt;

&lt;h4 id=&quot;1500---1640-mediacenter-continuous-integration-and-continuous-delivery-cicd-for-jakarta-ee-applications-or-nürburgring-hotel-grid-1---3-going-aot-everything-you-need-to-know-about-graalvm-for-java-applications&quot;&gt;15:00 - 16:40 media°center Continuous Integration and Continuous Delivery (CI/CD) for Jakarta EE Applications or Nürburgring Hotel Grid 1 - 3 Going AOT: Everything you need to know about GraalVM for Java Applications&lt;/h4&gt;

&lt;p&gt;This slot conflicts with my 16:00 talk “Developer Career Masterplan”, but if I wasn’t giving that talk, I’d absolutely go to one of these two.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Continuous Integration and Continuous Delivery (CI/CD) for Jakarta EE Applications&lt;/li&gt;
  &lt;li&gt;Going AOT: Everything you need to know about GraalVM for Java Applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The CI/CD one from Jakarta EE expert &lt;a href=&quot;https://www.udemy.com/user/salmankhan&quot;&gt;Luqman Saeed&lt;/a&gt;. In the nineteen years since the introduction of Hudson, CI/CD has gone from being the sign of a mature software development shop to an absolutely must-have way that work is done. Even so, it’s still not easy to perform at scale. This talk promises to show how to do it with Jakarta EE applications.&lt;/p&gt;

&lt;p&gt;The GraalVM one from &lt;a href=&quot;https://twitter.com/alina_yurenko&quot;&gt;Alina Yurenko&lt;/a&gt; is a hot topic and Alina is a great and very experienced speaker. I like how Alina will focus on the production aspects. If I was attending, I’d be keen to ask about Project Leyden and other aspects of how one handles debugging of a native Java app.&lt;/p&gt;

&lt;h4 id=&quot;1600---1640-ringarena-developer-career-masterplan-build-your-path-to-senior-level-and-beyond&quot;&gt;16:00 - 16:40 ring°arena Developer Career Masterplan: Build your path to senior level and beyond&lt;/h4&gt;

&lt;p&gt;Way back in 2008, I wrote a book where I interviewed a bunch of successful programmers and asked them all about their professional journey. My pals Heather and Bruno have taken a similar approach but supplemented it with their own insights. I had the honor of being on the other side of the microphone for this new book. After having read it, I can say it’s a great read. If you want to see what it’s about, come to this talk.&lt;/p&gt;

&lt;p&gt;If I wasn’t giving a talk at this time, I’d visit &lt;strong&gt;ring°academy&lt;/strong&gt; to attend NEWCOMER: C4 - Documentation to blow (up) your mind! The talk will introduce the C4 model for documentation. I’d love to see what “diagrams as code” is all about. I’ve seen the promise of similar systems since the late 1990s, but so far none of them have really had a lasting impact. Maybe this time it’s different.&lt;/p&gt;

&lt;h4 id=&quot;1700---1740-bitburger-event-center-teil-b-was-jeder-java-entwickler-über-strings-wissen-sollte&quot;&gt;17:00 - 17:40 Bitburger Event-Center Teil B Was Jeder Java-Entwickler über Strings wissen Sollte&lt;/h4&gt;

&lt;p&gt;Strings? In 2024? You bet! The humble String class is so ubiquitous yet has seen so many evolutions (especially for a final class) over the years it’s worth a whole session. Also, this supports my point with Nicolai Parlog’s session above. Yes, Java is old, but it is also getting better all the time. With this session from JSF Expert Group alumnus &lt;a href=&quot;https://www.ostfalia.de/cms/de/pws/bernd-mueller/index.html&quot;&gt;Bernd Müller&lt;/a&gt; you can see how this applies to String.&lt;/p&gt;

&lt;h4 id=&quot;1800---1840-ringacademy-newcomer-ai-ethics-in-software-engineering&quot;&gt;18:00 - 18:40 ring°academy NEWCOMER: AI Ethics in Software Engineering&lt;/h4&gt;

&lt;p&gt;After observing firsthand some of the impact of the roll out of GitHub copilot on secondary school computer science education, I’m keenly interested in this topic. &lt;a href=&quot;https://www.linkedin.com/in/moritz-schmidt-3a3131221/?originalSubdomain=de&quot;&gt;Moritz Schmidt&lt;/a&gt; will explore the hoary topic of the ethical impact of AI.&lt;/p&gt;

&lt;h3 id=&quot;wednesday-10-april-2024&quot;&gt;Wednesday, 10 April 2024&lt;/h3&gt;

&lt;h4 id=&quot;0900---0940-ringkino-dont-be-afraid-of-the-final-boss-explain-ideas-for-improvement-to-management&quot;&gt;09:00 - 09:40 ring°kino Don’t be afraid of the final boss: Explain ideas for improvement to management&lt;/h4&gt;

&lt;p&gt;Don’t miss this one. This touches on a topic I addressed on &lt;a href=&quot;/blog/2019/04/21/tdc-floripa-career-tips-from-someone-who-knows-a-lot-of-rockstar-programmers.2019.html&quot;&gt;2019-04-21&lt;/a&gt;: “Communicating your value add”. That post was about communicating your value add as an individual contributor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Working for big companies such as IBM, SGI, Sun, and Oracle, I’ve had the chance to sample many useful corporate trainings. Even the most mundane of these, such as “Insider Trading”, offer at least one nugget of novelty. The corporate training I want to talk about here is one I took at Sun at least twelve years ago. It was called “Communicating Your Value Add” and it was all about how to articulate your contribution to your company at performance review time. The class included a handout, “Behavior/Performance-Based Questions” whose complete text I reproduce below. For discussion and reference, let’s call this perf_handout.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This session from &lt;a href=&quot;https://www.linkedin.com/in/cn-seifert/?originalSubdomain=de&quot;&gt;Christian Seifert&lt;/a&gt; shows how to do that for your entire team. Put the two together and you have a powerful technique for showing your contribution to the bottom line. Such efforts make it more painful for them to lay you off, and also make it easier for you to get a better job someplace else, should that be appropriate.&lt;/p&gt;

&lt;h4 id=&quot;1000---1040-nürburgring-hotel-grid-1---3-improving-your-skills-with-the-debugger&quot;&gt;10:00 - 10:40 Nürburgring Hotel Grid 1 - 3 Improving your skills with the debugger&lt;/h4&gt;

&lt;p&gt;The program committee did a great job this year. With &lt;a href=&quot;#1700---1740-bitburger-event-center-teil-b-was-jeder-java-entwickler-über-strings-wissen-sollte&quot;&gt;Bernd’s Strings talk&lt;/a&gt; and this one from &lt;a href=&quot;https://sessionize.com/bouke-nijhuis&quot;&gt;Bourke Nijhuis&lt;/a&gt;, you really get some much needed fundamentals. Even if you are late-in-career like I am, continually reinforcing fundamentals is very important. &lt;img src=&quot;/blog/assets/20240306-fundamentals.gif&quot; width=&quot;200&quot; alt=&quot;Spring training fundamentals&quot; style=&quot;float: right;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;1100---1140-ringarena-die-unsichtbare-hand-im-code&quot;&gt;11:00 - 11:40 ring°arena Die unsichtbare Hand im Code&lt;/h4&gt;

&lt;p&gt;Of course &lt;a href=&quot;https://twitter.com/hendrikEbbers&quot;&gt;Hendrik Ebbers&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/SandraParsick&quot;&gt;Sandra Parsick&lt;/a&gt; will do an amazing job with the community keynote. I don’t know how they are going to follow-up &lt;a href=&quot;https://www.doag.org/de/home/news/javaland-2023-community-keynote-teilt-eure-geschichte/&quot;&gt;last year’s impactful installment&lt;/a&gt;, which dealt with some weighty topics. As an insider at one of these IT-Giganten, I’ll be curious to see what they think is really happening inside our “Geheime Räte” (hint, at least for my employer, it is always customer obsession).&lt;/p&gt;

&lt;h4 id=&quot;1200---1240-coca-cola-businesslounge-a-fun-and-absurd-introduction-to-vector-databases&quot;&gt;12:00 - 12:40 Coca-Cola business°lounge A fun and absurd introduction to Vector Databases&lt;/h4&gt;

&lt;p&gt;My day job is mostly about the prosaic, but critical revenue and generating legacy Java apps. It’s far away from new stuff like Vector Databases. As such, I need to expend extra effort to stay up on such things. This talk from &lt;a href=&quot;https://www.crunchbase.com/person/alexander-chatzizacharias&quot;&gt;Alexander Chatzizacharias&lt;/a&gt; is a great and time-efficient way to make me smarter about it.&lt;/p&gt;

&lt;h4 id=&quot;1300---1340-bitburger-event-center-teil-b-pimp-your-jakarta-ee-applications&quot;&gt;13:00 - 13:40 Bitburger Event-Center Teil B Pimp your Jakarta EE Applications&lt;/h4&gt;

&lt;p&gt;I view this talk as an essential supplement to &lt;a href=&quot;#1200---1240-bitburger-event-center-teil-b-prepare-for-jakarta-ee-11&quot;&gt;my 12:00 - 12:40 Tuesday talk&lt;/a&gt;. &lt;a href=&quot;https://twitter.com/dirkweil&quot;&gt;Dirk Weil&lt;/a&gt; looks like he’s going to cover lots of great stuff, including migration with OpenRewrite. I hope my booth duty schedule permits me to attend.&lt;/p&gt;

&lt;h4 id=&quot;1400---1440-ringarena-prompt-engineering-für-entwickler&quot;&gt;14:00 - 14:40 ring°arena Prompt-Engineering für Entwickler&lt;/h4&gt;

&lt;p&gt;When I first started using GPT for serious work questions, I thought the phrase “prompt engineering” was far too grand a term for what I was doing. However, after working more and more with it, I realize there is a skill to it, and it pays to develop the skill. Check out this talk from my old pal &lt;a href=&quot;https://twitter.com/RalfDMueller&quot;&gt;Ralf Müller&lt;/a&gt; and become a prompt engineering pro.&lt;/p&gt;

&lt;h4 id=&quot;1500---1540-bitburger-event-center-teil-b-learn-pattern-matching-through-puzzlers&quot;&gt;15:00 - 15:40 Bitburger Event-Center Teil B Learn Pattern Matching Through Puzzlers&lt;/h4&gt;

&lt;p&gt;This session from my old pal and JSF Expert Group alumnus &lt;a href=&quot;https://twitter.com/cayhorstmann&quot;&gt;Cay Horstmann&lt;/a&gt; covers yet another amazing fundamental programming language technology brought to Java developers. I’m pretty sure &lt;a href=&quot;https://twitter.com/nipafx&quot;&gt;Nicolai Parlog&lt;/a&gt; will have touched on it in his session on &lt;a href=&quot;#1100---1140-ringarena-modern-java-in-action&quot;&gt;Tuesday&lt;/a&gt;, but Cay, as a professional educator, will give you a deep understanding of this powerful, yet tricky to use, feature.&lt;/p&gt;

&lt;h4 id=&quot;1600---1640-bitburger-event-center-teil-b-ifc--infrastructure-from-code&quot;&gt;16:00 - 16:40 Bitburger Event-Center Teil B IfC – Infrastructure FROM code&lt;/h4&gt;

&lt;p&gt;A lot of my job at Microsoft is working with Azure’s Infrastructure As Code (IaC) technology, Bicep. This second session from &lt;a href=&quot;https://twitter.com/ruezd&quot;&gt;Rüdiger zu Dohna&lt;/a&gt; promises to leverage that concept even further. Historically, I’ve noticed that techniques which build on top of powerful abstractions can really increase productivity. IaC is definitely a very powerful abstraction, so I want to see what this one’s about.&lt;/p&gt;

&lt;h4 id=&quot;1700---1740-ringarena-open-source-contribution---why-is-it-worth-the-hassle&quot;&gt;17:00 - 17:40 ring°arena Open-Source Contribution - Why is it worth the hassle?&lt;/h4&gt;

&lt;p&gt;My lived experience, and the experience of the authors and experts behind &lt;a href=&quot;#1600---1640-ringarena-developer-career-masterplan-build-your-path-to-senior-level-and-beyond&quot;&gt;Heather and Bruno’s book&lt;/a&gt;, testify that it’s worth the hassle. If you needed any more evidence, come to this session from &lt;a href=&quot;https://www.payara.fish/teamblog/author/dominika/&quot;&gt;Dominika Tarsarz-Sochacka&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;thursday-11-april-2024&quot;&gt;Thursday, 11 April 2024&lt;/h3&gt;

&lt;h4 id=&quot;0900---1700-nürburgring-hotel-grid-3-automated-code-refactoring-with-openrewrite&quot;&gt;09:00 - 17:00 Nürburgring Hotel Grid 3 Automated Code Refactoring with OpenRewrite&lt;/h4&gt;

&lt;p&gt;I’ve seen lots of customers asking about the kind of thing being addressed in this full day workshop from &lt;a href=&quot;https://www.linkedin.com/in/sebastian-konieczek/?originalSubdomain=de&quot;&gt;Sebastian Konieczek&lt;/a&gt;. The OpenRewrite framework, from &lt;a href=&quot;https://moderne.io/&quot;&gt;Moderne&lt;/a&gt; (formerly of Netflix) is a powerful idea worth learning about.&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">Maven basic debugging techniques: plugin invocation starts</title><link href="/blog/2023/12/20/maven-basic-debugging-techniques.html" rel="alternate" type="text/html" title="Maven basic debugging techniques: plugin invocation starts" /><published>2023-12-20T13:00:00-05:00</published><updated>2023-12-20T13:00:00-05:00</updated><id>/blog/2023/12/20/maven-basic-debugging-techniques</id><content type="html" xml:base="/blog/2023/12/20/maven-basic-debugging-techniques.html">&lt;h2 id=&quot;problem-statement&quot;&gt;Problem statement&lt;/h2&gt;

&lt;p&gt;I have been blessed with the responsibility to be the release co-coordinator for &lt;a href=&quot;https://jakarta.ee/specifications/platform/11/&quot;&gt;Jakarta EE 11&lt;/a&gt;. As part of this role I must ensure the milestone and final releases are produced. This involves refining the steps in the &lt;a href=&quot;https://github.com/jakartaee/platform/wiki/Release_Process&quot;&gt;Release Process&lt;/a&gt;. A big step in this process is producing the API artifacts for maven central.  Of course, this involves invoking a maven build on this &lt;a href=&quot;https://github.com/jakartaee/jakartaee-api/blob/master/pom.xml&quot;&gt;POM&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This POM is only invoked in the infrequent event of Jakarta EE releases, and thus is subject to bitrot. Of course, the right fix is to make releases more frequent. I’m working on that, and it’s a big job. In the meantime, we have this big POM. What happens if there is a problem and you need to debug it?&lt;/p&gt;

&lt;p&gt;I observe that using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-X&lt;/code&gt; with this POM produces too much output so that the build takes intractably long and the generated output is over 1GB of text.&lt;/p&gt;

&lt;p&gt;I would like to be able to target the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-X&lt;/code&gt; to just where the problem is? But how do I even identify that?&lt;/p&gt;

&lt;h2 id=&quot;practical-solution-1-grep-through-the-build-output&quot;&gt;Practical solution 1: grep through the build output&lt;/h2&gt;

&lt;p&gt;I realize this is beginner level Maven stuff, but I’m capturing it here so AI can eventually ingest it and help others.&lt;/p&gt;

&lt;details&gt;
    &lt;summary&gt;Aside, how to tell if your website is training AI?&lt;/summary&gt;
    This article from The Washington Post has a text field where you can enter your site and it will show you how highly ranked the site is in the C4 dataset, which apparently was used to train some AI somewhere.  To find the text field, see &lt;a href=&quot;https://www.washingtonpost.com/technology/interactive/2023/ai-chatbot-learning/&quot;&gt;Is your website training AI?&lt;/a&gt; .

&lt;img src=&quot;/blog/assets/20231220-ridingthecrest-in-c4.png&quot; alt=&quot;Ed's website in the C4 dataset&quot; /&gt;
&lt;/details&gt;

&lt;p&gt;So, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-X&lt;/code&gt; is not useful until you have the ability to run just the sub-module that has the problem. This technique helped us identify the sub-module.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-B&lt;/code&gt; option to disable the color coding.&lt;/li&gt;
  &lt;li&gt;Save the output to a file, say &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message.txt&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Use this command to output the message that is output by each maven plugin as it is being executed in time. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep &quot;^\[INFO\] --- &quot; message.txt&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When we did this, we saw this output when invoking &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn -B -Pstaging,oss-release -DskipTests -Ddoclint=none -DstagingRepositoryId=jakartaplatform-1036 -Dmaven.javadoc.failOnError=false clean package&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Each row in this output indicates:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the plugin name&lt;/li&gt;
  &lt;li&gt;the version of that plugin&lt;/li&gt;
  &lt;li&gt;the goal being given to that plugin&lt;/li&gt;
  &lt;li&gt;A statement in parentheses that is either:
    &lt;ul&gt;
      &lt;li&gt;the content of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;id&amp;gt;&lt;/code&gt; element.&lt;/li&gt;
      &lt;li&gt;some default name output by the plugin.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;A statement after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@&lt;/code&gt; that is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/code&gt; of the POM in which that plugin invocation is declared.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[INFO] --- clean:3.2.0:clean (default-clean) @ jakartaee-api-parent ---
[INFO] --- enforcer:3.4.1:enforce (enforce-maven) @ jakartaee-api-parent ---
[INFO] --- resources:2.4.3:copy-resources (copy-javadoc-resources) @ jakartaee-api-parent ---
[INFO] --- cyclonedx:2.7.9:makeAggregateBom (default) @ jakartaee-api-parent ---
[INFO] --- source:2.1:jar-no-fork (attach-sources) @ jakartaee-api-parent ---
[INFO] --- javadoc:3.1.0:jar (attach-javadocs) @ jakartaee-api-parent ---
[INFO] --- clean:3.2.0:clean (default-clean) @ jakarta.jakartaee-bom ---
[INFO] --- enforcer:3.4.1:enforce (enforce-maven) @ jakarta.jakartaee-bom ---
[INFO] --- resources:2.4.3:copy-resources (copy-javadoc-resources) @ jakarta.jakartaee-bom ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[INFO] --- compiler:3.8.1:testCompile (default-testCompile) @ jakarta.jakartaee-api ---
[INFO] --- surefire:3.0.0-M8:test (default-test) @ jakarta.jakartaee-api ---
[INFO] --- jar:2.4:jar (default-jar) @ jakarta.jakartaee-api ---
[INFO] --- cyclonedx:2.7.9:makeAggregateBom (default) @ jakarta.jakartaee-api ---
[INFO] --- source:2.1:jar-no-fork (attach-sources) @ jakarta.jakartaee-api ---
[INFO] --- glassfishbuild:3.2.28:generate-pom (generate-pom) @ jakarta.jakartaee-api ---
[INFO] --- javadoc:3.1.0:jar (attach-javadocs) @ jakarta.jakartaee-api ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This enabled us to observe that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;attach-javadocs&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;execution&amp;gt;&lt;/code&gt; in the top level POM was causing the problem. We added a new invocation of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;maven-antrun-plugin&lt;/code&gt; and bound it to the&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[INFO] --- antrun:3.1.0:run (rewrite-problematic-sources) @ jakarta.jakartaee-api ---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;practical-solution-2-buildplan-maven-plugin&quot;&gt;Practical solution 2: buildplan-maven-plugin&lt;/h2&gt;

&lt;p&gt;Through an interesting chat with Bing Enterprise Chat, I reduced my 2nd order ignorance of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;buildplan-maven-plugin&lt;/code&gt; to be 1st order ignorance. It turns out this plugin exists and solves my problem.&lt;/p&gt;

&lt;p&gt;If I had run this on the top level POM: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list-phase&lt;/code&gt; I would have seen the plugin and phase information I sought.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[INFO] Build Plan for Jakarta EE API parent: 
process-resources -------------------------------------------------------
    + maven-resources-plugin | copy-javadoc-resources | copy-resources  
package -----------------------------------------------------------------
    + cyclonedx-maven-plugin | default                | makeAggregateBom
install -----------------------------------------------------------------
    + maven-install-plugin   | default-install        | install         
deploy ------------------------------------------------------------------
    + maven-deploy-plugin    | default-deploy         | deploy          
[INFO] 
[INFO] ---------------&amp;lt; jakarta.platform:jakarta.jakartaee-bom &amp;gt;---------------
[INFO] Building Jakarta EE API BOM 11.0.0-SNAPSHOT                        [2/5]
[INFO]   from jakartaee-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-bom ---
[INFO] Build Plan for Jakarta EE API BOM: 
process-resources ----------------------------------------------------------------
    + maven-resources-plugin      | copy-javadoc-resources | copy-resources      
package --------------------------------------------------------------------------
    + cyclonedx-maven-plugin      | default                | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom           | generate-pom        
verify ---------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts   | attach-all-artifacts
install --------------------------------------------------------------------------
    + maven-install-plugin        | default-install        | install             
deploy ---------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy         | deploy              
[INFO] 
[INFO] ------------&amp;lt; jakarta.platform:jakarta.jakartaee-core-api &amp;gt;-------------
[INFO] Building Jakarta EE Core Profile API 11.0.0-SNAPSHOT               [3/5]
[INFO]   from jakartaee-core-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-core-api ---
[INFO] Build Plan for Jakarta EE Core Profile API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
[INFO] 
[INFO] -------------&amp;lt; jakarta.platform:jakarta.jakartaee-web-api &amp;gt;-------------
[INFO] Building Jakarta EE Web Profile API 11.0.0-SNAPSHOT                [4/5]
[INFO]   from jakartaee-web-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-web-api ---
[INFO] Build Plan for Jakarta EE Web Profile API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + maven-antrun-plugin         | prepare-sources-web         | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
[INFO] 
[INFO] ---------------&amp;lt; jakarta.platform:jakarta.jakartaee-api &amp;gt;---------------
[INFO] Building Jakarta EE Platform API 11.0.0-SNAPSHOT                   [5/5]
[INFO]   from jakartaee-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-api ---
[INFO] Build Plan for Jakarta EE Platform API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + maven-antrun-plugin         | prepare-sources-web         | run                 
    + maven-antrun-plugin         | prepare-sources-platform    | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Problem statement</summary></entry><entry><title type="html">Azure DevOps cross organization daily task wrangling</title><link href="/blog/2023/11/23/azure-devops-task-wrangling.html" rel="alternate" type="text/html" title="Azure DevOps cross organization daily task wrangling" /><published>2023-11-23T23:10:00-05:00</published><updated>2023-11-23T23:10:00-05:00</updated><id>/blog/2023/11/23/azure-devops-task-wrangling</id><content type="html" xml:base="/blog/2023/11/23/azure-devops-task-wrangling.html">&lt;h2 id=&quot;problem-statement&quot;&gt;Problem statement&lt;/h2&gt;

&lt;p&gt;My employer has standardized on Azure DevOps Boards as the issue tracking system of record. I have become fond of this system and immensely respect its capabilities.  Due to my role, I end up with a very large number of work items assigned to me across a very diverse number of different Azure DevOps organizations. While an extension exists to support &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ms-eswm.crossaccountquery&amp;amp;targetId=5a766efb-e568-41d7-a401-fc09ace9b116&amp;amp;utm_source=vstsproduct&amp;amp;utm_medium=ExtHubManageList&quot;&gt;Cross Account Query&lt;/a&gt;, it has a significant and insurmountable limitation that the accounts being queried must have a uniform “schema” for Iteration Path and Area Path. This limitation is a fact of life in my role.&lt;/p&gt;

&lt;p&gt;This blog post shows my workaround that gives me the ability:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To see a comprehensive dashboard across the many different Azure DevOps organizations that contain work items assigned to me, so I can know which ones I need to work on in any given day.&lt;/li&gt;
  &lt;li&gt;To check them off task by task when I have done all I intend to do on that particular task today.&lt;/li&gt;
  &lt;li&gt;To reset the “done for today” status so I get a fresh dashboard the next day.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is not very elegant, but works for me. I’m open to suggestions for improvements. Please leave a comment if you have any ideas.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;For each Azure DevOps organization, write and save a query that shows the work items assigned to me.
Here are a screen grabs of two such queries.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/20231124-dd-query.png&quot; alt=&quot;Azure DevOps query in the dd board&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/20231124-em-query.png&quot; alt=&quot;Azure DevOps query in the em board&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Some things to note about these queries:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;The &lt;strong&gt;Area Path&lt;/strong&gt; values vary and are specific to the organization.&lt;/li&gt;
      &lt;li&gt;The &lt;strong&gt;Iteration Path&lt;/strong&gt; values vary, but both have &lt;strong&gt;@CurrentIteration&lt;/strong&gt;.&lt;/li&gt;
      &lt;li&gt;The &lt;strong&gt;State&lt;/strong&gt; values vary and are specific to the organization.&lt;/li&gt;
      &lt;li&gt;They both have a funny &lt;strong&gt;Tags&lt;/strong&gt; value: &lt;strong&gt;Does Not Contain&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;edburns_done-for-today&lt;/code&gt;. This tag is obviously named.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Write an anologous set of queries, but for the last clause the &lt;strong&gt;Tags&lt;/strong&gt; value is  &lt;strong&gt;Contains&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;edburns_done-for-today&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use the Daily Links chrome extension to cause all the saved queries in a new browser tab. Install the Daily Links extension from the &lt;a href=&quot;https://chrome.google.com/webstore/detail/bpmiffipgillbacdfnbkicndliejockp&quot;&gt;Chrome web store&lt;/a&gt;. This also works in Edge.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/assets/20231124-daily-links.png&quot; alt=&quot;Azure DevOps queries loaded by Daily Links extension&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;daily-wrangling&quot;&gt;Daily wrangling&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Start of day process.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Select the &lt;strong&gt;Daily Links&lt;/strong&gt; button in the browser.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;For each tab:&lt;/p&gt;

        &lt;ol&gt;
          &lt;li&gt;
            &lt;p&gt;Decide which of the tasks you will &lt;strong&gt;NOT&lt;/strong&gt;* be able to work on today.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Apply the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;edburns_done-for-today&lt;/code&gt; tag to those issues.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Re-run the query.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;End of day process.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Select the &lt;strong&gt;Daily Links&lt;/strong&gt; button in the browser.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;For each tab:&lt;/p&gt;

        &lt;ol&gt;
          &lt;li&gt;
            &lt;p&gt;Run the analogous “Contains done for today” query for that tab.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Use the multi-issue edit feature to remove that tag.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;problems-with-this-solution&quot;&gt;Problems with this solution&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;You have to write 2N queries.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You pollute the tagspace with information that is only relevant to you.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The act of resetting the “done for today” tag is high effort. I suspect there is a way to make a batch process that just does this with one action, but I have not invested in learning how.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The quality of the queries regarding their ability to convey the context of each task is up to the query author. In my implementation, I simply include &lt;strong&gt;Parent&lt;/strong&gt; next te &lt;strong&gt;Title&lt;/strong&gt; in the &lt;strong&gt;Column options&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Problem statement</summary></entry><entry><title type="html">macOS Catalina Zoom does not prompt for mic or camera permissions Solved</title><link href="/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset.html" rel="alternate" type="text/html" title="macOS Catalina Zoom does not prompt for mic or camera permissions Solved" /><published>2023-10-24T12:10:00-04:00</published><updated>2023-10-24T12:10:00-04:00</updated><id>/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset</id><content type="html" xml:base="/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset.html">&lt;h2 id=&quot;problem-statement&quot;&gt;Problem statement&lt;/h2&gt;

&lt;p&gt;Somewhere along the line, Zoom on macOS Catalina asked me for permission to use the mic or camera and I may have accidentally said no. How do I get it to prompt me again?&lt;/p&gt;

&lt;p&gt;I tried the usual measures of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tccutil reset Microphone&lt;/code&gt; but this returned a failure message. What’s going on?&lt;/p&gt;

&lt;p&gt;This blog post is my record of what I did to resolve the problem on macOS Catalina. Results are not guaranteed.&lt;/p&gt;

&lt;h2 id=&quot;root-cause&quot;&gt;Root cause&lt;/h2&gt;

&lt;p&gt;In my case, the root cause was the ownership of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/edburns/Library/Application Support/com.apple.TCC/TCC.db&lt;/code&gt; file was incorrect. This file must be owned by me. Instead it was owned by some other user number. I remember making some bulk ownership changes somewhere along the line.&lt;/p&gt;

&lt;h2 id=&quot;nutshell-solution&quot;&gt;Nutshell solution&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Do all the stuff that allows you to modify &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCC.db&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCC.db&lt;/code&gt; to me.&lt;/li&gt;
  &lt;li&gt;Restore all the stuff that prevents you from modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCC.db&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tccutil reset Microphone&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Perform the action in Zoom that caused it to prompt for permission.&lt;/li&gt;
  &lt;li&gt;Say &lt;strong&gt;Yes&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;detailed-solution&quot;&gt;Detailed solution&lt;/h3&gt;

&lt;h4 id=&quot;temporarily-disable-system-integrity-protection-sip&quot;&gt;Temporarily disable System Integrity Protection (SIP)&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Shut down and reboot in “Recovery mode”.
    &lt;ol&gt;
      &lt;li&gt;Shut down.&lt;/li&gt;
      &lt;li&gt;Hold down Command R while powering on.&lt;/li&gt;
      &lt;li&gt;Release when the Apple logo appears.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;When you get a menu bar, in the &lt;strong&gt;Utilities menu&lt;/strong&gt; select &lt;strong&gt;Terminal&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The terminal should open as root.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;csrutil disable&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Exit the terminal and quit the &lt;strong&gt;Terminal&lt;/strong&gt; app.&lt;/li&gt;
  &lt;li&gt;Restart.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;ensure-the-tccdb-has-the-correct-ownership&quot;&gt;Ensure the TCC.db has the correct ownership&lt;/h4&gt;

&lt;p&gt;For an apparently very helpful resource on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCC.db&lt;/code&gt; see &lt;a href=&quot;https://www.rainforestqa.com/blog/macos-tcc-db-deep-dive&quot;&gt;A deep dive into macOS TCC.db&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd ~Library/Application\ Support/com.apple.TCC&lt;/code&gt;
If you can’t do this, grant “Full disk access” to your terminal program. Look elsewhere for how to do that.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chown&lt;/code&gt; the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCC.db&lt;/code&gt; file to your userid.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; to get back to your home directory.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;re-enable-system-integrity-protection-sip&quot;&gt;Re-enable System Integrity Protection (SIP)&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Shut down and reboot in “Recovery mode”.
    &lt;ol&gt;
      &lt;li&gt;Shut down.&lt;/li&gt;
      &lt;li&gt;Hold down Command R while powering on.&lt;/li&gt;
      &lt;li&gt;Release when the Apple logo appears.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;When you get a menu bar, in the &lt;strong&gt;Utilities menu&lt;/strong&gt; select &lt;strong&gt;Terminal&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;The terminal should open as root.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;csrutil enable&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Exit the terminal and quit the &lt;strong&gt;Terminal&lt;/strong&gt; app.&lt;/li&gt;
  &lt;li&gt;Restart.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;run-the-tccutil-command&quot;&gt;Run the tccutil command&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tccutil reset Microphone&lt;/code&gt;. If you want to reset other permissions, there is a big schema of names.  To reset everything replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microphone&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;All&lt;/code&gt;. Case is sensitive.&lt;/li&gt;
  &lt;li&gt;You should see a message that indicates success.&lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">Problem statement</summary></entry><entry><title type="html">Diagnose outbound database connection problems with Liberty on Azure</title><link href="/blog/2023/07/24/tcpdump-liberty-aks.html" rel="alternate" type="text/html" title="Diagnose outbound database connection problems with Liberty on Azure" /><published>2023-07-24T13:10:00-04:00</published><updated>2023-07-24T13:10:00-04:00</updated><id>/blog/2023/07/24/tcpdump-liberty-aks</id><content type="html" xml:base="/blog/2023/07/24/tcpdump-liberty-aks.html">&lt;p&gt;Cross posted at &lt;a href=&quot;&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This self-contained blog post shows how you to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; to troubleshoot and diagnose outbound network connections from a local Liberty server to an Azure SQL Database.&lt;/p&gt;

&lt;p&gt;I was working on validating the steps in &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/aks/howto-deploy-java-liberty-app&quot;&gt;Deploy a Java application with Open Liberty or WebSphere Liberty on an Azure Kubernetes Service (AKS) cluster&lt;/a&gt; for use in an upcoming conference workshop. The workshop students would be given access to their own Ubuntu VMs and also their own Azure credits to execute the steps of the workshop. This is a very common pattern I have used many times in the past.&lt;/p&gt;

&lt;p&gt;While preparing the VM, the hosting environment for the VM started having trouble connecting to the external Internet, and thus could not access the Azure SQL Database. When starting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn liberty:run&lt;/code&gt;, I observed this error.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR   &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; CWWJP0015E: An error occurred &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the org.eclipse.persistence.jpa.PersistenceProvider persistence provider when it attempted to create the container entity manager factory &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the coffees persistence unit. The following error occurred: Exception &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;EclipseLink-4002] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Eclipse Persistence Services - 2.7.11.v20220804-52dea2a3c0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: org.eclipse.persistence.exceptions.DatabaseException
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Internal Exception: java.sql.SQLException: The TCP/IP connection to the host rwo010720nxf.database.windows.net, port 1433 has failed. Error: &lt;span class=&quot;s2&quot;&gt;&quot;Connect timed out. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall.&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; DSRA0010E: SQL State &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 08S01, Error Code &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Error Code: 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, when I ran &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn liberty:run&lt;/code&gt; on my local laptop with the same sample app code, I observed it was able to successfully connect to the database. Before concluding it was &lt;a href=&quot;https://hitchhikers.fandom.com/wiki/Somebody_Else%27s_Problem_Field&quot;&gt;Somebody Else’s Problem&lt;/a&gt;, I wanted to rule out any local firewall configuration on the VM.&lt;/p&gt;

&lt;p&gt;This was a matter of asking &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firewall-cmd&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--list-all&lt;/code&gt; rules.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# firewall-cmd --list-all&lt;/span&gt;
  target: default
  icmp-block-inversion: no
  interfaces: ens192
  sources: 
  services: cockpit dhcpv6-client ssh
  ports: 
  protocols: 
  forward: no
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Looks like no rules at all. That’s not it.&lt;/p&gt;

&lt;p&gt;Let’s look at outbound traffic on TCP port 1433.&lt;/p&gt;

&lt;p&gt;I forget where I found this tip, so I am recording it in this blog post for my own later referral. Yes, it’s obvious: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt;. There are probably better and more efficient ways to do this. But I work on so many different things at so many different levels of abstraction, I can’t remember the specifics. I have learned from rock star programmers I know: they accept their limitations and write things down.&lt;/p&gt;

&lt;h3 id=&quot;tcpdump-on-the-vm&quot;&gt;tcpdump on the VM&lt;/h3&gt;

&lt;p&gt;First we need to identify the network interface name. That’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ifconfig -a&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ibmuser@student java-app]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ifconfig &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
docker0: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4099&amp;lt;UP,BROADCAST,MULTICAST&amp;gt;  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255
        ether 02:42:14:3c:39:f9  txqueuelen 0  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX packets 0  bytes 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0 B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0 B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ens192: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 10.0.10.2  netmask 255.255.255.0  broadcast 10.0.10.255
        inet6 fe80::250:56ff:feb4:550c  prefixlen 64  scopeid 0x20&amp;lt;&lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        ether 00:50:56:b4:55:0c  txqueuelen 1000  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX packets 591136  bytes 846561034 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;807.3 MiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 21664  bytes 2609977 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.4 MiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10&amp;lt;host&amp;gt;
        loop  txqueuelen 1000  &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Local Loopback&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX packets 41  bytes 2429 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.3 KiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 41  bytes 2429 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2.3 KiB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Good news, that one is obvious. It must be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ens192&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, run the magic &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump -i ens192 port 1433&lt;/code&gt;. This will hang indefinitely. This will show nothing untill some traffic appears on port 1433.&lt;/p&gt;

&lt;p&gt;In a separate terminal, restart the app with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn liberty:run&lt;/code&gt;. This caused the following output to appear in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; window.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; ens192 port 1433
dropped privs to tcpdump
tcpdump: verbose output suppressed, use &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; or &lt;span class=&quot;nt&quot;&gt;-vv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;full protocol decode
listening on ens192, link-type EN10MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, capture size 262144 bytes
12:43:36.963152 IP student.51002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;2117028828, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330981707 ecr 0,nop,wscale 7], length 0
12:43:37.563057 IP student.51008 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330982307 ecr 0,nop,wscale 7], length 0
12:43:38.626345 IP student.51008 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330983371 ecr 0,nop,wscale 7], length 0
12:43:40.674361 IP student.51008 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330985419 ecr 0,nop,wscale 7], length 0
12:43:41.521620 IP student.51012 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;384691879, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330986266 ecr 0,nop,wscale 7], length 0
12:43:42.530322 IP student.51012 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;384691879, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330987275 ecr 0,nop,wscale 7], length 0
12:43:44.578290 IP student.51012 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;384691879, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330989323 ecr 0,nop,wscale 7], length 0
12:43:48.610335 IP student.51012 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;384691879, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330993355 ecr 0,nop,wscale 7], length 0
12:43:49.431704 IP student.44964 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;824660250, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330994176 ecr 0,nop,wscale 7], length 0
12:43:50.466320 IP student.44964 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.79.153.12.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;824660250, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330995211 ecr 0,nop,wscale 7], length 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;tcpdump-on-the-local-laptop&quot;&gt;tcpdump on the local laptop&lt;/h3&gt;

&lt;p&gt;Same story, I need to get the network interface name. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ifconfig -a&lt;/code&gt; shows a lot more stuff, but I believe it’s this one.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;en7: &lt;span class=&quot;nv&quot;&gt;flags&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8963&amp;lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&amp;gt; mtu 1500
	&lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;404&amp;lt;VLAN_MTU,CHANNEL_IO&amp;gt;
	ether f8:e4:3b:59:02:a0
	inet6 fe80::886:47f3:c373:4803%en7 prefixlen 64 secured scopeid 0x16
	inet 192.168.1.160 netmask 0xffffff00 broadcast 192.168.1.255
	inet6 2600:1700:1590:2270:481:7264:b2ac:29dc prefixlen 64 autoconf secured
	inet6 2600:1700:1590:2270:3ce9:3b2:e9b2:7672 prefixlen 64 autoconf temporary
	inet6 2600:1700:1590:2270::1d prefixlen 64 dynamic
	nd6 &lt;span class=&quot;nv&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;201&amp;lt;PERFORMNUD,DAD&amp;gt;
	media: autoselect &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1000baseT &amp;lt;full-duplex&amp;gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	status: active
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are several other interfaces, but this one shows &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status: active&lt;/code&gt; and has a reasonable looking local IP address. I bet it’s that one.&lt;/p&gt;

&lt;p&gt;Now I can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo tcpdump -i en7 port 1433&lt;/code&gt; and wait for output.&lt;/p&gt;

&lt;p&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mvn liberty:run&lt;/code&gt; in a separate terminal and you’ll see this output.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tcpdump: verbose output suppressed, use &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;v]... &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;full protocol decode
listening on en7, link-type EN10MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, snapshot length 524288 bytes
16:48:30.579463 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1887813996, win 65535, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,nop,wscale 6,nop,nop,TS val 4041241742 ecr 0,sackOK,eol], length 0
16:48:30.610481 IP 40.78.225.32.ms-sql-s &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; edwards-mbp.attlocal.net.51776: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;81912948, ack 1887813997, win 65535, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1440,nop,wscale 8,nop,nop,sackOK], length 0
16:48:30.610608 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 1, win 4096, length 0
16:48:30.633758 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1:68, ack 1, win 4096, length 67
16:48:30.665583 IP 40.78.225.32.ms-sql-s &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; edwards-mbp.attlocal.net.51776: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1:32, ack 68, win 2052, length 31
16:48:30.665711 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 32, win 4095, length 0
16:48:30.766804 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;68:582, ack 32, win 4096, length 514
16:48:30.800942 IP 40.78.225.32.ms-sql-s &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; edwards-mbp.attlocal.net.51776: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;32:1492, ack 582, win 2050, length 1460
16:48:30.801040 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 1492, win 4073, length 0
16:48:30.801767 IP 40.78.225.32.ms-sql-s &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; edwards-mbp.attlocal.net.51776: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1492:2952, ack 582, win 2050, length 1460
16:48:30.801795 IP edwards-mbp.attlocal.net.51776 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 40.78.225.32.ms-sql-s: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 2952, win 4073, length 0
16:48:30.801948 IP 40.78.225.32.ms-sql-s &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; edwards-mbp.attlocal.net.51776: Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;2952:4128, ack 582, win 2050, length 1176
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;comparing-the-two-different-tcpdump-outputs&quot;&gt;Comparing the two different tcpdump outputs.&lt;/h3&gt;

&lt;p&gt;Let’s strip out extraneous information from the two &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; outputs for easier comparison.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output from the VM.&lt;/strong&gt; This is the one where the connection failed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;12:43:36 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;2117028828, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330981707 ecr 0,nop,wscale 7], length 0
12:43:37 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330982307 ecr 0,nop,wscale 7], length 0
12:43:38 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330983371 ecr 0,nop,wscale 7], length 0
12:43:40 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;3629156152, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330985419 ecr 0,nop,wscale 7], length 0
12:43:41 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;384691879, win 29200, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,sackOK,TS val 2330986266 ecr 0,nop,wscale 7], length 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Output from the local laptop.&lt;/strong&gt; This is the one where the connection succeeded.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;16:48:30.57 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1887813996, win 65535, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1460,nop,wscale 6,nop,nop,TS val 4041241742 ecr 0,sackOK,eol], length 0
16:48:30.61 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;S.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;81912948, ack 1887813997, win 65535, options &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mss 1440,nop,wscale 8,nop,nop,sackOK], length 0
16:48:30.61 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 1, win 4096, length 0
16:48:30.63 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1:68, ack 1, win 4096, length 67
16:48:30.66 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;P.], &lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;1:32, ack 68, win 2052, length 31
16:48:30.66 Flags &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;.], ack 32, win 4095, length 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see right away there are differences. Apparently the app running on the VM is unable to complete the TCP handshake, while the one from the VM is not. This old mozilla doc describes the TCP handshake well &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TCP_handshake&quot;&gt;TCP handshake&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; output, there is a line for each TCP packet.  In the first three lines, we can see the three packets for the TCP handshake.&lt;/p&gt;

&lt;p&gt;In the local laptop output:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;At &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16:48:30.57&lt;/code&gt; we see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYN&lt;/code&gt; packet going from the VM to the Azure SQL Database.&lt;/li&gt;
  &lt;li&gt;At &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16:48:30.61&lt;/code&gt; we see the reply &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYN-ACK&lt;/code&gt; packet coming back from the Azure SQL Database.&lt;/li&gt;
  &lt;li&gt;At &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;16:48:30.61&lt;/code&gt; we see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACK&lt;/code&gt; packet going from the VM to the Azure SQL Database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the VM output we just see unanswered &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYN&lt;/code&gt; packets.&lt;/p&gt;

&lt;p&gt;If there is no firewall rule, and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt; output shows unanswered TCP handshake packets, the most likely cause is some other network problem outside of the VM.&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry></feed>