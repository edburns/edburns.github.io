<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2023-05-26T14:01:59-04:00</updated><id>/blog/feed.xml</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">Deploy Jakarta EE 10 and MicroProfile 6 on Azure with IBM Liberty on Azure Kubernetes Service (AKS)</title><link href="/blog/2023/05/26/liberty-aks-ee10-mp6.html" rel="alternate" type="text/html" title="Deploy Jakarta EE 10 and MicroProfile 6 on Azure with IBM Liberty on Azure Kubernetes Service (AKS)" /><published>2023-05-26T13:10:00-04:00</published><updated>2023-05-26T13:10:00-04:00</updated><id>/blog/2023/05/26/liberty-aks-ee10-mp6</id><content type="html" xml:base="/blog/2023/05/26/liberty-aks-ee10-mp6.html">&lt;p&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns00/deploy-jakarta-ee-10-and-microprofile-6-on-azure-with-ibm-liberty-on-azure-kubernetes-service-aks-5d63&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This self-contained blog post shows how you to quickly and easily deploy a cloud native Java microservice on Azure Kubernetes Service (AKS) directly from the Azure Portal. The app uses a tightly-focused selection of technologies from &lt;a href=&quot;https://jakarta.ee/specifications/coreprofile/10/jakarta-coreprofile-spec-10.0.html&quot;&gt;Jakarta EE 10&lt;/a&gt; and &lt;a href=&quot;https://github.com/eclipse/microprofile/releases/tag/6.0.&quot;&gt;MicroProfile 6&lt;/a&gt; By using a tightly-focused selection of technologies from open standards, developers minimize maintenance cost and time to MVP and maximize skill portability and fun. For more of the benefits, see &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/microservices#what-are-microservices&quot;&gt;What are microservices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For a more full-featured treatment, see this video from my colleague Brian Benz. &lt;a href=&quot;https://www.youtube.com/watch?v=r0kMESOmWTQ&quot;&gt;YouTube link&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;deploy-the-app&quot;&gt;Deploy the app&lt;/h3&gt;

&lt;p&gt;The steps in this section show how to deploy the app from the Azure portal.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Visit https://aka.ms/publicportal and sign in with a &lt;strong&gt;sufficiently empowered Azure subscription&lt;/strong&gt;.  If your identity doesn’t have these powers, appeal to your IT department to be granted these powers or use a subscription where you do have those powers.
    &lt;ol&gt;
      &lt;li&gt;The Azure identity deploying this offer must have one of the following two sets of Azure role-based access control roles:
        &lt;ol&gt;
          &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#contributor&quot;&gt;Contributor&lt;/a&gt; and &lt;a href=&quot;https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#user-access-administrator&quot;&gt;User Access Administrator&lt;/a&gt; of the current subscription.&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#owner&quot;&gt;Owner&lt;/a&gt; of the current subscription.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;In the search box, enter “websphere liberty” without the quotes.&lt;/li&gt;
  &lt;li&gt;In the &lt;strong&gt;Marketplace&lt;/strong&gt; section of the search results, select “IBM WebSphere Liberty and Open Liberty on Azure Kubernete…”.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;By the &lt;strong&gt;Resource group&lt;/strong&gt; box, select &lt;strong&gt;Create new&lt;/strong&gt; and enter the name of a new resource group. This must be unique in your subscription. I suggest disambiguating by prefixing a string with your initials and some form of date to the text &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;01aks&lt;/code&gt;. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ejb052601aks&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Next: AKS&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Leave the defaults and select &lt;strong&gt;Next: Load balancing&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Yes&lt;/strong&gt; under &lt;strong&gt;Connect to Azure Application Gateway&lt;/strong&gt;. Leave the remaining values at their defaults.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Next: Operator and application&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Explore the info box next to the text &lt;strong&gt;IBM supported&lt;/strong&gt;. This offer can be covered by full support from IBM and Microsoft. &lt;a href=&quot;https://www.ibm.com/services/systems-support?utm_content=SRCWW&amp;amp;p1=Search&amp;amp;p4=43700062199660180&amp;amp;p5=p&amp;amp;&amp;amp;msclkid=70eee7a9df5a1fbfc42483d93977b7ad&amp;amp;gclid=70eee7a9df5a1fbfc42483d93977b7ad&amp;amp;gclsrc=3p.ds.&quot;&gt;Purchase a support contract from IBM&lt;/a&gt; This plus your existing Microsoft support as an Azure customer gives you full coverage.&lt;/li&gt;
  &lt;li&gt;After thinking carefully about the value of buying support, make a note to yourself to ask your IT deparmment about it and select &lt;strong&gt;No&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Next to &lt;strong&gt;Deploy an application?&lt;/strong&gt;, select &lt;strong&gt;Yes&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Next to &lt;strong&gt;Deploy your own application or a sample application?&lt;/strong&gt; select &lt;strong&gt;The Open Liberty sample image&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Select &lt;strong&gt;Next: Review + create&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;When you see &lt;strong&gt;Validation passed&lt;/strong&gt;, select &lt;strong&gt;Create&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;explore-the-deployed-app&quot;&gt;Explore the deployed app&lt;/h3&gt;

&lt;p&gt;The steps in this section show you how to explore the deployed app&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Depending on cloud weather, you will see this screen in about fifteen minutes. Select &lt;strong&gt;Outputs&lt;/strong&gt; as shown here. &lt;img src=&quot;/blog/assets/20230526-dev-to-liberty-aks-01-outputs.png&quot; alt=&quot;outputs screen&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Locate the output named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;appHttpsEndpoint&lt;/code&gt; and select the “copy” icon beside it.&lt;/li&gt;
  &lt;li&gt;Paste that link in a new browser tab and go to the link. Accept the warning about the self-signed certificate. The offer created this certificate on your behalf. Do not use self-signed certificaties in production.&lt;/li&gt;
  &lt;li&gt;View the app and play around.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;verify-the-app-supports-jakarta-ee-10-and-microprofile-6&quot;&gt;Verify the app supports Jakarta EE 10 and MicroProfile 6&lt;/h3&gt;

&lt;p&gt;The steps in this section show you how to verify the app supports Jakarta EE 10 and MicroProfile 6.&lt;/p&gt;

&lt;p&gt;If you followed the EE 10 and MicroProfile 6 links in the first paragraph, you’ll see a list of technologies included in those two open standards. Because this app is a microservice, and because Liberty is a fully modular microservice platform, the sample app includes only a subset of those two standards.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In the Azure portal, return to the page with the &lt;strong&gt;Outputs&lt;/strong&gt; from the previous section.&lt;/li&gt;
  &lt;li&gt;Locate the output named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmdToConnectToCluster&lt;/code&gt; and select the “copy” icon beside it.&lt;/li&gt;
  &lt;li&gt;Still in the Azure portal, open an Azure Cloud Shell.
    &lt;ol&gt;
      &lt;li&gt;Select the icon with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;_&lt;/code&gt; in the tool bar at the top of the Azure portal, as shown here. &lt;img src=&quot;/blog/assets/20230526-dev-to-liberty-aks-02-azure-cloud-shell.png&quot; alt=&quot;How to open the Azure Cloud Shell in the Azure portal &quot; /&gt; The Azure Cloud Shell is incredibly powerful and worthy of your time investment to master it. For complete documentation see &lt;a href=&quot;https://learn.microsoft.com/en-us/azure/cloud-shell/overview&quot;&gt;Overview of Azure Cloud Shell.&lt;/a&gt;.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;You may be asked to create storage. If so, say &lt;strong&gt;Yes&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;In the cloudshell prompt, paste the value for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmdToConnectToCluster&lt;/code&gt; you just now copied and press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enter&lt;/code&gt;. You should see text similar to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Merged &quot;cluster26234e-admin&quot; as current context in /home/edward/.kube/config&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alias k=kubectl&lt;/code&gt;. This may be useful later.&lt;/li&gt;
  &lt;li&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k get pods&lt;/code&gt;. Copy either of the two values in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NAME&lt;/code&gt; column.&lt;/li&gt;
  &lt;li&gt;Enter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k logs &amp;lt;paste value from preceding step&amp;gt; | grep mpHealth | jq .&lt;/code&gt; The output should look like the following.
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;liberty_message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;app26234e-7bb7bc94f8-7bt7z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_userDir&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/opt/ol/wlp/usr/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_serverName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;defaultServer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;message&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CWWKF0012I: The server installed the following features: [cdi-4.0, distributedMap-1.0, jndi-1.0, json-1.0, jsonb-3.0, jsonp-2.1, monitor-1.0, mpConfig-3.0, mpHealth-4.0, mpMetrics-5.0, restfulWS-3.1, restfulWSClient-3.1, ssl-1.0, transportSecurity-1.0].&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_threadId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0000002a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_datetime&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2023-05-25T17:05:50.340+0000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_messageId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CWWKF0012I&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;com.ibm.ws.kernel.feature.internal.FeatureManager&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;loglevel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;AUDIT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ibm_sequence&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1685034350340_0000000000033&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;ext_thread&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Default Executor-thread-1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The value of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; property is your proof that a subset of technologies from both Jakarta EE 10 and MicroProfile 6 are running in the application.&lt;/p&gt;

&lt;p&gt;Call to action: To learn more visit https://aka.ms/websphere-on-azure-contactme . If you want us to contact you directly, select the &lt;strong&gt;Contact Me&lt;/strong&gt; button and I’ll get in touch directly.&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">One minute video turns into fifteen minutes of WTF?</title><link href="/blog/2023/05/18/one-minute-video.html" rel="alternate" type="text/html" title="One minute video turns into fifteen minutes of WTF?" /><published>2023-05-18T13:10:00-04:00</published><updated>2023-05-18T13:10:00-04:00</updated><id>/blog/2023/05/18/one-minute-video</id><content type="html" xml:base="/blog/2023/05/18/one-minute-video.html">&lt;p&gt;I strongly prefer Azure DevOps Boards for prodution quality project management, however, it’s very hard to beat gratis. For this reason, the &lt;a href=&quot;https://jakarta.ee&quot;&gt;Jakarta EE&lt;/a&gt; project is using &lt;a href=&quot;https://github.com/features/issues&quot;&gt;GitHub Projects &amp;amp; Issues&lt;/a&gt;. As the release co-coordinator for Jakarta EE 11, I need to gain mastery of GitHub Projects &amp;amp; Issues. So, I set out to understand this 71 second long video. How hard can it be? It’s only one minute!&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/o1wuW24Nv4E&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I am glad this video exists. I understand the producers get to claim, “look it’s so easy it fits in a one minute video.” However, either because the video moves too fast or I move too slowly (I am over fifty years old), it took me fifteen minutes of play/pause/think/repeat to fully absorb the content in a way that I could replicate the steps shown. Is there a video that just runs the full ten minutes and explains it to me rather than this Gen-Z play/pause/think/repeat approach?&lt;/p&gt;

&lt;p&gt;In the absence of such a video, here is my second-by-second breakdown of this action packed video.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=4s&quot;&gt;00:04&lt;/a&gt; an issue exists with a &lt;a href=&quot;https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists&quot;&gt;task   list&lt;/a&gt;   from some   &lt;a href=&quot;https://www.investopedia.com/terms/a/accreditedinvestor.asp&quot;&gt;Investor-type&lt;/a&gt;   persona.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=6s&quot;&gt;00:06&lt;/a&gt; using the &lt;a href=&quot;https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists#about-issue-task-lists&quot;&gt;hover convert   technique&lt;/a&gt;,   convert the three tasks to issues.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=7s&quot;&gt;00:07&lt;/a&gt; check the three checkboxes to close the newly created   issues. (Why? Seems a waste of time. But it’s only one second, so I   guess it doesn’t matter.)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=14s&quot;&gt;00:14&lt;/a&gt; Create a new project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=16s&quot;&gt;00:16&lt;/a&gt; Type the octothorpe. (You’re not the only one who can be   obtuse, defunkt.) This drops down a   repository picker. There are probably some scope limitations   here. Perhaps you can only pick repositories in the same   Organization?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=17s&quot;&gt;00:17&lt;/a&gt; Somehow more issues get added to a thing called &lt;strong&gt;The Plan&lt;/strong&gt;,   which I don’t recall being explicitly named. Also, the Investor   wanted these to be called &lt;strong&gt;Epics&lt;/strong&gt; but I don’t see that term   anywhere.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=21s&quot;&gt;00:21&lt;/a&gt; And now we have a giant flat unordered mess of about 25 issues   with no hierarchical structure or organization. Also, there is a   &lt;strong&gt;Status&lt;/strong&gt; field, where are the valid values for that field defined?   Is that automatic, like &lt;strong&gt;The Plan&lt;/strong&gt;?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=23s&quot;&gt;00:23&lt;/a&gt; Select (not click) the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+&lt;/code&gt; icon to the right of the   &lt;strong&gt;Assignees&lt;/strong&gt; column. This looks like some crude form of   categorization.  Apparently you must define your schema for   organizing your work on the fly. Apperently they invent the name   &lt;strong&gt;Area&lt;/strong&gt;. The Investor wanted these to be called &lt;strong&gt;Epics&lt;/strong&gt;. They   will not be happy with you using the wrong term.&lt;/p&gt;

    &lt;p&gt;Anyhow, the video manually creates three &lt;strong&gt;Area&lt;/strong&gt; values for the three   &lt;strong&gt;Epics&lt;/strong&gt; listed by the Investor. Somehow icons are present. Where   do these come from?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=27s&quot;&gt;00:27&lt;/a&gt; Select &lt;strong&gt;Apply&lt;/strong&gt;. Somehow, magically, a new column   appears. How is the ordering determined? How are the members for   that column decided?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=31s&quot;&gt;00:31&lt;/a&gt; Apparently the same process used for this &lt;strong&gt;Area&lt;/strong&gt; column is   used to create a &lt;strong&gt;Milestone&lt;/strong&gt; column. Again, there are icons, but   it’s not clear how they are chosen.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=31s&quot;&gt;00:33&lt;/a&gt; Each column apparently has a dropdown. However, there appears   to be a bug because the dropdown on the &lt;strong&gt;Milestone&lt;/strong&gt; column has   &lt;strong&gt;Area&lt;/strong&gt;. But because the video moves so fast I guess it doesn’t   matter. Anyhow, they use the &lt;strong&gt;Group by values&lt;/strong&gt; item. This causes   expand/collapse sections to appear for all the values of that   column, with the member rows that have that value grouped together.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=41s&quot;&gt;00:41&lt;/a&gt; Now we select the search area at the top of the table. It   looks like they are demonstrating some kind of “filter”   feature. Yes. They are. They are showing how you can make it so the   table only shows issues belonging to the specified area.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=46s&quot;&gt;00:46&lt;/a&gt; Now they use the drop down on the tab labeled &lt;strong&gt;The Plan&lt;/strong&gt; and   select &lt;strong&gt;Save changes to new view&lt;/strong&gt;. This creates a new tab. Somehow   a title is pre-filled as &lt;strong&gt;Game loop Backlog&lt;/strong&gt;. Why does the word   &lt;strong&gt;Backlog&lt;/strong&gt; not appear in the first tab? Is there some convention   over configuration thing happening here? The first tab is always   called &lt;strong&gt;The Plan&lt;/strong&gt; and the next one &lt;strong&gt;Backlog&lt;/strong&gt;?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=50s&quot;&gt;00:50&lt;/a&gt; Now we have another tab &lt;strong&gt;Standup&lt;/strong&gt;. Where did that come from?   I am guessing it came from using the same process to create the   &lt;strong&gt;Game loop Backlog&lt;/strong&gt;? But again, how does it know the tab should be   called &lt;strong&gt;Standup&lt;/strong&gt;? Anyhow, here we select the drop down on that tab   and select &lt;strong&gt;Board&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=55s&quot;&gt;00:55&lt;/a&gt; you get columns for the &lt;strong&gt;Status&lt;/strong&gt; field. Again, where is the   set of valid values for &lt;strong&gt;Status&lt;/strong&gt; defined? How is it that the thing   knows that the columns should correspond to the valid values of   &lt;strong&gt;Status&lt;/strong&gt;?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=56s&quot;&gt;0:56&lt;/a&gt; - &lt;a href=&quot;https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;amp;t=71s&quot;&gt;01:11&lt;/a&gt; We spend a luxurious fifteen seconds (20% of the total run time of the video) on a silly origami Octocat animation.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">I strongly prefer Azure DevOps Boards for prodution quality project management, however, it’s very hard to beat gratis. For this reason, the Jakarta EE project is using GitHub Projects &amp;amp; Issues. As the release co-coordinator for Jakarta EE 11, I need to gain mastery of GitHub Projects &amp;amp; Issues. So, I set out to understand this 71 second long video. How hard can it be? It’s only one minute!</summary></entry><entry><title type="html">Notes from watching Ivar Grimstad Devoxx Belgium 2022 Jakarta EE 10 presentation</title><link href="/blog/2023/02/18/booty-duke.html" rel="alternate" type="text/html" title="Notes from watching Ivar Grimstad Devoxx Belgium 2022 Jakarta EE 10 presentation" /><published>2023-02-18T17:10:00-05:00</published><updated>2023-02-18T17:10:00-05:00</updated><id>/blog/2023/02/18/booty-duke</id><content type="html" xml:base="/blog/2023/02/18/booty-duke.html">&lt;p&gt;50 minutes https://www.youtube.com/watch?v=8ke0kPrg9qc&lt;/p&gt;

&lt;p&gt;Simplicity for Modern and Lightweight Cloud Applications&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Out on 2022-09-22.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Community driven, modernized, simplified, lightweight.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Specs and Impls&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Spec, API, TCK&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Compatibile Impls&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;We need at least one open source impl.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Other impls can be fine, not open source.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;There is no “official” “reference implementation”&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Lots of specs, more than half received updates in EE 10&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;About half of these have a “.0” version number. In our impl of
SemVer, the .0 means it may have potentially breaking changes.&lt;/p&gt;

        &lt;p&gt;Also a bit of marketing to signal there are big noteworthy
changes. (I like this idea)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Authorization 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Activation 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Batch 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Connectors 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Mail 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Messaging 3.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Authentication 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Concurrency 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI 4.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;EL 5.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI 4.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Faces 4.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Security 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Servlet 6.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(J)STL 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(J)SP 3.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;(JPA)Persistence 3.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;WebSocket 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Restful Web Services 3.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONP 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONB 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Annotations 2.1&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Interceptors 2.1&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Net new&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;But not really new.  Because it’s a part of CDI, or a sub spec.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI Lite 4.0&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Not updated&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;EJB 4.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Bean Validation 3.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Debugging support 2.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;EJB Lite 4.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Managed Beans 2.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Transactions 2.0&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;DI 2.0&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We don’t need to update every spec every time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ivar subtracts the “enterprisy” and you are left with the “Web
Profile”.  We’ve had a web profile since EE6. Nothing new.&lt;/p&gt;

    &lt;p&gt;Useful as a smaller platform.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Auth&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Concurrency&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;EL&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Faces&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Security&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Servlet&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;STL&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Persistence&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;WebSocket&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;BeanVal&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Debugging&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;EJB lite&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Managed beans&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JTA&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JAX-RS&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONB&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Annotations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Interceptors&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;DI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI Lite&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Take away the Webby specs, you get Core Profile. Brand new. EE10.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Enables impls to be certified as EE compatible&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Headless services, or microservices, if you like.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JAX-RS&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONP&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONB&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Annotations&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Interceptors&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;DI&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI Lite 4.0&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Raise the API source level from 8 to 11&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Why not go further?&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;There were not many specs that needed Java features beyond SE 11.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;This allows us to have a broader appeal.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;strong&gt;TCK runs on 11 or 17.&lt;/strong&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Security 3.0&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;https://jakarta.ee/specifications/security/&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Add support for OPenID Connect!&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Updates to Jakarta Authorization, and Authentication&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;This is a foundation for future work (Q.2 Should this be in the
EE11 talk?)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;07:22 Code example for OpenID Connect Authentication. It’s an
annotation. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenIdAuthenticationMechanismDefinition&lt;/code&gt; (love the
long name, very precise)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;Where do you put the annotation?&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Persistence 3.1&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;https://jakarta.ee/specifications/persistence/&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Small work interetsed by the community&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Add UUIDs as a basic java data type!&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GenerationType=UUID&lt;/code&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;JAX RS 3.1&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;https://jakarta.ee/specifications/restful-ws/&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Community features, requested a long time.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Initially wanted a 4.0 release. But went with 3.1 for now.
Planning a 4.0 release for EE 11 (Q.3 this seems definitely like
what we want in the talk).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Multipart form data support.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;RestEASY has this.  JAX-RS catches up now.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Java SE Bootstrap API&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Lets us run JAX-RS outside of an app server.  (Q.4: this seems
like a great thing to show with App Service Java SE! What about
functions?)&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;09:51 Ivar shows a demo https://github.com/ivargrimstad/jakartaee-duke&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;booty-duke https://soundcloud.com/edburns00/booty-duke-m4a&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Note that we have explicit dependencies on API and
IMPL. There is no concept of “provided” scope, where you can
just depend on the API.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Uses Maven Assembly plugin&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Needs a main method.&lt;/p&gt;

                &lt;ol&gt;
                  &lt;li&gt;
                    &lt;p&gt;Add some configuration: 11:33. Port and root
path. That’s the minimum. There are sensible defaults.
Other options available.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Instantiate the app.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Start it. 12:21&lt;/p&gt;

                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SeBootstrap.start()&lt;/code&gt;&lt;/p&gt;

                        &lt;ul&gt;
                          &lt;li&gt;
                            &lt;p&gt;Pass in app and config.&lt;/p&gt;
                          &lt;/li&gt;
                          &lt;li&gt;
                            &lt;p&gt;`thenAccept’&lt;/p&gt;
                          &lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                      &lt;li&gt;
                        &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread.currentThread().join()&lt;/code&gt;&lt;/p&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ol&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Run it locally.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Core Profile&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Reason: target smaller runtimes.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Limit the amount of specs required to implement it.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;3 compatible impls&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Open Liberty&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Payara&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;WildFly&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Potentially compatible impls&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Helidon&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Quarkus&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Micronaut&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Helidon and Quarkus have said they will apply for core profile
compatibility Q.5: What can I say about this in the talk?)&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;CDI Lite&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Enables CDI to be used in GraalVM.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Make CDI dynamic at build time, not run time.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Create a new extensions API. Portable extensions is too late.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Changes how the empty &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;beans.xml&lt;/code&gt; behaves.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;Prior: empty beans.xml turns on CDI. Everything is injectable.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Now: beans.xml with only top level XML turns on CDI, but
Only things that that have the Injectable annotation are
injectable.&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;17:10 Taking a step back.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;To EE8, how to get to 9.1 and 10.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;If going from 8 to 10, do take the 9 step in between. You don’t
need to go to prod with the 9 version, but it’s good to suss out
problems: new namespace.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;8 -&amp;gt; 9 big thing: namespace change&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;javax.* to jakarta.*&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Why do I care? Because all the things: Spring, Tomcat, Jetty,
Hibernate, are moving to jakarta namespace.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;It’s usually just a import change.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Tools: Changes the bytecode for you. Can use it at build time
or runtime. Not recommended to go to th long time.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;Eclipse transformer&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Apache Tomcat Migration Tool&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Tools: IDE help&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;IntelliJ Idea has a Java EE to Jakarta EE thing.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;A bit smarter than just a regexp action.&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Manual 20:26&lt;/p&gt;

            &lt;ol&gt;
              &lt;li&gt;
                &lt;p&gt;Update Jakarta EE version in pom.xml&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Fix the imports&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;XML schema namespaces&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Rename properties prefixed with javax.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Rename bootstrapping files&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Verify data and dynamic content&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ol&gt;

            &lt;p&gt;See https://github.com/ivargrimstad/jakartaee-duke/blob/master/complete-duke/README.adoc&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;This is a three tier helloworld, to show the migration steps.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;Starts with EE and SE 8 apis.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Adds EE 8 and 9 to the classpath.  Both of them!&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;App is the same as the booty-duke.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Rest resource.  “hello” path, produces message. Is a
stateless bean. 23:00&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;Finds first message from injected stateful session bean,
if not there, hard codes the message value.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Stateful session bean uses the entity manager from
Persistence.&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;findAll&lt;/code&gt; method creates a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CriteriaQuery&lt;/code&gt; that basically
does &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT * FROM GREETINGTABLE&lt;/code&gt;.&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Entity DukesGreeting&lt;/code&gt; 23:30&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;There is a CDI extension.  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Dukes&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DukesExtension
implements Extension&lt;/code&gt;.&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;processAnnotatedType(@Observes
@WithAnnotations(Dukes.class)...&lt;/code&gt;&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Prints out a message to the logger for every such
annotated class.&lt;/p&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;24:10 Now does the namespace change&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;Uses the aforementioned IntelliJ Idea tool support.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;&lt;strong&gt;This is why he added the EE 9 and EE8 jars both.&lt;/strong&gt;&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Once he ran the tool, he can remove the EE8 jars.&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;24:50 That’s steps 1 and 2.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;If you are using XML config, you have to pay attention to that.&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;He has a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;persistence.xml&lt;/code&gt;.  Uses the JCP namespace.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;23:58 Replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jcp.org&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jakarta.ee&lt;/code&gt;.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Also change the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schemaLocation&lt;/code&gt;&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;p&gt;version number&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jcp.org&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jakarta.ee&lt;/code&gt;&lt;/p&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;version number in xml &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt; attribute.&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;Properties&lt;/li&gt;
            &lt;/ol&gt;

            &lt;ul&gt;
              &lt;li&gt;he has these in his &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;persistence.xml&lt;/code&gt; file.  In his case
this is for drop and create of the table.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;Rename bootstrapping files&lt;/li&gt;
            &lt;/ol&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;CDI bootstrapping file
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;META-INF/services/javax.enterprise.inject.spi.Extension&lt;/code&gt;&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Rename the file to jakarta.enterprise….&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;ol&gt;
              &lt;li&gt;Verify data and dynamic content. 28:00  Runs it in GlassFish 6
(EE9) In his case, it’s the text in the database. He updates
the database using some table editor in IntelliJ Idea. Reloads
the page.&lt;/li&gt;
            &lt;/ol&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;EE9 supports Java 17.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Updates the pom.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Let’s use some Java 17 features as well.&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;p&gt;How about records? 31:27&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Lets us avoid exposing our database architecture in the
API.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Creates &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DukesGreetingRecord&lt;/code&gt;. 31:49&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;In the business logic, use a mapper, map it from the
greeting to a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;new DukesGreetingRecord&lt;/code&gt; populates using
the getters.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Are we done? 33:29.  No.  It’ came up empty.  Why?&lt;/p&gt;

                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;p&gt;JSON Binding is expecting a Java Bean.&lt;/p&gt;
                      &lt;/li&gt;
                      &lt;li&gt;
                        &lt;p&gt;It must have a getter.  Records don’t have
getters. Records are not Java Beans.&lt;/p&gt;
                      &lt;/li&gt;
                      &lt;li&gt;
                        &lt;p&gt;Simplest thing is to change the name of the fields in
the record: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getDate&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getMessage&lt;/code&gt;.&lt;/p&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Let’s upgrade it to EE 10.&lt;/p&gt;

                &lt;ul&gt;
                  &lt;li&gt;
                    &lt;p&gt;Very simple.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;Update the pom dependency from 9 to 10.&lt;/p&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;But is it? No. When running he got a servlet exception.&lt;/p&gt;

                    &lt;ul&gt;
                      &lt;li&gt;
                        &lt;p&gt;Has to do with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;beans.xml&lt;/code&gt; stuff.&lt;/p&gt;
                      &lt;/li&gt;
                      &lt;li&gt;
                        &lt;p&gt;Adds a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;beans.xml&lt;/code&gt;. Make sure it’s
version 4. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bean-discovery-mode&lt;/code&gt; should be
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;annotated&lt;/code&gt;.  This is the default, so you can remove
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bean-discovory-mode&lt;/code&gt;.&lt;/p&gt;
                      &lt;/li&gt;
                      &lt;li&gt;
                        &lt;p&gt;Must also update the schema namespace version.&lt;/p&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;
                    &lt;p&gt;37:44 So great! Can remove the ugly hack we did with the record.  Set
record fields back to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date&lt;/code&gt;.&lt;/p&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;If you are relying on the “no beans.xml” or “empty beans.xml”
behavior, then you must take the action.  If you have a
beans.xml, have it set at annotated, you’re fine.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;38:37 the core profile.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Takes this application, strips away a bit&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Removes database&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Makes the CDI extension “build compatibile” rather than
“portable” extension.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;39:12.  Implements the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spi.Extension&lt;/code&gt; interface. Has
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;processAnnotatedType&lt;/code&gt; method.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;New API in core has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spi.BuildCompatibileExtension&lt;/code&gt;&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;Annotations for the different lifecycle events.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;40:11 Recommendation. If you are running your app in a
thing that supports full CDI, stick to the portable
extension. Only if you are running in a CDI lite
environment should you consider this kind of extension.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@Enhancement&lt;/code&gt; annotation.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;Have
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;META-INF/services/jakarta.enterprise.inject.build.compatible.spi.BuildCompatibleExtension&lt;/code&gt;
identify the extension. This is the package name of the
interface, so you don’t have to remember the long name.&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Runs it in WildFly 27.0.0.Alpha1&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Payara Cloud 42:07&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Upload the application, run it.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Gives the PaaS value prop: someone else manages the complexity of
Kubernetes.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;44:30 We’re now thinking of Jakarta EE 11 Q.6&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Discussion: what Java SE level should we base Jakarta EE 11 on?&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Raise to 17?&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Raise to 21?&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;How to handle the removal of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecurityManager&lt;/code&gt;.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Users will not notice.&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Impls will have to change.&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;New spec: Jakarta Config (finally!)&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;https://jakarta.ee/specifications/config/&lt;/p&gt;

            &lt;ul&gt;
              &lt;li&gt;
                &lt;p&gt;More or less based on MicroProfile Config.  Will be
compatible with it.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;When Jakarta Config comes out, MicroProfile Config will
probably be retired.&lt;/p&gt;
              &lt;/li&gt;
              &lt;li&gt;
                &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@ConfigProperty&lt;/code&gt;&lt;/p&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Possible New spec: Jakarta MVC&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;https://jakarta.ee/specifications/mvc/&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Server side rendering&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Runs on WildFly, GlassFish, anything with Jersey&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Possible new spec: Jakarta NoSQL&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;https://jakarta.ee/specifications/nosql/&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Possible new spec: Jakarta RPC&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Standardizes gRPC within Jakarta EE&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;https://jakarta.ee/specifications/rpc/&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Possible new spec: Jakarta Data&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;Standardizes the repository pattern for data access&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Spring Data, but for Jakarta EE&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Cloud functions?&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Summary 48:00&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">50 minutes https://www.youtube.com/watch?v=8ke0kPrg9qc</summary></entry><entry><title type="html">Using git worktree and a script to copy commits from one branch to another in the same repo</title><link href="/blog/2022/07/19/git-worktree.html" rel="alternate" type="text/html" title="Using git worktree and a script to copy commits from one branch to another in the same repo" /><published>2022-07-19T09:25:00-04:00</published><updated>2022-07-19T09:25:00-04:00</updated><id>/blog/2022/07/19/git-worktree</id><content type="html" xml:base="/blog/2022/07/19/git-worktree.html">&lt;p&gt;This brief post shows how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree&lt;/code&gt; to perform development work multiple branches of your local clone of a remote git repository, such as a repository on GitHub.&lt;br /&gt;
The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;worktree&lt;/code&gt; git sub-command allows you to “Manage multiple working trees”. If you want to know everything there is to know about &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;worktree&lt;/code&gt;, you can view the manual page by doing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man git-worktree&lt;/code&gt;.  Yes, that’s right, the literal string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git-worktree&lt;/code&gt;.  All git sub-commands have their own manual page which you can access with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man git-subcommandname&lt;/code&gt;.  Try it with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man git-branch&lt;/code&gt;, for example.&lt;/p&gt;

&lt;p&gt;The post assumes makes the following assumptions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You have already done &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt; of the remote repository on your local environment.&lt;/li&gt;
  &lt;li&gt;For discussion, this local clone is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myrepo&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Within &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myrepo&lt;/code&gt; you already have three branches: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myfeature&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myotherfeature&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; branch is currently checked out.  This is the default behavior when you do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;check-out-myfeature-using-git-worktree-add&quot;&gt;Check out myfeature using git worktree add&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd myrepo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; &lt;br /&gt;
You should see the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree list&lt;/code&gt; &lt;br /&gt;
You should see something similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/edburns/workareas/myrepo  5bb3c2a [main]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, it’s time to check out your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myfeature&lt;/code&gt; branch using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree&lt;/code&gt;.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git worktree add --track -b myfeature ../myrepo-01 origin/myfeature
git worktree list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;You should see something similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/edburns/workareas/myrepo  5bb3c2a [main]
/home/edburns/workareas/myrepo-01  49336e1 [myfeature]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;strong&gt;IMPORTANT:&lt;/strong&gt; With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree&lt;/code&gt;, you only have one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; directory, in this case &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myrepo/.git&lt;/code&gt;.  If you do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -la&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myrepo-01&lt;/code&gt;, you will see a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; &lt;strong&gt;file&lt;/strong&gt;.  It’s name the same, but it is a file, not a directory.  So, even though you have two checked out branches you are not using twice as much disk space because the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myrepo-01&lt;/code&gt; directory only has the most recent files of the checked out branch.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;check-out-myotherfeature-using-git-worktree-add&quot;&gt;Check out myotherfeature using git worktree add&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd myrepo&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, it’s time to check out your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myotherfeature&lt;/code&gt; branch using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree&lt;/code&gt;.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git worktree add --track -b myotherfeature ../myrepo-02 origin/myotherfeature
git worktree list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;You should see something similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/edburns/workareas/myrepo  5bb3c2a [main]
/home/edburns/workareas/myrepo-01  49336e1 [myfeature]
/home/edburns/workareas/myrepo-02  52059ba [myotherfeature]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;copy-commits-from-myotherfeature-to-myfeature&quot;&gt;Copy commits from myotherfeature to myfeature&lt;/h3&gt;

&lt;p&gt;Now comes the interesting part, how to to copy commits from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myotherfeature&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myfeature&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The following script, which I suggest you save as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/bin/copyLastNWorktreeCommits.sh&lt;/code&gt;, copies the last N commits from one worktree branch to another.  The script makes the simplifying assumption that the commits you want to copy are the most recent N commits.  If the commits you want to copy are not the most recent N commits, you can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git rebase -i&lt;/code&gt; to re-order the commits as described in this &lt;a href=&quot;https://www.atlassian.com/git/tutorials/rewriting-history#git-rebase-i&quot;&gt;decent tutorial from Atlassian&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# pwd has the dest branch checked out&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# first argument is relative path to source branch, checked out with worktree&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# second argument is dest branch&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# third argument is num commits&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ontoValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git rev-parse HEAD&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;sourceBranch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;destBranch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;numLastCommitsOnPrivateBranch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$3&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;pushd&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;startingCommit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git rev-parse HEAD&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;endingCommit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;git rev-parse HEAD~&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;numLastCommitsOnPrivateBranch&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;popd

&lt;/span&gt;git rebase &lt;span class=&quot;nt&quot;&gt;--onto&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ontoValue&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;endingCommit&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;startingCommit&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
git rebase HEAD &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;destBranch&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s say we want to copy the last 3 commits from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myotherfeature&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myfeature&lt;/code&gt;.  Assuming &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyLastNWorktreeCommits.sh&lt;/code&gt; is in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/bin&lt;/code&gt; directory and is on your path, as described in the appendix, the following commands will accomplish this.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd myrepo-01&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;You should see something similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;On branch myfeature
Your branch is up to date with 'origin/myfeature.

nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Verify that you are in the correct directory. The script treats the current directory as the destination directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyLastNWorktreeCommits.sh ../myrepo-02 myfeature 3&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;You should see output similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;First, rewinding &lt;span class=&quot;nb&quot;&gt;head &lt;/span&gt;to replay your work on top of it...
Applying: my change 01
Applying: my change 02
Applying: my change 03
First, rewinding &lt;span class=&quot;nb&quot;&gt;head &lt;/span&gt;to replay your work on top of it...
Fast-forwarded main to HEAD.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that the commits have been copied.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git log -3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;You should see output similar to the following.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;commit 9f1116063f0ce1c097e3118fc096a764d678798e (HEAD -&amp;gt; main)
Author: Ed Burns &amp;lt;email@address.com&amp;gt;
Date:   Tue Jul 19 14:23:41 2022 -0400

    my change 03

commit 072da86c6b8e360120aab1f2a6fd87368c64fc3d
Author: Ed Burns &amp;lt;email@address.com&amp;gt;
Date:   Tue Jul 19 14:23:27 2022 -0400

    my change 02

commit 38036c3d4a4597b2ac070d32c236adc7b6106ae2
Author: Ed Burns &amp;lt;email@address.com&amp;gt;
Date:   Tue Jul 19 14:23:16 2022 -0400

    my change 01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that the commits are ready to be pushed.&lt;/p&gt;

    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git status
On branch myfeature
Your branch is ahead of 'origin/myfeature' by 3 commits.
  (use &quot;git push&quot; to publish your local commits)

nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;Don’t be thrown off by the “nothing to commit”.  Yes, it’s true, you have nothing to commit to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myfeature&lt;/code&gt;, because those three changes were already committed on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myotherfeature&lt;/code&gt;.  So while you have nothing to commit, you &lt;strong&gt;do&lt;/strong&gt; have something to push.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;If you want, you can push those changes now, but doing so is an exercise for the reader.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;In this post we learned how to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git worktree&lt;/code&gt; to have three branches checked out at the same time, each in their own directories, conveniently located as siblings in the filesystem.  We learned how to copy commits from one branch to another in this arranchement.&lt;/p&gt;

&lt;h3 id=&quot;appendix-bash-basics-preconditions&quot;&gt;Appendix: bash basics preconditions&lt;/h3&gt;

&lt;p&gt;This appendix describes how to make it so you can call the script shown in the post from the command line.  As with everything in GNU/Linux, &lt;a href=&quot;/blog/2010/03/03/perils-8220there8217s-more-one-way-do-it8221.html&quot;&gt;there is more than one way to do it&lt;/a&gt;.  I’m not even sure this is the best way. This is just how I do it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Make sure you have a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory in your home directory.&lt;/li&gt;
  &lt;li&gt;Save the script to a file in that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory.  As stated in the post, I recommend naming the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copyLastNWorktreeCommits.sh&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Make sure the file has executable permissions. &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod ugo+x ~/bin/copyLastNWorktreeCommits.sh&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Make sure your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bin&lt;/code&gt; directory in your home directory is in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$PATH&lt;/code&gt; environment variable.
    &lt;ul&gt;
      &lt;li&gt;There are lots of ways to do this.  This one seems pretty reasonable: &lt;a href=&quot;https://linuxize.com/post/how-to-add-directory-to-path-in-linux/&quot;&gt;https://linuxize.com/post/how-to-add-directory-to-path-in-linux/&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">This brief post shows how to use git worktree to perform development work multiple branches of your local clone of a remote git repository, such as a repository on GitHub. The worktree git sub-command allows you to “Manage multiple working trees”. If you want to know everything there is to know about worktree, you can view the manual page by doing man git-worktree. Yes, that’s right, the literal string git-worktree. All git sub-commands have their own manual page which you can access with man git-subcommandname. Try it with man git-branch, for example.</summary></entry><entry><title type="html">Ed’s JavaLand 2022 Session Picks (Updated)</title><link href="/blog/2022/02/15/javaland-2022-picks.html" rel="alternate" type="text/html" title="Ed’s JavaLand 2022 Session Picks (Updated)" /><published>2022-02-15T18:25:00-05:00</published><updated>2022-02-15T18:25:00-05:00</updated><id>/blog/2022/02/15/javaland-2022-picks</id><content type="html" xml:base="/blog/2022/02/15/javaland-2022-picks.html">&lt;p&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns00/eds-javaland-2022-session-picks-updated-2ghj&quot;&gt;dev.to&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In my &lt;a href=&quot;/blog/2021/05/19/build-picks.html&quot;&gt;previous&lt;/a&gt; “session picks” post I lamented, “Ever since the end of in-person events, I have not bothered to do my traditional session picks posts”.  Well, with &lt;a href=&quot;https://javaland.eu&quot;&gt;JavaLand 2022&lt;/a&gt; fast approaching, the time has come to resume the practice.&lt;/p&gt;

&lt;p&gt;All times in local timezone in JavaLand.  See &lt;a href=&quot;https://www.javaland.eu/de/programm/&quot;&gt;the program&lt;/a&gt; for more details on each session.&lt;/p&gt;

&lt;h3 id=&quot;monday-14-march-2022&quot;&gt;Monday, 14 March 2022&lt;/h3&gt;

&lt;h4 id=&quot;1700---1900-dambali-matamba---pattern-matching-mit-java&quot;&gt;17:00 - 19:00 Dambali (Matamba) - Pattern matching mit Java&lt;/h4&gt;

&lt;p&gt;The day before JavaLand is usually reserved for JavaLand kids activities, but with Coronavirus I have not heard about any such plans.  What I do see on the schedule is one talk from German Java conference veteran &lt;a href=&quot;https://twitter.com/sippsack&quot;&gt;Falk Sippach&lt;/a&gt; and newcomer &lt;a href=&quot;https://twitter.com/MBoegie&quot;&gt;Merlin Bögershausen&lt;/a&gt; about pattern matching in Java.  Nope, it’s not regular expressions they’re talking about.  They are talking about language level features such as pattern matching in switch statements, records, and arrays, as described in this authoritative blog post from &lt;a href=&quot;https://blogs.oracle.com/javamagazine/post/java-project-amber-lambda-loom-panama-valhalla&quot;&gt;Andrew Binstock&lt;/a&gt;.  The talk is in German, but well worth a look.  It’s also the only scheduled talk on Monday.&lt;/p&gt;

&lt;h3 id=&quot;tuesday-15-march-2022&quot;&gt;Tuesday, 15 March 2022&lt;/h3&gt;

&lt;h4 id=&quot;0830---0910-schauspielhaus---unittesting-für-jakarta-ee---das-vernachlässigte-wesen&quot;&gt;08:30 - 09:10 Schauspielhaus - Unittesting für Jakarta EE - das vernachlässigte Wesen&lt;/h4&gt;

&lt;p&gt;After many years of working mainly with the arrangement of boxes on architecture diagrams, and the JSON it takes to connect those boxes, I look forward to looking deep inside a single box at the humble Unit Test. Join &lt;a href=&quot;https://github.com/guhilling/&quot;&gt;Gunnar Hilling&lt;/a&gt; for this Jakarta EE focused look at this neglected discipline.&lt;/p&gt;

&lt;p&gt;I also close out my conference picks with a talk about assertions.&lt;/p&gt;

&lt;h4 id=&quot;0930---1000---silverado---begrüßung&quot;&gt;09:30 - 10:00 - Silverado - Begrüßung&lt;/h4&gt;

&lt;p&gt;I’ve been to every JavaLand ever, and I can attest that Fried’s energetic greetings are not to be missed. I am sure it will be especially emotional after we’ve all been through two years of pandemic hardship. If you are interested in my take on being thankful to be at a conference after two years of pandemic hardship, check out &lt;a href=&quot;/blog/2021/11/22/workshoptage-keynote-summary-document.html&quot;&gt;this previous post&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;1000---1040---silverado---common-misunderstandings-in-software-architecture&quot;&gt;10:00 - 10:40 - Silverado - Common Misunderstandings in Software Architecture&lt;/h4&gt;

&lt;p&gt;I am unfamiliar with &lt;a href=&quot;https://twitter.com/Cairolali&quot;&gt;Dr. Carola Lilienthal&lt;/a&gt;, but her book “Sustainable Software Architecture” looks excellent. This talk is likely a distillation of the lessons in the book.&lt;/p&gt;

&lt;h4 id=&quot;1100---1040---schauspielhaus---quarkus-a-bliss-for-developers&quot;&gt;11:00 - 10:40 - Schauspielhaus - Quarkus: a Bliss for Developers&lt;/h4&gt;

&lt;p&gt;Alex Soto Bueno is delivering a talk on Red Hat’s flagship, post-monolith,
cloud-native, enterprise Java developer runtime. I’m confident it will
be true to the legacy of excellent talks from the legendary Burr
Sutter.  Even though this talk competes with Ivar Grimstad’s Jakarta
EE 10 talk, I prioritize this one because I see Quarkus as delivery
vehicle for some Jakarta EE specs.  Look at it this way: EE10 is the
future, and some of the EE10 specs will eventually show up in Quarkus.&lt;/p&gt;

&lt;h4 id=&quot;1200---1240---wintergarden---low-cost-cloud-native-open-standard-java-on-azure-kubernetes-service&quot;&gt;12:00 - 12:40 - Wintergarden - Low Cost, Cloud Native, Open Standard Java on Azure Kubernetes Service&lt;/h4&gt;

&lt;p&gt;My biased opinion recommends my own session.  &lt;a href=&quot;https://twitter.com/emilyfhjiang&quot;&gt;Emily Jiang&lt;/a&gt; and will observe that customers have made it clear: they want Kubernetes, but they want it easy and affordable. It is possible to address these two competing concerns by using open source runtimes on commodity hardware. This lecture shows how to use the EPLv1 licensed Open Liberty runtime on vanilla Azure Kubernetes Service.&lt;/p&gt;

&lt;p&gt;If I wasn’t giving this talk, I would attend &lt;a href=&quot;https://twitter.com/johanjanssen42&quot;&gt;Johan Janssen’s&lt;/a&gt;
“Why and How to Upgrade to Java 17” in Silverado.  I find an in-person conference is really great for these “one stop shop” sessions.&lt;/p&gt;

&lt;h4 id=&quot;1300---1340---silverado---the-project-that-changed-my-mind-on-java-modules&quot;&gt;13:00 - 13:40 - Silverado - The Project that Changed my Mind on Java Modules&lt;/h4&gt;

&lt;p&gt;Java modules is the feature that should have been in JDK 1.0, but for
many extremely valid reasons did not show up until eleven years
later. Most of the trouble people have had using Java modules in
practice can be traced to necessary decisions projects have had to
make in the absence of such a core feature in the JDK.  The problem of
modularity is fundamental to computer science, and the Java module
system is one answer to that problem for the Java platform.  The
abstract for &lt;a href=&quot;https://twitter.com/JaapCoomans&quot;&gt;Jaap Coomans’s&lt;/a&gt; talk
states, “That’s when the box of Pandora really opened up.” Yep, that
is the most common experience of people trying to use Java modules in
practice. I am very curious to see Jaap’s answer.&lt;/p&gt;

&lt;h4 id=&quot;1400---1440---silverado---debugging-distributed-systems&quot;&gt;14:00 - 14:40 - Silverado - Debugging Distributed Systems&lt;/h4&gt;

&lt;p&gt;This topic is solid gold.  In my lexicon “debugging” is the same thing
as “deeply understanding”. If you can’t debug a system, you can’t
claim to deeply understand it.  I expect Java Champion &lt;a href=&quot;https://twitter.com/bjschrijver&quot;&gt;Bert Jan
Schrijver&lt;/a&gt; will leave you with
actionable lessons on this essential skill.&lt;/p&gt;

&lt;h4 id=&quot;1500---1540---rotunde---jvm-ergonomics-and-the-container-deep-dive&quot;&gt;15:00 - 15:40 - Rotunde - JVM Ergonomics and the Container: Deep Dive&lt;/h4&gt;

&lt;p&gt;The first thing that popped into my mind when reading &lt;a href=&quot;https://twitter.com/Tommy1199&quot;&gt;Sascha Selzer’s&lt;/a&gt; abstract for “JVM Ergonomics and the Container: Deep Dive” was Martin Thompson’s 2017 JavaLand Keynote about &lt;a href=&quot;https://www.javaland.eu/de/home/news/details/?tx_news_pi1%5Bnews%5D=1327&amp;amp;tx_news_pi1%5Bcontroller%5D=News&amp;amp;tx_news_pi1%5Baction%5D=detail&amp;amp;cHash=bb7d83b09cba83204cb0c902d1700990&quot;&gt;Mechanical Sympathy&lt;/a&gt;.  Martin’s concept is all about understanding the relationship between the hardware and the software running on top of it.  Given the complete centrality of containerized workloads to our current practice, this talk seems essential.&lt;/p&gt;

&lt;h4 id=&quot;1600---1640---rotunde---observing-cloud-native-java-apps-using-opentelemetry-on-aws-gcp-and-azure&quot;&gt;16:00 - 16:40 - Rotunde - Observing Cloud Native Java Apps Using OpenTelemetry on AWS, GCP and Azure&lt;/h4&gt;

&lt;p&gt;Sticking with the operations angle, this talk covers OpenTelemetry.  I’d say that OpenTelemetry will do for observability what the Servlet API did for CGI-BIN: make it standard for all Java apps.  Check this talk by &lt;a href=&quot;https://www.xing.com/profile/Bernhard_Lubomski/cv&quot;&gt;Bernhard Lubomski&lt;/a&gt; out.&lt;/p&gt;

&lt;h4 id=&quot;1700---1740---wintergarten---openid-connect-support-in-jakarta-ee-10&quot;&gt;17:00 - 17:40 - Wintergarten - OpenId Connect Support in Jakarta EE 10&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/rdebusscher&quot;&gt;Rudy De Bunsscher&lt;/a&gt; is a driving
force behind Payara and also an active Jakarta EE contributor. This
talk demonstrates the continued vitality of Jakarta EE by showing how
the OpenId Connect standard is supported in Jakarta EE 10.  From a
historical perspective, the Security API, introduced by David Blevins
in Jakarta EE 8, is a great foundation for OpenId Connect.  I am curious to see if Spring adopts the Security spec or continues in their
&lt;a href=&quot;https://www.youtube.com/watch?v=VZAJMBFq85s&quot;&gt;go your own way&lt;/a&gt;
approach when it comes to the “invent vs adopt” decision.&lt;/p&gt;

&lt;h4 id=&quot;1800---1840---silverado---how-to-survive-a-live-coding-session&quot;&gt;18:00 - 18:40 - Silverado - How to Survive a Live Coding Session&lt;/h4&gt;

&lt;p&gt;I have observed the world-master of live coding, Dr. Venkat
Subramaniam, and wondered, “how does he do it?” This meta-session
about live coding sessions from &lt;a href=&quot;https://twitter.com/rucek&quot;&gt;Jacek
Kunicki&lt;/a&gt; offers, “tips and tricks [to] help
you feel more comfortable and prepared for (almost)
everything. Real-life horror stories included!”  Sounds great!&lt;/p&gt;

&lt;h4 id=&quot;1900---1940---quantum-12---die-neue-gesprächskultur-ganz-wie-in-panama&quot;&gt;19:00 - 19:40 - Quantum 1+2 - Die neue Gesprächskultur: ganz wie in Panama&lt;/h4&gt;

&lt;p&gt;I’m glad to see my JSF expert group old colleague &lt;a href=&quot;https://www.goodreads.com/review/show/378749161&quot;&gt;Bernd Müller&lt;/a&gt; is still doing new and exciting different things in the Java world.  This particular topic of native-Java interaction (but not the GraalVM kind) is close to my heart, having worked with JNI over &lt;a href=&quot;https://www-archive.mozilla.org/oji/&quot;&gt;20 years ago&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;wednesday-16-march-2022&quot;&gt;Wednesday, 16 March 2022&lt;/h3&gt;

&lt;h4 id=&quot;0900---0940---wintergarden---java-at-microsoft---behind-the-scenes&quot;&gt;09:00 - 09:40 - Wintergarden - Java at Microsoft - Behind the scenes&lt;/h4&gt;

&lt;p&gt;When I first published this post, I had recommended Fabian’s talk
titled “State of the Java Metrics Libraries” in Rotunde.  I still want
to see this talk, but I must recommend you attend my colleagues
&lt;a href=&quot;https://twitter.com/karianna&quot;&gt;Martijn Verburg&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/gdams_&quot;&gt;George
Adams’s&lt;/a&gt; talk about the latest entrant in
the OpenJDK ecosystem, Microsoft. You can read more about it in this
blog post announcing &lt;a href=&quot;https://devblogs.microsoft.com/java/microsoft-deepens-its-investments-in-java/&quot;&gt;Microsoft joining the JCP&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;1000---1040---wintergarten---increase-your-productivity-with-intellij&quot;&gt;10:00 - 10:40 - Wintergarten - Increase Your Productivity with IntelliJ&lt;/h4&gt;

&lt;p&gt;My own interviews with &lt;a href=&quot;https://ridingthecrest.com/&quot;&gt;Rockstar Programmers&lt;/a&gt; support the observation that mastery of tools is the single most important skill in the Rockstar programmer’s toolbox. This session from &lt;a href=&quot;https://twitter.com/BoukeNijhuis&quot;&gt;Bouke Nijhuis&lt;/a&gt;, gives you tips for mastery of the most masterful Java IDE.&lt;/p&gt;

&lt;h4 id=&quot;1100---1140---wintergarten---from-zero-to-spring-boot-hero-with-github-codespaces&quot;&gt;11:00 - 11:40 - Wintergarten - From Zero to Spring Boot Hero with GitHub Codespaces&lt;/h4&gt;

&lt;p&gt;Have you heard of GitHub codespaces? Well, &lt;a href=&quot;https://twitter.com/sKriemhild&quot;&gt;Sandra Ahlgrimm&lt;/a&gt; is a past master of this transformative developer technology.  She joins forces with &lt;a href=&quot;http://twitter.com/martinlippert&quot;&gt;Martin Lippert&lt;/a&gt; to show how to become super productive with CodeSpaces and Spring Boot.&lt;/p&gt;

&lt;h4 id=&quot;1200---1240---stocks---der-application-server-ist-tot----es-lebe-jakarta-ee&quot;&gt;12:00 - 12:40 - Stock’s - Der Application Server ist tot (?) - es lebe Jakarta EE!&lt;/h4&gt;

&lt;p&gt;My main job at Microsoft is to ensure Java EE application server
workloads have a great home on Azure.  I have seen irrefutable Azure
revenue numbers that prove the Java EE app server is far from dead.
I’m looking forward to an outside perspective from &lt;a href=&quot;https://twitter.com/dirkweil&quot;&gt;Dirk Weil&lt;/a&gt; on this same question.&lt;/p&gt;

&lt;h4 id=&quot;1300---1340---wintergarten---die-all-stars-der-software-bugs--und-was-wir-von-ihnen-lernen-können&quot;&gt;13:00 - 13:40 - Wintergarten - Die All-Stars der Software-Bugs – und was wir von ihnen lernen können&lt;/h4&gt;

&lt;p&gt;I have seen many different anthropomorphisms for software bugs, but “all star team” is a new one. &lt;a href=&quot;https://twitter.com/perdian_de&quot;&gt;Christian Seifert&lt;/a&gt; brings this entertaining perspective on a fact of life for practicing developers.&lt;/p&gt;

&lt;h4 id=&quot;1400---1440---schauspielhaus---feminism-for-geeks--a-gentle-introduction&quot;&gt;14:00 - 14:40 - Schauspielhaus - Feminism for Geeks – A Gentle Introduction&lt;/h4&gt;

&lt;p&gt;I vehemently challenge anyone who asserts that being “woke” or
“anti-fascist” is a bad thing.  The same thing goes for anyone who
feels that masculinity is somehow under attack. It’s not, and if you
believe it is, you believe so in spite of reams of empirical evidence.
I applaud the conference committee for accepting this talk from Wenny
Susanto-Berky and urge you not to miss it.&lt;/p&gt;

&lt;h4 id=&quot;1500---1540---silverado---hilfe-ich-will-meinen-monolithen-zurück&quot;&gt;15:00 - 15:40 - Silverado - Hilfe, ich will meinen Monolithen zurück!&lt;/h4&gt;

&lt;p&gt;Here we are, roughly seven years since Sam Newman’s seminal book
“Building Microservices” and I’m starting to see talks like &lt;a href=&quot;https://twitter.com/mobilelarson&quot;&gt;Lars Röwekamp’s&lt;/a&gt; “Help, I want my
monolith back”.  This view is not mere contrarianism. There are
definitely aspects of the monolith that should be preserved, even in a
microservices based architecture.  I’m sure Lars will break it down
for us.&lt;/p&gt;

&lt;h4 id=&quot;1600---1640---schauspielhaus---der-java-werkzeugkasten--die-praktischen-kommandozeilentools-des-jdk&quot;&gt;16:00 - 16:40 - Schauspielhaus - Der Java-Werkzeugkasten – Die praktischen Kommandozeilentools des JDK&lt;/h4&gt;

&lt;p&gt;All of us have been installing JDKs on machines for years and years, but how many know about all the command line tools that get installed in that package? &lt;a href=&quot;https://twitter.com/mesirii&quot;&gt;Michael Hunger&lt;/a&gt; shows you how to get more from what you already have.&lt;/p&gt;

&lt;h4 id=&quot;1700---1740---quantum-34---im-dutzend-billiger-kanns-eine-assertion-mehr-sein-mit-assertj-zum-testerfolg&quot;&gt;17:00 - 17:40 - Quantum 3+4 - Im Dutzend billiger. Kann’s eine Assertion mehr sein? Mit AssertJ zum Testerfolg&lt;/h4&gt;

&lt;p&gt;There is a whole track on testing at JavaLand, but this is only the second testing talk I’ve selected. I assure you, this is not because testing is unimportant. Rather, my role as Principal Architect at Microsoft has me working at a higher level of abstraction.  However, I am fascinated by the journey of the humble assertion over time.  The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert&lt;/code&gt; keyword was added to Java in 2002, but since then the entire practice of CI/CD has evolved.  This talk from &lt;a href=&quot;https://twitter.com/bikratz&quot;&gt;Birgit Kratz&lt;/a&gt; shows how the concept of assertions is compatible with our contemporary highly-automated development practice.&lt;/p&gt;

&lt;h3 id=&quot;thursday-17-march-2022&quot;&gt;Thursday, 17 March 2022&lt;/h3&gt;

&lt;h4 id=&quot;0900---1700----bambuti-matamba---modern-jakarta-ee-and-microprofile-on-azure-open-liberty-jboss-eap-and-weblogic&quot;&gt;09:00 - 17:00 -  Bambuti (Matamba) - Modern Jakarta EE and Microprofile on Azure: Open Liberty, JBoss EAP, and WebLogic&lt;/h4&gt;

&lt;p&gt;I’m just going to recommend my own workshop with Sandra Ahlgrimm.
Here’s the snappy abstract I wrote.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;You may have heard of the saying, “software is eating the
world”. You may have heard of the concept of “digital
transformation”.  You may be, or know, someone who must implement
both of these things by moving an existing system to a public cloud.
Talk about a full stack job! Join Java veteran Ed Burns and Senior
Developor Advocate Sandra Ahlgrimm for an educational and
informative deep dive into how to build for Microsoft Azure. This
workshop will teach Azure concepts by the example of how to easily
stand up an Azure Kubernetes Service (AKS) and run a Java EE
application inside of it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Participants will explore Oracle WebLogic Server, IBM Open Liberty
and JBoss EAP as the Java EE runtimes.  We will run the first two of
these Java EE environments on AKS and the third on Azure App
Service. As we go along, we will look under the hood at the
Microsoft, Oracle IBM and Red Hat technologies that enable it all to
work.&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">Innovation, Gratitude, Compassion and the Cloud - Workshop-Tage Keynote Summary Document</title><link href="/blog/2021/11/22/workshoptage-keynote-summary-document.html" rel="alternate" type="text/html" title="Innovation, Gratitude, Compassion and the Cloud - Workshop-Tage Keynote Summary Document" /><published>2021-11-22T08:40:00-05:00</published><updated>2021-11-22T08:40:00-05:00</updated><id>/blog/2021/11/22/workshoptage-keynote-summary-document</id><content type="html" xml:base="/blog/2021/11/22/workshoptage-keynote-summary-document.html">&lt;p&gt;This document captures the essence of my keynote talk, “Innovation,
Gratitude, Compassion and the Cloud”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20211119-keynote-summary-03.jfif&quot; alt=&quot;Layers upon layers of software&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Every one of us hearing this speech is fortunate enough to work in the
IT industry and can improve the quality of our individual and group
innovations by being thankful for prior innovations and aware of the
tradeoffs that made them succeed over time.  Let’s go through each
section of the speech and see how I expanded on that theme.&lt;/p&gt;

&lt;h3 id=&quot;introspection&quot;&gt;Introspection&lt;/h3&gt;

&lt;p&gt;Here, I set the message: “take some time to think about how we got to
where we are and be thankful for it, and find a way to give back”.  I
used a Global -&amp;gt; Local progression.&lt;/p&gt;

&lt;p&gt;I’m thankful to be here, especially in the face of COVID-19.  Yes, I
want to say the usual, and appropriate, thanks to Marcus and the team,
and I’m honored to help celebrate 30 years of Workshoptage.  Let’s
take a moment to recognize some big things that had to happen to bring
us to this point:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;mRNA vaccines: an idea more than 30 years in the making. If you are
suspicious about how such a big idea can be developed so quickly,
rest assured it hasn’t been developed quickly.  The mRNA vaccine
technique started being worked on in earnest &lt;a href=&quot;https://www.uab.edu/news/youcanuse/item/12059-covid-19-mrna-vaccines-how-could-anything-developed-this-quickly-be-safe&quot;&gt;in the late 1990s&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;Moderna was not the only one working on an mRNA approach to
 vaccines. BioNTech is a German company established to work on
 immunotherapies in 2008 by a Turkish couple, who immigrated to
 Germany.&lt;/p&gt;

    &lt;p&gt;On top of this, insights from the fight against flu and HIV were
 crucial creating an effective vaccine for COVID-19.&lt;/p&gt;

    &lt;p&gt;It is also important to recognize the brave human volunteers who
 accepted the call when governments took the &lt;a href=&quot;https://news.northeastern.edu/2020/10/23/are-covid-19-vaccine-trials-ethical/&quot;&gt;unprecedented action&lt;/a&gt; of
 relaxing the pace at which human trials &lt;a href=&quot;https://www.bbc.com/news/health-56097088&quot;&gt;can take place&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Functioning government based on expertise: The indisputable fact
 that viruses do not respect national borders demonstrated the
 importance of nation-states having functional government based on
 expertise, rather than just political expedience. In addition to
 providing fiscal and legal accelerators for vaccine development and
 distribution, governments also took historically unprecedented
 fiscal stimulus actions.  I argued that these were and are helpful.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Businesses adapting to life with COVID-19: In-person conferences are
 business-travel.  International conferences interact with all
 sectors of the travel industry, all of whom have had major
 adjustments due to COVID-19.  For example, consider the airline I
 always fly to visit Europe:&lt;/p&gt;

    &lt;p&gt;“Lufthansa’s €9bn ($9.8bn) bail-out allows it to buy 80 new fuel-efficient planes, but it took more money than it needed to preserve its position as a global airline.”&lt;/p&gt;

    &lt;p&gt;Source: &lt;a href=&quot;https://www.economist.com/leaders/2020/08/01/airlines-have-a-chance-to-emerge-from-the-crisis-leaner-and-greener&quot;&gt;The Economist 2021-08-01&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Commemoration is also a kind of thankfulness.  Let us remember those
 who died due to COVID-19, even as we are fortunate to be here at
 this event.&lt;/p&gt;

    &lt;p&gt;“The standard method of tracking changes in total mortality is “excess deaths”. This number is the gap between how many people died in a given region during a given time period, regardless of cause, and how many deaths would have been expected if a particular circumstance (such as a natural disaster or disease outbreak) had not occurred. Although the official number of deaths caused by covid-19 is now 4.5m, our single best estimate is that the actual toll is 15.2m people. We find that there is a 95% chance that the true value lies between 9.3m and 18.1m additional deaths.”&lt;/p&gt;

    &lt;p&gt;Source: &lt;a href=&quot;https://www.economist.com/graphic-detail/coronavirus-excess-deaths-estimates&quot;&gt;The Economist 2021-10-19&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;reflection&quot;&gt;Reflection&lt;/h3&gt;

&lt;p&gt;In the middle section, I looked at a few technology domains that
enable today’s public cloud and asked about the tradeoffs that were
consciously made by the stewards of that domain to bring the
technology to its present state.  Here are some points that guide the
examination of each domain and its tradeoffs.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Making the technology gain popularity, but often at the expense of
correctness and quality&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consider technologies that solve the harder problems, problems that
most users don’t have or don’t know they have. The complexity
required to solve these harder problems often limits reach.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Simpler technologies usually win, even if they don’t solve the
harder problems.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;But after they win, is too late to revise the technology to fix the
harder problems.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Security&lt;/li&gt;
      &lt;li&gt;Vulnerability to ransomeware&lt;/li&gt;
      &lt;li&gt;Spam&lt;/li&gt;
      &lt;li&gt;Phishing&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here I mention my former colleague at Sun Microsystems Dick Gabriel,
and his brief essay &lt;a href=&quot;https://www.dreamsongs.com/WorseIsBetter.html&quot;&gt;Worse is Better&lt;/a&gt;.
Very interestingly, he mentions the legendary Jamie Zawinski, whom I have always 
esteemed but never managed to meet.&lt;/p&gt;

&lt;p&gt;My premise for the middle section is that the technologies that enable
the cloud were built and are continually developed using “Worse is
Better”, but we insiders have a responsibility to question that way
and try to at least understand the tradeoffs.&lt;/p&gt;

&lt;h4 id=&quot;networking&quot;&gt;Networking&lt;/h4&gt;

&lt;p&gt;The packet switched networking underpins the entire Internet and all
public clouds was a radical idea when it first emerged.  You must
remember that the telephone industry came from telegrams, then
switchboards for voice, but all of it was connection oriented.&lt;/p&gt;

&lt;p&gt;The concept of breaking a message up into little chunks and then putting
them back together when all of them arrive was a radical idea.&lt;/p&gt;

&lt;p&gt;Networks, and the companies that ran them, were accustomed to
connection-oriented designs.&lt;/p&gt;

&lt;p&gt;Practical capitalism, the kind one which one can build a stable
career, tends to have a problem with radical ideas: They would rather
not be disrupted by them.  Even so, the benefits of packet switched
networking, in terms of cost, resiliency, and flexibility could not be
denied.&lt;/p&gt;

&lt;p&gt;Networking is where the idea of interoperability is essential. For
that you need standards.  This gives me an opportunity to riff on the
heroes of standards.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Working on standards bodies is thankless work.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Company shareholders want to maximize their investment. Sharing is
anathema to maximizing profit.  Standards are formalized sharing.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Individuals that work for corporations, but which support standards,
often have to fight to prove the business case for standards.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because networking is so fundamental to the cloud, many of the terms
from networking have seeped into general IT usage, such as “control
plane” “Day minus one, day zero, day one, day two, day N operations”,
“North-south” “East-west” on diagrams.&lt;/p&gt;

&lt;p&gt;I ended the section with a survey of WAN, LAN, and Consumer services,
showing the winners and losers in each section, and also having an
opportunity to drop some fun old names that no-one hears about any
more.  BITNet, DECnet, Toekn Ring, Minitel and Prodigy for example.&lt;/p&gt;

&lt;p&gt;Here are some assorted links of interest for this section.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://networkencyclopedia.com/networking-history-1970/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://www.wired.com/2012/09/what-do-the-h-bomb-and-the-internet-have-in-common-paul-baran/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://spectrum.ieee.org/osi-the-internet-that-wasnt#toggle-gdpr&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://kb.iu.edu/d/aaso&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://bit.net/&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;information-representation&quot;&gt;Information representation&lt;/h4&gt;

&lt;p&gt;In this section I talked about how information is represented.&lt;/p&gt;

&lt;p&gt;Just as with the networking world, there was a lot of debate about how
responsibilities should be broken down.&lt;/p&gt;

&lt;p&gt;Earlier attempts were informed by our existing thinking of information
being in centralized libraries that are indexed and connected.  This
lead to the creation of distributed index technologies such as Archie
and Gopher. Each node was responsible for indexing the information it
hosted, and sharing the ability to search that index with other nodes.&lt;/p&gt;

&lt;p&gt;Then Tim Berners Lee comes along and says&lt;/p&gt;

&lt;p&gt;YAGNI (you ain’t gonna need it), just give me two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The ability to fetch a text file from one computer to another
without authentication.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;HTTP GET. The whole method, noun, verb, thing came later.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some way to look through that text file to find other text files.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Centralized indexing and imparting semantics to larger collections of
text files is outside the scope of his problem.&lt;/p&gt;

&lt;p&gt;With centralized indexing, Each server had to know about the others.
When you say YAGNI to this idea, lots of magic happens.&lt;/p&gt;

&lt;p&gt;This turned out to be really popular. It lowered the barriers to
entry, and also discarded a lot of the semantic richness of the other
systems.  In the end mass market wins.  Worse is better, right?&lt;/p&gt;

&lt;p&gt;However, notice that since the early Web deprioritized the semantic
richness of centralized indexing in favor of ease of authoring and
hosting, there have been numerous efforts to put it back.  Remember
“the semantic web”?  Technorati tags?  One could argue that Google
Page Rank, &lt;strong&gt;utm&lt;/strong&gt; tags, and SEO is a way to associate semantic
richness with web pages, but it does so in a completely propietary
way, optimized more for revenue creation than user value.&lt;/p&gt;

&lt;h5 id=&quot;much-older-historical-aside-minitel&quot;&gt;Much older historical aside: Minitel&lt;/h5&gt;

&lt;blockquote&gt;
  &lt;p&gt;https://www.computerhistory.org/timeline/networking-the-web/#169ebbe2ad45559efbc6eb35720e1b49&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;In 1981, France Telecom offers free Minitel terminals to every phone subscriber, launching the first mass “Web.” Minitel will have tens of millions of users by 1990 and online services such as newspapers, train schedules, tax filing, and erotic classified ads as well as email and chat. The ‘80s Minitel boom heavily foreshadows the dot-com boom. But the business model is different. Customers pay by the minute for access to Minitel services (sites), charged on their phone bills; France Telecom keeps about a third and passes on the rest to the service provider. As in the later Web, Minitel service providers run their own servers. But they also pay France Telecom a fee to connect to its network. Despite major efforts in the US, Canada, and Europe, similar videotex systems will fizzle outside France.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Minitel and other systems needed to have some kind of system to author
content on the system.  Such systems had many of the attributes of
early HTML, but were propietary and did not benefit from economic
network effects for tools and talent.&lt;/p&gt;

&lt;h4 id=&quot;monetization&quot;&gt;Monetization&lt;/h4&gt;

&lt;p&gt;In this section I recounted my early direct experiences with the web
and two important developments.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the invention of the &amp;lt;IMG&amp;gt; tag: NCSA Mosaic.&lt;/li&gt;
  &lt;li&gt;the invention of CGI-BIN.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20211119-keynote-summary-05.png&quot; alt=&quot;Layers upon layers of software&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These two inventions, combined with the ease of authoring for
cross-device reach, even in the early web, attracted the attention of
venture capital. When VC gets involved, the pressure to follow “Worse
is Better” becomes even stronger.  The growth boom of the early Web
spilled over to other technologies as well.  Consider UNIX SMTP based
email.  The protocols that enabled UNIX email to grow and become
widespread did not have any strong concept of aggregated
authentication. The absence of such capability haunts us to this day,
and has created the SPAM and phishing industries.  Perhaps if more
time had been invested making email more authenticated and secure when
email was new, we would not have had as many hacks as we have that
started with phishing.&lt;/p&gt;

&lt;h4 id=&quot;cloud-economics-forces-on-computing-hardware&quot;&gt;Cloud economics forces on computing hardware.&lt;/h4&gt;

&lt;p&gt;My time at Sun Microsystems coincided with the introduction of
“Utility Computing”, in 2004. This was an idea before its time, and
also at the wrong home. As I explore in the next section, cloud scale
can only be possible with commodity everything, and Sun was a boutique
hardware company.  The early efforts at cloud were also stymied by the
lack of a concept of containers, though Solaris did have Zones. Docker
itself started in a similar way, with LXC, but now using
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libcontainer&lt;/code&gt;.  Happily, the best parts of Solaris are now in
GNU/Linux, such as ZFS and DTrace (shout out to Brian Cantrill).&lt;/p&gt;

&lt;p&gt;With these economic forces, we can now have an enormously powerful and
encompassing IT estate managed by a single pane of glass, as shown in
this prophetic video.&lt;/p&gt;

&lt;video width=&quot;500&quot; height=&quot;360&quot; controls=&quot;&quot;&gt;
  &lt;source src=&quot;https://www.dropbox.com/s/wal5pt2bgqj6is2/eb-719-blade-runner-zoom-in-finished.mp4?raw=1&quot; type=&quot;video/mp4&quot; /&gt;
  Your browser does not support the video tag.
&lt;/video&gt;

&lt;h4 id=&quot;commoditization-of-all-aspects-of-it-infrastructure&quot;&gt;Commoditization of all aspects of IT infrastructure&lt;/h4&gt;

&lt;p&gt;All of the forces building in the preceding sections created the
conditions for the public clouds to emerge. The commoditization of
these aspects, are particularly important.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Networking (software defined and otherwise)&lt;/li&gt;
  &lt;li&gt;Compute&lt;/li&gt;
  &lt;li&gt;Persistent storage&lt;/li&gt;
  &lt;li&gt;Memory&lt;/li&gt;
  &lt;li&gt;Platform services&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also observed that the ability for new innovations to build on (with
gratitude) old ones has accelerated.  Consider the anology of
archeology. New cities are built on top of old ones, that’s why
archeologists always have to dig to find the old stuff.  We do the
same thing with the cloud.&lt;/p&gt;

&lt;p&gt;Look at the layer upon layer of software alone that now exists to run
your Java servlet.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20211119-keynote-summary-01.png&quot; alt=&quot;Layers upon layers of software&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another example, the design of HTTP/2. It borrows ideas from the
session, transport and network layers of the OSI protocol stack, but
is itself an application layer protocol.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/20211119-keynote-summary-02.png&quot; alt=&quot;HTTP/2 takes a cue from OSI&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, I pause to ask the audience to take some time to look
into the history of the technologies you are using now? What are the
ideas on which it is built? What ideas did your current thing reject
as YAGNI?  Was there any part of that rejected idea that you wish had
not been rejected?&lt;/p&gt;

&lt;h3 id=&quot;projection&quot;&gt;Projection&lt;/h3&gt;

&lt;p&gt;I closed the keynote with a look forward, taking Philip Armour’s five
item list of knowledge representation media as a jumping off point.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DNA&lt;/li&gt;
  &lt;li&gt;Brains&lt;/li&gt;
  &lt;li&gt;Hardware design&lt;/li&gt;
  &lt;li&gt;Books/Photos/Videos&lt;/li&gt;
  &lt;li&gt;Software&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;But I asked what’s next after software?  Perhaps it is just more
software, but this time software that explains itself.  Indeed, this
is at the heart of &lt;a href=&quot;https://towardsdatascience.com/an-overview-of-model-explainability-in-modern-machine-learning-fc0f22c8c29a&quot;&gt;machine learning model
explainability&lt;/a&gt;. For
more on this topic see &lt;a href=&quot;https://christophm.github.io/interpretable-ml-book/&quot;&gt;Interpretable Machine
Learning&lt;/a&gt; by
Christoph Molnar.&lt;/p&gt;

&lt;p&gt;Finally, I ask the audience a final question.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Is Worse is Better driving the development of today’s world changing technologies, such as AI and nano technology, as it did for the Web, Email, and Social networks?
If you were in the position to make a Worse is better choice, which would you choose?&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name></name></author><summary type="html">This document captures the essence of my keynote talk, “Innovation, Gratitude, Compassion and the Cloud”.</summary></entry><entry><title type="html">Keynote Summary Documents: Is Paul Hughes right?</title><link href="/blog/2021/11/19/keynote-summary-documents.html" rel="alternate" type="text/html" title="Keynote Summary Documents: Is Paul Hughes right?" /><published>2021-11-19T17:45:00-05:00</published><updated>2021-11-19T17:45:00-05:00</updated><id>/blog/2021/11/19/keynote-summary-documents</id><content type="html" xml:base="/blog/2021/11/19/keynote-summary-documents.html">&lt;p&gt;I was blessed with the opportunity to take full advantage of the brief
window of COVID-19 pandemic relaxation in early September 2021 and
accepted the opportunity to &lt;a href=&quot;https://workshoptage.ch/jubilaeumsfeier&quot;&gt;deliver the
keynote&lt;/a&gt; at the 30th
Anniversary of Workshop-Tage in Zürich, Switzerland.  I decided to
follow the advice of this guy, Paul Hughes.  He advises: After a
Keynote Speech: Avoid this Common Mistake: &lt;a href=&quot;https://paulhugheslive.com/after-a-keynote-speech-avoid-this-common-mistake/&quot;&gt;Do not share
slides&lt;/a&gt;.
Mr. Hughes’s blog post is targeted at the party hiring the keynote
speaker, but with the keynote speaker themselves as a secondary
target.&lt;/p&gt;

&lt;p&gt;Life being what it is, I’m still working on the summary document,
three months later, but have the second draft up at &lt;a href=&quot;https://gist.github.com/edburns/cc938e58a4d42edcccb2061be071a916&quot;&gt;my
gist&lt;/a&gt;.
I intend to post the actual summary document as my next post here.&lt;/p&gt;</content><author><name></name></author><summary type="html">I was blessed with the opportunity to take full advantage of the brief window of COVID-19 pandemic relaxation in early September 2021 and accepted the opportunity to deliver the keynote at the 30th Anniversary of Workshop-Tage in Zürich, Switzerland. I decided to follow the advice of this guy, Paul Hughes. He advises: After a Keynote Speech: Avoid this Common Mistake: Do not share slides. Mr. Hughes’s blog post is targeted at the party hiring the keynote speaker, but with the keynote speaker themselves as a secondary target.</summary></entry><entry><title type="html">Ed’s Microsoft Build May 2021 Session Picks</title><link href="/blog/2021/05/19/build-picks.html" rel="alternate" type="text/html" title="Ed’s Microsoft Build May 2021 Session Picks" /><published>2021-05-19T18:30:00-04:00</published><updated>2021-05-19T18:30:00-04:00</updated><id>/blog/2021/05/19/build-picks</id><content type="html" xml:base="/blog/2021/05/19/build-picks.html">&lt;p&gt;&lt;em&gt;Cross posted at &lt;a href=&quot;https://dev.to/edburns00/ed-s-microsoft-build-may-2021-session-picks-2l9e&quot;&gt;dev.to&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ever since the end of in-person events I have not bothered to do my traditional “Ed’s session picks” posts, as I have so often in the past.  (These posts are a ride through memory lane: &lt;a href=&quot;/blog/2008/04/25/javaone-2008-picks.html&quot;&gt;2008&lt;/a&gt;, &lt;a href=&quot;/blog/2011/06/14/jazoon-2011-picks.html&quot;&gt;2011&lt;/a&gt;, &lt;a href=&quot;/blog/2011/09/28/updated-20110930-1357-ed-burns-javaone-2011-session-picks.html&quot;&gt;2011&lt;/a&gt;, &lt;a href=&quot;/blog/2014/02/18/eds-devnexus-2014-picks.html&quot;&gt;2014&lt;/a&gt;, &lt;a href=&quot;/blog/2014/03/03/eds-javaland-2014-picks.html&quot;&gt;2014&lt;/a&gt;, &lt;a href=&quot;/blog/2015/01/15/javaland-2015-conference-picks.html&quot;&gt;2015&lt;/a&gt;, &lt;a href=&quot;/blog/2017/02/21/devnexus-2017-picks.html&quot;&gt;2017&lt;/a&gt;, &lt;a href=&quot;/blog/2017/02/27/javaland-2017-picks.html&quot;&gt;2017&lt;/a&gt;, &lt;a href=&quot;/blog/2017/03/20/devoxx-us-2017-picks.html&quot;&gt;2017&lt;/a&gt;, &lt;a href=&quot;/blog/2017/04/19/goto-chicago-picks.html&quot;&gt;2017&lt;/a&gt;, &lt;a href=&quot;/blog/2019/03/11/javaland-2019-picks.html&quot;&gt;2019&lt;/a&gt;, &lt;a href=&quot;/blog/2019/08/26/oracle-code-one-2019-picks.html&quot;&gt;2019&lt;/a&gt;, &lt;a href=&quot;/blog/2019/11/20/jvm-con-picks.html&quot;&gt;2019&lt;/a&gt; ).  Now that Microsoft is focusing so heavily on making Java run great on Azure, it’s time to survey what Build 2021 has to offer Java developers.&lt;/p&gt;

&lt;p&gt;The traditional audience for Microsoft Build is less technical and
more business focused than the audience for the conferences I usually
attend.  But at this point in my career, I’m ok with that.  I am aware
that success with Java on Azure means influencing that audience.  So
I’m very excited to highlight these exciting Java related sessions at
Microsoft Build.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: if you go to the &lt;a href=&quot;https://mybuild.microsoft.com/sessions&quot;&gt;Session scheduler&lt;/a&gt; and enter “java not javascript” you will see the Java related sessions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;tuesday-25-may-2021&quot;&gt;Tuesday, 25 May 2021&lt;/h2&gt;

&lt;h3 id=&quot;0500-edt-java-champions-talk-java-at-microsoft-interstitial-programming&quot;&gt;05:00 EDT Java Champions talk Java at Microsoft: Interstitial Programming&lt;/h3&gt;

&lt;p&gt;Join &lt;a href=&quot;https://twitter.com/juliendubois&quot;&gt;Julien Dubois&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/JonathanGiles&quot;&gt;Jonathan Giles&lt;/a&gt; and I for a sevin minute
interstitial programming segment talking about high velocity cloud
native Java.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=gFRbTWS32EA&quot;&gt;Watch on YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1800-edt-kroger-joins-customer-tech-talks-to-discuss-how-they-are-using-java-on-azure-to-manage-stock-levels-across-their-stores&quot;&gt;18:00 EDT Kroger joins Customer Tech Talks to discuss how they are using Java on Azure to manage stock levels across their stores&lt;/h3&gt;

&lt;p&gt;Success at Microsoft is all about impact.  How much impact does your
work have?  How does it achieve our vision of empowering every person
and every organization on the planet to achieve more?  This 30 minute
customer success focused session shows the impact Java has at &lt;a href=&quot;https://twitter.com/kroger&quot;&gt;Kroger&lt;/a&gt;, one of
the leading grocery retailers in the US.  They also own &lt;a href=&quot;https://twitter.com/Fred_Meyer&quot;&gt;Fred Meyer&lt;/a&gt;. My colleague &lt;a href=&quot;https://twitter.com/asirselvasingh&quot;&gt;Asir Selvasingh&lt;/a&gt; is instrumental in the Java work done with Kroger.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/db6c0213-d07f-4ee1-8d5c-26154d7632b6?source=sessions&quot;&gt;Content catalog link&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wednesday-26-may-2021&quot;&gt;Wednesday, 26 May 2021&lt;/h2&gt;

&lt;h3 id=&quot;1800-edt-ask-the-java-at-microsoft-experts&quot;&gt;18:00 EDT Ask the Java at Microsoft Experts&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/reza_rahman&quot;&gt;Reza Rahman&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/brunoborges&quot;&gt;Bruno Borges&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/karianna&quot;&gt;Martijn Verburg&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/asirselvasingh&quot;&gt;Asir Selvasingh&lt;/a&gt; and I are
in the virtual booth and are excited to take your questions.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/aded32d6-b9e3-486c-a208-9ebcece1fbdd?source=sessions&quot;&gt;Content catalog link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=AIc6rdEe3Ys&quot;&gt;Watch on YouTube&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thursday-26-may-2021&quot;&gt;Thursday, 26 May 2021&lt;/h2&gt;

&lt;h3 id=&quot;1000-edt-ask-the-experts-whats-new-for-developers-for-building-dual-screen-apps-for-the-surface-duo&quot;&gt;10:00 EDT Ask the Experts: What’s new for Developers for building Dual Screen Apps for the Surface Duo&lt;/h3&gt;

&lt;p&gt;Remember the Nintendo DS (dual screen)?  The Surface Duo also has two screens, but it’s a Microsoft device and it runs Android.  That means, you can code for it using Java or Kotlin.  This one sounds really fun.  I look forward to seeing what &lt;a href=&quot;https://twitter.com/gmerin&quot;&gt;Guy Merin&lt;/a&gt; has to say.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/19b093c6-6718-4114-87f0-861baafefa65?source=sessions&quot;&gt;Content catalog link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;on-demand-sessions&quot;&gt;On Demand Sessions&lt;/h2&gt;

&lt;h3 id=&quot;accelerating-enterprise-java-workloads-on-azure&quot;&gt;Accelerating enterprise Java workloads on Azure&lt;/h3&gt;

&lt;p&gt;This is where we get to show off all the things we are doing with Java EE related technologies on Azure.  It’s presented by my colleague &lt;a href=&quot;https://twitter.com/reza_rahman&quot;&gt;Reza Rahman&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/2ce6782a-a7e4-4bcf-b4b6-1c9fd5d3e58a?source=sessions&quot;&gt;Content catalog link&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;run-linux-web-apps-easily-and-securely-on-azure-app-service&quot;&gt;Run Linux web apps easily and securely on Azure App Service&lt;/h3&gt;

&lt;p&gt;Azure App Service and Azure Kubernetes Service are the two workhorse
services of Azure compute.  This talk is about the former, which
provides a much easier to understand model of the cloud to users than
what is offered by AKS.  App Service offers a wide variety of
pre-configured solution stacks on Java, .NET Core, Python, and Node,
including Tomcat and Java EE JBoss EAP.  I’m not sure how much Java
will be covered, but App Service definitely supports Java vere well.&lt;/p&gt;

&lt;p&gt;Presented by &lt;a href=&quot;https://twitter.com/AzureWeekly/status/1322878013739065346&quot;&gt;Stefan Schackow&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mybuild.microsoft.com/sessions/77d6c20f-6b37-4643-9e31-6bcd6da4dad0?source=sessions&quot;&gt;Content catalog link&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Cross posted at dev.to.</summary></entry><entry><title type="html">Blurring parts of the screen in OBS Studio, other tips</title><link href="/blog/2021/04/02/obs-blur.html" rel="alternate" type="text/html" title="Blurring parts of the screen in OBS Studio, other tips" /><published>2021-04-02T16:10:00-04:00</published><updated>2021-04-02T16:10:00-04:00</updated><id>/blog/2021/04/02/obs-blur</id><content type="html" xml:base="/blog/2021/04/02/obs-blur.html">&lt;p&gt;This blog posts captures some learning I did about OBS recently.&lt;/p&gt;

&lt;p&gt;I recently invested a little time in learning the basics of &lt;a href=&quot;https://github.com/obsproject/obs-studio&quot;&gt;OBS Studio&lt;/a&gt;.  OBS is one of
those programs that seems enormously powerful, has a vast user base,
and a correspondingly vast amount of content about it on YouTube.
There is so much content about OBS it’s hard to tell what’s good.
Thankfully, I stumbled upon 
&lt;a href=&quot;https://www.youtube.com/watch?v=ySENWFIkL7c&quot;&gt;this 27 minute tutorial&lt;/a&gt;
from Kevin Stratvert.&lt;/p&gt;

&lt;p&gt;In addition to Mr. Stratvert’s tutorial, there are some other
essential tips I want to capture.&lt;/p&gt;

&lt;h2 id=&quot;blurring-during-recording&quot;&gt;Blurring during recording&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=5zM3xvkb8dY&quot;&gt;This video&lt;/a&gt;, from a much
more gamer-focused perspective, did give a practical tip for how
selectively blur arbitrary portions of the screen.  I’ll outline the
process next.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Add a new &lt;strong&gt;Display capture&lt;/strong&gt; source.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Arrange it above your “main” &lt;strong&gt;Display capture&lt;/strong&gt; source.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add a &lt;strong&gt;Scaling/Aspect Ratio&lt;/strong&gt; filter to it.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;Scale Filtering&lt;/strong&gt; Point.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Resolution&lt;/strong&gt; 640x360&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Drag the red grabber handles so that the new &lt;strong&gt;Display capture&lt;/strong&gt;
source completely covers the “main” display capture source.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;HERE IS THE IMPORTANT STEP&lt;/strong&gt;: Hold down the alt key and re-size
the grabbers to cover the area you want to blur.  &lt;strong&gt;It is very
important you don’t move the region by dragging it.&lt;/strong&gt; Use the
alt-resize technique to effectively move the blur zone.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;This works because of the low resolution you set.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Repeat this process for whatever other parts of the screen you want
to blur.  Note that you can blur/un-blur easily with the “eye” icon
for htat &lt;strong&gt;Display capture&lt;/strong&gt; source in the &lt;strong&gt;Sources&lt;/strong&gt; screen.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;bluring-after-recording&quot;&gt;Bluring after recording&lt;/h2&gt;

&lt;p&gt;I found I missed some things on my first recording and needed to do
additional blurring.  No problem, add a &lt;strong&gt;Media&lt;/strong&gt; source and select
the file from the first recording.  You can then play the first recording
into another recording and add more blurring as desired. I found this
reminded me of some of the performance aspect of &lt;a href=&quot;https://www.youtube.com/watch?v=Sqz5YaHx26g&quot;&gt;real time analog audio mixing&lt;/a&gt; because I had to take cues from the media source for when to blur/un-blur certain parts of the screen.&lt;/p&gt;

&lt;p&gt;Note, when you add &lt;strong&gt;Media&lt;/strong&gt; source, by default you cannot hear the
audio. Turn it on with these steps.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;In the &lt;strong&gt;Audio Mixer&lt;/strong&gt; panel, in the row for &lt;strong&gt;Media Source&lt;/strong&gt; select the cog icon and select &lt;strong&gt;Advanced Audio Properties&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the row for &lt;strong&gt;Media Source&lt;/strong&gt;, in the column for &lt;strong&gt;Audio Monitoring&lt;/strong&gt;, ensure &lt;strong&gt;Monitor and Output&lt;/strong&gt; is selected.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;removing-click-sounds-from-your-mic-while-recording&quot;&gt;Removing click sounds from your mic while recording&lt;/h2&gt;

&lt;p&gt;Add these filters to your &lt;strong&gt;Mic/Aux&lt;/strong&gt; source.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Noise Suppression&lt;/strong&gt;: RNNoise&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Noise Gate&lt;/strong&gt;&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Close Threshold: -54.00 dB&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Open Threshold: -39.00 dB&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;Remainder at defaults.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name></name></author><summary type="html">This blog posts captures some learning I did about OBS recently.</summary></entry><entry><title type="html">File Explorer and WSL2 PWD</title><link href="/blog/2020/10/30/wslpwd.html" rel="alternate" type="text/html" title="File Explorer and WSL2 PWD" /><published>2020-10-30T13:10:00-04:00</published><updated>2020-10-30T13:10:00-04:00</updated><id>/blog/2020/10/30/wslpwd</id><content type="html" xml:base="/blog/2020/10/30/wslpwd.html">&lt;p&gt;I had long been used to doing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open .&lt;/code&gt; on macOS to get finder window
open on the current directory in the shell.  I wanted something similar
under WSL2, but this is the best I could come up with.  It copies the
current working directory to the clipboard such that you can press
“ctrl-l crtl-v ret” in the File Explorer and get the same effect.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;wslpwd&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; //wsl&lt;span class=&quot;nv&quot;&gt;$/&lt;/span&gt;Ubuntu&lt;span class=&quot;nv&quot;&gt;$PWD&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'s:/:\\:g'&lt;/span&gt; | pbcopy
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assumptions&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pbcopy is installed&lt;/li&gt;
  &lt;li&gt;WSL distro name is Ubuntu&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It prepends the special &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;//wsl$/Ubuntu&lt;/code&gt; string to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$PWD&lt;/code&gt;, then uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sed&lt;/code&gt;
to transform the forward slashes to backslashes, then uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pbcopy&lt;/code&gt; to put
the result on the system clipboard.&lt;/p&gt;</content><author><name></name></author><summary type="html">I had long been used to doing open . on macOS to get finder window open on the current directory in the shell. I wanted something similar under WSL2, but this is the best I could come up with. It copies the current working directory to the clipboard such that you can press “ctrl-l crtl-v ret” in the File Explorer and get the same effect.</summary></entry></feed>