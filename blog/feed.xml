<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog/" rel="alternate" type="text/html" /><updated>2024-03-06T12:37:48-05:00</updated><id>/blog/feed.xml</id><title type="html">Ed Burns Blog</title><subtitle>Ed Burns blogs here, mostly about Java and software, but sometimes about other random things.
</subtitle><entry><title type="html">Ed’s JavaLand 2024 Session Picks</title><link href="/blog/2024/03/02/javaland-2024-picks.html" rel="alternate" type="text/html" title="Ed’s JavaLand 2024 Session Picks" /><published>2024-03-02T20:20:00-05:00</published><updated>2024-03-02T20:20:00-05:00</updated><id>/blog/2024/03/02/javaland-2024-picks</id><content type="html" xml:base="/blog/2024/03/02/javaland-2024-picks.html"><![CDATA[<p>Cross posted at <a href="https://dev.to/edburns/eds-javaland-2024-session-picks-23cd">dev.to</a>.</p>

<p>I’m very blessed to have the opportunity to speak at the 10th anniversary JavaLand conference. It will be very different to not be at PhantasiaLand this year, but I am so fortunate to have been there all the previous years. It’s just as well since I was starting to not be able to handle the Black Mamba roller coaster anymore.  Also, I’m hoping it takes less time to walk between sessions at this <a href="https://thevendry.com/venue/197499/nurburgring-nurburg-germany">new venue</a>.</p>

<p>Since this is the tenth anniversary of JavaLand, and I have had the extreme good fortune at presenting at every one of them, I dug up the links of all my previous session picks posts. See how far we’ve come together!</p>

<ul>
  <li><a href="/blog/2022/02/15/javaland-2022-picks.html">2022</a></li>
  <li><a href="/blog/2019/03/11/javaland-2019-picks.html">2019</a></li>
  <li><a href="/blog/2018/03/12/javaland-holly-cummins.html">2018</a></li>
  <li><a href="/blog/2017/02/27/javaland-2017-picks.html">2017</a></li>
  <li><a href="/blog/2015/01/15/javaland-2015-conference-picks.html">2015</a></li>
  <li><a href="/blog/2014/03/03/eds-javaland-2014-picks.html">2014</a></li>
</ul>

<p>All times in local time zone in JavaLand.  See <a href="https://www.javaland.eu/de/programm/">the program</a> for more details on each session.</p>

<h3 id="tuesday-09-april-2024">Tuesday, 09 April 2024</h3>

<h4 id="0830---0940-ringacademy-rest-vs-grpc">08:30 - 09:40 ring°academy REST vs. gRPC</h4>

<p>The first slot before Fried’s famous Begrüßung is unenviable, from a speaker’s perspective, but there were some great ones. I chose the REST vs gRPC talk from <a href="https://www.linkedin.com/in/sebastian-tiemann-467206263/?originalSubdomain=de">Sebastian Tiemann</a>. It looks hard core technical. Both REST and gRPC are venerable ancient technologies at this point, so it’s amazing how absolutely essential they still are. Let’s see what Sebastian has to say.</p>

<h4 id="0930---1040-ringarena-fried-begrüßung-and-opening-keynote">09:30 - 10:40 ring°arena Fried Begrüßung and opening Keynote</h4>

<p>I’m sure Fried will pull out all the stops for the 10th anniversary of JavaLand. The actual keynote looks great too. I don’t know <a href="https://www.linkedin.com/in/shelley-lambert-6120961/?originalSubdomain=ca">Shelly Lambert</a>, but the philosophy of being self-aware and focusing on improvement is very good to learn and apply.</p>

<h4 id="1100---1140-ringarena-modern-java-in-action">11:00 - 11:40 ring°arena Modern Java in Action</h4>

<p>When I spoke of the great job that advocates are doing in my <a href="https://www.heise.de/hintergrund/Ed-Burns-Java-kann-jede-andere-aktuelle-Sprache-in-den-Schatten-stellen-9636703.html">pre-conference interview on Heise.de</a>, <a href="https://twitter.com/nipafx">Nicolai Parlog</a>, was one of the ones I had in mind. It’s so important to show only the bits of Java that represent current recommended usage, and gloss over, or even omit entirely the parts that still remain for backward compatibility rather than being correct to continue to use. I’m confident Nicolai will do this.</p>

<h4 id="1200---1240-bitburger-event-center-teil-b-prepare-for-jakarta-ee-11">12:00 - 12:40 Bitburger Event-Center Teil B Prepare for Jakarta EE 11</h4>

<p><img src="/blog/assets/20240302-bitburburger-edburns.jpg" width="200" alt="Author enjoying Bitburger 0.0" style="float: left;" /> As a longtime fan of Das gute Bitburger Pils, I’m excited that my first of three back-to-back talks on Tuesday is in the Bitburger Event Center. I’m confident that part B is the best part.</p>

<p>My talk is Prepare for Jakarta EE 11. I am giving this talk on behalf of <a href="https://twitter.com/ivar_grimstad">Ivar Grimstad</a> due to Ivar being at the very poorly scheduled, from a JavaLand attendee’s perspective, <a href="https://devnexus.org/">DevNexus</a>. However, I’m well qualified to give the talk because I’m the <a href="https://projects.eclipse.org/content/project-lead-election-edward-burns-jakarta-ee-platform">release co-coordinator for Jakarta EE 11</a>. Come to this talk to hear what’s new in the very soon-to-be-released Jakarta EE 11.</p>

<p>If I wasn’t giving a talk in this timeslot, I’d attend visit <strong>Nürburgring Hotel Grid 1 - 3</strong> for “The (Unknown) Nifty Details of Maven Plugin Configuration” by <a href="https://twitter.com/khmarbaise">Karl Heinz Marbaise</a>. Maven plugins are super powerful, and usable in both Maven and Gradle. But how much do you know about getting the most from the plugins you use? This talk has the answers.</p>

<h4 id="1300---1430-nürburgring-hotel-grid-4-ist-meine-java-anwendung-bereit-für-ide-cloud-wass-kann-ich-wie-migrieren">13:00 - 14:30 Nürburgring Hotel Grid 4 Ist meine Java-Anwendung bereit für ide Cloud? Wass kann ich wie migrieren?</h4>

<p>I’m delighted to have the opportunity to present this session with my colleague and longtime collaborator <a href="https://twitter.com/skriemhild">Sandra Ahlgrimm</a>. In this new-to-JavaLand format 80-minute session. We’ll cover how to get your Jakarta EE application into the cloud, on App Service, Container Apps, AKS, ARO, and VMs.</p>

<p>If I wasn’t giving a talk in this timeslot, I’d visit <strong>ring°arena</strong> to attend Der Mensch in Mittlepunkt: Moderne Developer Experience im Enterprise-Context, by <a href="https://www.f-i.de/Ueber-uns/mehralsTech/TeamFI/People-Stories/Nico-Enking">Nico Enking</a> and <a href="https://www.linkedin.com/in/jan-christoph-schlieker/?originalSubdomain=de">Jan-Christoph Schlieker</a>. This session looks like it will introduce the role of a developer experience curator in the context of enterprise software development. This role seems like it can really help increase the success of software projects.</p>

<p>Due to the 80-minute format of my session, there’s time for another if you don’t want to attend it. In this case, I’d recommend Philosophy4Devs by <a href="https://twitter.com/ruezd">Rüdiger zu Dohna</a>. Do any readers remember famous fluff talker <a href="https://twitter.com/tedneward">Ted Neward</a>? I recall Ted was very proud of his philosophy background. Considering how well he’s done for himself, you may want to check out this talk.</p>

<h4 id="1500---1540-ringkino-pair-programming-with-github-copilot">15:00 - 15:40 ring°kino Pair Programming with GitHub Copilot</h4>

<p><a href="https://twitter.com/fbascheper">Frederieke Scheper</a> promises to show us how well GitHub Copilot delivers on its promise to let you “focus on solving bigger problems by spending less time creating boilerplate and repetitive code.” I’ve used it myself, and I can say it does pretty well at that, for many classes of problem. Also, no slides. Venkat style!</p>

<h4 id="1500---1640-mediacenter-continuous-integration-and-continuous-delivery-cicd-for-jakarta-ee-applications-or-nürburgring-hotel-grid-1---3-going-aot-everything-you-need-to-know-about-graalvm-for-java-applications">15:00 - 16:40 media°center Continuous Integration and Continuous Delivery (CI/CD) for Jakarta EE Applications or Nürburgring Hotel Grid 1 - 3 Going AOT: Everything you need to know about GraalVM for Java Applications</h4>

<p>This slot conflicts with my 16:00 talk “Developer Career Masterplan”, but if I wasn’t giving that talk, I’d absolutely go to one of these two.</p>

<ul>
  <li>Continuous Integration and Continuous Delivery (CI/CD) for Jakarta EE Applications</li>
  <li>Going AOT: Everything you need to know about GraalVM for Java Applications</li>
</ul>

<p>The CI/CD one from Jakarta EE expert <a href="https://www.udemy.com/user/salmankhan">Luqman Saeed</a>. In the nineteen years since the introduction of Hudson, CI/CD has gone from being the sign of a mature software development shop to an absolutely must-have way that work is done. Even so, it’s still not easy to perform at scale. This talk promises to show how to do it with Jakarta EE applications.</p>

<p>The GraalVM one from <a href="https://twitter.com/alina_yurenko">Alina Yurenko</a> is a hot topic and Alina is a great and very experienced speaker. I like how Alina will focus on the production aspects. If I was attending, I’d be keen to ask about Project Leyden and other aspects of how one handles debugging of a native Java app.</p>

<h4 id="1600---1640-ringarena-developer-career-masterplan-build-your-path-to-senior-level-and-beyond">16:00 - 16:40 ring°arena Developer Career Masterplan: Build your path to senior level and beyond</h4>

<p>Way back in 2008, I wrote a book where I interviewed a bunch of successful programmers and asked them all about their professional journey. My pals Heather and Bruno have taken a similar approach but supplemented it with their own insights. I had the honor of being on the other side of the microphone for this new book. After having read it, I can say it’s a great read. If you want to see what it’s about, come to this talk.</p>

<p>If I wasn’t giving a talk at this time, I’d visit <strong>ring°academy</strong> to attend NEWCOMER: C4 - Documentation to blow (up) your mind! The talk will introduce the C4 model for documentation. I’d love to see what “diagrams as code” is all about. I’ve seen the promise of similar systems since the late 1990s, but so far none of them have really had a lasting impact. Maybe this time it’s different.</p>

<h4 id="1700---1740-bitburger-event-center-teil-b-was-jeder-java-entwickler-über-strings-wissen-sollte">17:00 - 17:40 Bitburger Event-Center Teil B Was Jeder Java-Entwickler über Strings wissen Sollte</h4>

<p>Strings? In 2024? You bet! The humble String class is so ubiquitous yet has seen so many evolutions (especially for a final class) over the years it’s worth a whole session. Also, this supports my point with Nicolai Parlog’s session above. Yes, Java is old, but it is also getting better all the time. With this session from JSF Expert Group alumnus <a href="https://www.ostfalia.de/cms/de/pws/bernd-mueller/index.html">Bernd Müller</a> you can see how this applies to String.</p>

<h4 id="1800---1840-ringacademy-newcomer-ai-ethics-in-software-engineering">18:00 - 18:40 ring°academy NEWCOMER: AI Ethics in Software Engineering</h4>

<p>After observing firsthand some of the impact of the roll out of GitHub copilot on secondary school computer science education, I’m keenly interested in this topic. <a href="https://www.linkedin.com/in/moritz-schmidt-3a3131221/?originalSubdomain=de">Moritz Schmidt</a> will explore the hoary topic of the ethical impact of AI.</p>

<h3 id="wednesday-10-april-2024">Wednesday, 10 April 2024</h3>

<h4 id="0900---0940-ringkino-dont-be-afraid-of-the-final-boss-explain-ideas-for-improvement-to-management">09:00 - 09:40 ring°kino Don’t be afraid of the final boss: Explain ideas for improvement to management</h4>

<p>Don’t miss this one. This touches on a topic I addressed on <a href="/blog/2019/04/21/tdc-floripa-career-tips-from-someone-who-knows-a-lot-of-rockstar-programmers.2019.html">2019-04-21</a>: “Communicating your value add”. That post was about communicating your value add as an individual contributor.</p>

<blockquote>
  <p>Working for big companies such as IBM, SGI, Sun, and Oracle, I’ve had the chance to sample many useful corporate trainings. Even the most mundane of these, such as “Insider Trading”, offer at least one nugget of novelty. The corporate training I want to talk about here is one I took at Sun at least twelve years ago. It was called “Communicating Your Value Add” and it was all about how to articulate your contribution to your company at performance review time. The class included a handout, “Behavior/Performance-Based Questions” whose complete text I reproduce below. For discussion and reference, let’s call this perf_handout.</p>
</blockquote>

<p>This session from <a href="https://www.linkedin.com/in/cn-seifert/?originalSubdomain=de">Christian Seifert</a> shows how to do that for your entire team. Put the two together and you have a powerful technique for showing your contribution to the bottom line. Such efforts make it more painful for them to lay you off, and also make it easier for you to get a better job someplace else, should that be appropriate.</p>

<h4 id="1000---1040-nürburgring-hotel-grid-1---3-improving-your-skills-with-the-debugger">10:00 - 10:40 Nürburgring Hotel Grid 1 - 3 Improving your skills with the debugger</h4>

<p>The program committee did a great job this year. With <a href="#1700---1740-bitburger-event-center-teil-b-was-jeder-java-entwickler-über-strings-wissen-sollte">Bernd’s Strings talk</a> and this one from <a href="https://sessionize.com/bouke-nijhuis">Bourke Nijhuis</a>, you really get some much needed fundamentals. Even if you are late-in-career like I am, continually reinforcing fundamentals is very important. <img src="/blog/assets/20240306-fundamentals.gif" width="200" alt="Spring training fundamentals" style="float: right;" /></p>

<h4 id="1100---1140-ringarena-die-unsichtbare-hand-im-code">11:00 - 11:40 ring°arena Die unsichtbare Hand im Code</h4>

<p>Of course <a href="https://twitter.com/hendrikEbbers">Hendrik Ebbers</a> and <a href="https://twitter.com/SandraParsick">Sandra Parsick</a> will do an amazing job with the community keynote. I don’t know how they are going to follow-up <a href="https://www.doag.org/de/home/news/javaland-2023-community-keynote-teilt-eure-geschichte/">last year’s impactful installment</a>, which dealt with some weighty topics. As an insider at one of these IT-Giganten, I’ll be curious to see what they think is really happening inside our “Geheime Räte” (hint, at least for my employer, it is always customer obsession).</p>

<h4 id="1200---1240-coca-cola-businesslounge-a-fun-and-absurd-introduction-to-vector-databases">12:00 - 12:40 Coca-Cola business°lounge A fun and absurd introduction to Vector Databases</h4>

<p>My day job is mostly about the prosaic, but critical revenue and generating legacy Java apps. It’s far away from new stuff like Vector Databases. As such, I need to expend extra effort to stay up on such things. This talk from <a href="https://www.crunchbase.com/person/alexander-chatzizacharias">Alexander Chatzizacharias</a> is a great and time-efficient way to make me smarter about it.</p>

<h4 id="1300---1340-bitburger-event-center-teil-b-pimp-your-jakarta-ee-applications">13:00 - 13:40 Bitburger Event-Center Teil B Pimp your Jakarta EE Applications</h4>

<p>I view this talk as an essential supplement to <a href="#1200---1240-bitburger-event-center-teil-b-prepare-for-jakarta-ee-11">my 12:00 - 12:40 Tuesday talk</a>. <a href="https://twitter.com/dirkweil">Dirk Weil</a> looks like he’s going to cover lots of great stuff, including migration with OpenRewrite. I hope my booth duty schedule permits me to attend.</p>

<h4 id="1400---1440-ringarena-prompt-engineering-für-entwickler">14:00 - 14:40 ring°arena Prompt-Engineering für Entwickler</h4>

<p>When I first started using GPT for serious work questions, I thought the phrase “prompt engineering” was far too grand a term for what I was doing. However, after working more and more with it, I realize there is a skill to it, and it pays to develop the skill. Check out this talk from my old pal <a href="https://twitter.com/RalfDMueller">Ralf Müller</a> and become a prompt engineering pro.</p>

<h4 id="1500---1540-bitburger-event-center-teil-b-learn-pattern-matching-through-puzzlers">15:00 - 15:40 Bitburger Event-Center Teil B Learn Pattern Matching Through Puzzlers</h4>

<p>This session from my old pal and JSF Expert Group alumnus <a href="https://twitter.com/cayhorstmann">Cay Horstmann</a> covers yet another amazing fundamental programming language technology brought to Java developers. I’m pretty sure <a href="https://twitter.com/nipafx">Nicolai Parlog</a> will have touched on it in his session on <a href="#1100---1140-ringarena-modern-java-in-action">Tuesday</a>, but Cay, as a professional educator, will give you a deep understanding of this powerful, yet tricky to use, feature.</p>

<h4 id="1600---1640-bitburger-event-center-teil-b-ifc--infrastructure-from-code">16:00 - 16:40 Bitburger Event-Center Teil B IfC – Infrastructure FROM code</h4>

<p>A lot of my job at Microsoft is working with Azure’s Infrastructure As Code (IaC) technology, Bicep. This second session from <a href="https://twitter.com/ruezd">Rüdiger zu Dohna</a> promises to leverage that concept even further. Historically, I’ve noticed that techniques which build on top of powerful abstractions can really increase productivity. IaC is definitely a very powerful abstraction, so I want to see what this one’s about.</p>

<h4 id="1700---1740-ringarena-open-source-contribution---why-is-it-worth-the-hassle">17:00 - 17:40 ring°arena Open-Source Contribution - Why is it worth the hassle?</h4>

<p>My lived experience, and the experience of the authors and experts behind <a href="#1600---1640-ringarena-developer-career-masterplan-build-your-path-to-senior-level-and-beyond">Heather and Bruno’s book</a>, testify that it’s worth the hassle. If you needed any more evidence, come to this session from <a href="https://www.payara.fish/teamblog/author/dominika/">Dominika Tarsarz-Sochacka</a>.</p>

<h3 id="thursday-11-april-2024">Thursday, 11 April 2024</h3>

<h4 id="0900---1700-nürburgring-hotel-grid-3-automated-code-refactoring-with-openrewrite">09:00 - 17:00 Nürburgring Hotel Grid 3 Automated Code Refactoring with OpenRewrite</h4>

<p>I’ve seen lots of customers asking about the kind of thing being addressed in this full day workshop from <a href="https://www.linkedin.com/in/sebastian-konieczek/?originalSubdomain=de">Sebastian Konieczek</a>. The OpenRewrite framework, from <a href="https://moderne.io/">Moderne</a> (formerly of Netflix) is a powerful idea worth learning about.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Cross posted at dev.to.]]></summary></entry><entry><title type="html">Maven basic debugging techniques: plugin invocation starts</title><link href="/blog/2023/12/20/maven-basic-debugging-techniques.html" rel="alternate" type="text/html" title="Maven basic debugging techniques: plugin invocation starts" /><published>2023-12-20T13:00:00-05:00</published><updated>2023-12-20T13:00:00-05:00</updated><id>/blog/2023/12/20/maven-basic-debugging-techniques</id><content type="html" xml:base="/blog/2023/12/20/maven-basic-debugging-techniques.html"><![CDATA[<h2 id="problem-statement">Problem statement</h2>

<p>I have been blessed with the responsibility to be the release co-coordinator for <a href="https://jakarta.ee/specifications/platform/11/">Jakarta EE 11</a>. As part of this role I must ensure the milestone and final releases are produced. This involves refining the steps in the <a href="https://github.com/jakartaee/platform/wiki/Release_Process">Release Process</a>. A big step in this process is producing the API artifacts for maven central.  Of course, this involves invoking a maven build on this <a href="https://github.com/jakartaee/jakartaee-api/blob/master/pom.xml">POM</a>.</p>

<p>This POM is only invoked in the infrequent event of Jakarta EE releases, and thus is subject to bitrot. Of course, the right fix is to make releases more frequent. I’m working on that, and it’s a big job. In the meantime, we have this big POM. What happens if there is a problem and you need to debug it?</p>

<p>I observe that using <code class="language-plaintext highlighter-rouge">-X</code> with this POM produces too much output so that the build takes intractably long and the generated output is over 1GB of text.</p>

<p>I would like to be able to target the <code class="language-plaintext highlighter-rouge">-X</code> to just where the problem is? But how do I even identify that?</p>

<h2 id="practical-solution-1-grep-through-the-build-output">Practical solution 1: grep through the build output</h2>

<p>I realize this is beginner level Maven stuff, but I’m capturing it here so AI can eventually ingest it and help others.</p>

<details>
    <summary>Aside, how to tell if your website is training AI?</summary>
    This article from The Washington Post has a text field where you can enter your site and it will show you how highly ranked the site is in the C4 dataset, which apparently was used to train some AI somewhere.  To find the text field, see <a href="https://www.washingtonpost.com/technology/interactive/2023/ai-chatbot-learning/">Is your website training AI?</a> .

<img src="/blog/assets/20231220-ridingthecrest-in-c4.png" alt="Ed's website in the C4 dataset" />
</details>

<p>So, <code class="language-plaintext highlighter-rouge">-X</code> is not useful until you have the ability to run just the sub-module that has the problem. This technique helped us identify the sub-module.</p>

<ol>
  <li>Use the <code class="language-plaintext highlighter-rouge">-B</code> option to disable the color coding.</li>
  <li>Save the output to a file, say <code class="language-plaintext highlighter-rouge">message.txt</code>.</li>
  <li>Use this command to output the message that is output by each maven plugin as it is being executed in time. <code class="language-plaintext highlighter-rouge">grep "^\[INFO\] --- " message.txt</code></li>
</ol>

<p>When we did this, we saw this output when invoking <code class="language-plaintext highlighter-rouge">mvn -B -Pstaging,oss-release -DskipTests -Ddoclint=none -DstagingRepositoryId=jakartaplatform-1036 -Dmaven.javadoc.failOnError=false clean package</code>.</p>

<p>Each row in this output indicates:</p>

<ul>
  <li>the plugin name</li>
  <li>the version of that plugin</li>
  <li>the goal being given to that plugin</li>
  <li>A statement in parentheses that is either:
    <ul>
      <li>the content of the <code class="language-plaintext highlighter-rouge">&lt;id&gt;</code> element.</li>
      <li>some default name output by the plugin.</li>
    </ul>
  </li>
  <li>A statement after the <code class="language-plaintext highlighter-rouge">@</code> that is the <code class="language-plaintext highlighter-rouge">&lt;artifactId&gt;</code> of the POM in which that plugin invocation is declared.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[INFO] --- clean:3.2.0:clean (default-clean) @ jakartaee-api-parent ---
[INFO] --- enforcer:3.4.1:enforce (enforce-maven) @ jakartaee-api-parent ---
[INFO] --- resources:2.4.3:copy-resources (copy-javadoc-resources) @ jakartaee-api-parent ---
[INFO] --- cyclonedx:2.7.9:makeAggregateBom (default) @ jakartaee-api-parent ---
[INFO] --- source:2.1:jar-no-fork (attach-sources) @ jakartaee-api-parent ---
[INFO] --- javadoc:3.1.0:jar (attach-javadocs) @ jakartaee-api-parent ---
[INFO] --- clean:3.2.0:clean (default-clean) @ jakarta.jakartaee-bom ---
[INFO] --- enforcer:3.4.1:enforce (enforce-maven) @ jakarta.jakartaee-bom ---
[INFO] --- resources:2.4.3:copy-resources (copy-javadoc-resources) @ jakarta.jakartaee-bom ---
</code></pre></div></div>

<p>…</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[INFO] --- compiler:3.8.1:testCompile (default-testCompile) @ jakarta.jakartaee-api ---
[INFO] --- surefire:3.0.0-M8:test (default-test) @ jakarta.jakartaee-api ---
[INFO] --- jar:2.4:jar (default-jar) @ jakarta.jakartaee-api ---
[INFO] --- cyclonedx:2.7.9:makeAggregateBom (default) @ jakarta.jakartaee-api ---
[INFO] --- source:2.1:jar-no-fork (attach-sources) @ jakarta.jakartaee-api ---
[INFO] --- glassfishbuild:3.2.28:generate-pom (generate-pom) @ jakarta.jakartaee-api ---
[INFO] --- javadoc:3.1.0:jar (attach-javadocs) @ jakarta.jakartaee-api ---
</code></pre></div></div>

<p>This enabled us to observe that the <code class="language-plaintext highlighter-rouge">attach-javadocs</code> <code class="language-plaintext highlighter-rouge">&lt;execution&gt;</code> in the top level POM was causing the problem. We added a new invocation of the <code class="language-plaintext highlighter-rouge">maven-antrun-plugin</code> and bound it to the</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[INFO] --- antrun:3.1.0:run (rewrite-problematic-sources) @ jakarta.jakartaee-api ---
</code></pre></div></div>

<h2 id="practical-solution-2-buildplan-maven-plugin">Practical solution 2: buildplan-maven-plugin</h2>

<p>Through an interesting chat with Bing Enterprise Chat, I reduced my 2nd order ignorance of the <code class="language-plaintext highlighter-rouge">buildplan-maven-plugin</code> to be 1st order ignorance. It turns out this plugin exists and solves my problem.</p>

<p>If I had run this on the top level POM: <code class="language-plaintext highlighter-rouge">mvn fr.jcgay.maven.plugins:buildplan-maven-plugin:list-phase</code> I would have seen the plugin and phase information I sought.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[INFO] Build Plan for Jakarta EE API parent: 
process-resources -------------------------------------------------------
    + maven-resources-plugin | copy-javadoc-resources | copy-resources  
package -----------------------------------------------------------------
    + cyclonedx-maven-plugin | default                | makeAggregateBom
install -----------------------------------------------------------------
    + maven-install-plugin   | default-install        | install         
deploy ------------------------------------------------------------------
    + maven-deploy-plugin    | default-deploy         | deploy          
[INFO] 
[INFO] ---------------&lt; jakarta.platform:jakarta.jakartaee-bom &gt;---------------
[INFO] Building Jakarta EE API BOM 11.0.0-SNAPSHOT                        [2/5]
[INFO]   from jakartaee-bom/pom.xml
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-bom ---
[INFO] Build Plan for Jakarta EE API BOM: 
process-resources ----------------------------------------------------------------
    + maven-resources-plugin      | copy-javadoc-resources | copy-resources      
package --------------------------------------------------------------------------
    + cyclonedx-maven-plugin      | default                | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom           | generate-pom        
verify ---------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts   | attach-all-artifacts
install --------------------------------------------------------------------------
    + maven-install-plugin        | default-install        | install             
deploy ---------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy         | deploy              
[INFO] 
[INFO] ------------&lt; jakarta.platform:jakarta.jakartaee-core-api &gt;-------------
[INFO] Building Jakarta EE Core Profile API 11.0.0-SNAPSHOT               [3/5]
[INFO]   from jakartaee-core-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-core-api ---
[INFO] Build Plan for Jakarta EE Core Profile API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
[INFO] 
[INFO] -------------&lt; jakarta.platform:jakarta.jakartaee-web-api &gt;-------------
[INFO] Building Jakarta EE Web Profile API 11.0.0-SNAPSHOT                [4/5]
[INFO]   from jakartaee-web-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-web-api ---
[INFO] Build Plan for Jakarta EE Web Profile API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + maven-antrun-plugin         | prepare-sources-web         | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
[INFO] 
[INFO] ---------------&lt; jakarta.platform:jakarta.jakartaee-api &gt;---------------
[INFO] Building Jakarta EE Platform API 11.0.0-SNAPSHOT                   [5/5]
[INFO]   from jakartaee-api/pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- buildplan:1.5:list-phase (default-cli) @ jakarta.jakartaee-api ---
[INFO] Build Plan for Jakarta EE Platform API: 
generate-sources ----------------------------------------------------------------------
    + maven-dependency-plugin     | unpack-sources              | unpack-dependencies 
process-sources -----------------------------------------------------------------------
    + maven-antrun-plugin         | prepare-sources             | run                 
    + maven-antrun-plugin         | prepare-sources-web         | run                 
    + maven-antrun-plugin         | prepare-sources-platform    | run                 
    + glassfishbuild-maven-plugin | unpack-sources              | unpack-sources      
process-resources ---------------------------------------------------------------------
    + maven-resources-plugin      | default-resources           | resources           
    + maven-resources-plugin      | copy-javadoc-resources      | copy-resources      
compile -------------------------------------------------------------------------------
    + maven-compiler-plugin       | default-compile             | compile             
    + maven-antrun-plugin         | build-javadocs              | run                 
process-test-resources ----------------------------------------------------------------
    + maven-resources-plugin      | default-testResources       | testResources       
test-compile --------------------------------------------------------------------------
    + maven-compiler-plugin       | default-testCompile         | testCompile         
test ----------------------------------------------------------------------------------
    + maven-surefire-plugin       | default-test                | test                
prepare-package -----------------------------------------------------------------------
    + maven-antrun-plugin         | rewrite-problematic-sources | run                 
package -------------------------------------------------------------------------------
    + maven-jar-plugin            | default-jar                 | jar                 
    + cyclonedx-maven-plugin      | default                     | makeAggregateBom    
    + glassfishbuild-maven-plugin | generate-pom                | generate-pom        
    + maven-source-plugin         | attach-sources              | jar-no-fork         
verify --------------------------------------------------------------------------------
    + glassfishbuild-maven-plugin | attach-all-artifacts        | attach-all-artifacts
install -------------------------------------------------------------------------------
    + maven-install-plugin        | default-install             | install             
deploy --------------------------------------------------------------------------------
    + maven-deploy-plugin         | default-deploy              | deploy              
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[Problem statement]]></summary></entry><entry><title type="html">Azure DevOps cross organization daily task wrangling</title><link href="/blog/2023/11/23/azure-devops-task-wrangling.html" rel="alternate" type="text/html" title="Azure DevOps cross organization daily task wrangling" /><published>2023-11-23T23:10:00-05:00</published><updated>2023-11-23T23:10:00-05:00</updated><id>/blog/2023/11/23/azure-devops-task-wrangling</id><content type="html" xml:base="/blog/2023/11/23/azure-devops-task-wrangling.html"><![CDATA[<h2 id="problem-statement">Problem statement</h2>

<p>My employer has standardized on Azure DevOps Boards as the issue tracking system of record. I have become fond of this system and immensely respect its capabilities.  Due to my role, I end up with a very large number of work items assigned to me across a very diverse number of different Azure DevOps organizations. While an extension exists to support <a href="https://marketplace.visualstudio.com/items?itemName=ms-eswm.crossaccountquery&amp;targetId=5a766efb-e568-41d7-a401-fc09ace9b116&amp;utm_source=vstsproduct&amp;utm_medium=ExtHubManageList">Cross Account Query</a>, it has a significant and insurmountable limitation that the accounts being queried must have a uniform “schema” for Iteration Path and Area Path. This limitation is a fact of life in my role.</p>

<p>This blog post shows my workaround that gives me the ability:</p>

<ul>
  <li>To see a comprehensive dashboard across the many different Azure DevOps organizations that contain work items assigned to me, so I can know which ones I need to work on in any given day.</li>
  <li>To check them off task by task when I have done all I intend to do on that particular task today.</li>
  <li>To reset the “done for today” status so I get a fresh dashboard the next day.</li>
</ul>

<p>It is not very elegant, but works for me. I’m open to suggestions for improvements. Please leave a comment if you have any ideas.</p>

<h2 id="solution">Solution</h2>

<ol>
  <li>
    <p>For each Azure DevOps organization, write and save a query that shows the work items assigned to me.
Here are a screen grabs of two such queries.</p>

    <p><img src="/blog/assets/20231124-dd-query.png" alt="Azure DevOps query in the dd board" /></p>

    <p><img src="/blog/assets/20231124-em-query.png" alt="Azure DevOps query in the em board" /></p>

    <p>Some things to note about these queries:</p>

    <ul>
      <li>The <strong>Area Path</strong> values vary and are specific to the organization.</li>
      <li>The <strong>Iteration Path</strong> values vary, but both have <strong>@CurrentIteration</strong>.</li>
      <li>The <strong>State</strong> values vary and are specific to the organization.</li>
      <li>They both have a funny <strong>Tags</strong> value: <strong>Does Not Contain</strong> <code class="language-plaintext highlighter-rouge">edburns_done-for-today</code>. This tag is obviously named.</li>
    </ul>
  </li>
  <li>
    <p>Write an anologous set of queries, but for the last clause the <strong>Tags</strong> value is  <strong>Contains</strong> <code class="language-plaintext highlighter-rouge">edburns_done-for-today</code>.</p>
  </li>
  <li>
    <p>Use the Daily Links chrome extension to cause all the saved queries in a new browser tab. Install the Daily Links extension from the <a href="https://chrome.google.com/webstore/detail/bpmiffipgillbacdfnbkicndliejockp">Chrome web store</a>. This also works in Edge.</p>

    <p><img src="/blog/assets/20231124-daily-links.png" alt="Azure DevOps queries loaded by Daily Links extension" /></p>
  </li>
</ol>

<h2 id="daily-wrangling">Daily wrangling</h2>

<ol>
  <li>
    <p>Start of day process.</p>

    <ol>
      <li>
        <p>Select the <strong>Daily Links</strong> button in the browser.</p>
      </li>
      <li>
        <p>For each tab:</p>

        <ol>
          <li>
            <p>Decide which of the tasks you will <strong>NOT</strong>* be able to work on today.</p>
          </li>
          <li>
            <p>Apply the <code class="language-plaintext highlighter-rouge">edburns_done-for-today</code> tag to those issues.</p>
          </li>
          <li>
            <p>Re-run the query.</p>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li>
    <p>End of day process.</p>

    <ol>
      <li>
        <p>Select the <strong>Daily Links</strong> button in the browser.</p>
      </li>
      <li>
        <p>For each tab:</p>

        <ol>
          <li>
            <p>Run the analogous “Contains done for today” query for that tab.</p>
          </li>
          <li>
            <p>Use the multi-issue edit feature to remove that tag.</p>
          </li>
        </ol>
      </li>
    </ol>
  </li>
</ol>

<h2 id="problems-with-this-solution">Problems with this solution</h2>

<ul>
  <li>
    <p>You have to write 2N queries.</p>
  </li>
  <li>
    <p>You pollute the tagspace with information that is only relevant to you.</p>
  </li>
  <li>
    <p>The act of resetting the “done for today” tag is high effort. I suspect there is a way to make a batch process that just does this with one action, but I have not invested in learning how.</p>
  </li>
  <li>
    <p>The quality of the queries regarding their ability to convey the context of each task is up to the query author. In my implementation, I simply include <strong>Parent</strong> next te <strong>Title</strong> in the <strong>Column options</strong>.</p>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[Problem statement]]></summary></entry><entry><title type="html">macOS Catalina Zoom does not prompt for mic or camera permissions Solved</title><link href="/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset.html" rel="alternate" type="text/html" title="macOS Catalina Zoom does not prompt for mic or camera permissions Solved" /><published>2023-10-24T12:10:00-04:00</published><updated>2023-10-24T12:10:00-04:00</updated><id>/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset</id><content type="html" xml:base="/blog/2023/10/24/macos-zoom-mic-camera-permissions-reset.html"><![CDATA[<h2 id="problem-statement">Problem statement</h2>

<p>Somewhere along the line, Zoom on macOS Catalina asked me for permission to use the mic or camera and I may have accidentally said no. How do I get it to prompt me again?</p>

<p>I tried the usual measures of <code class="language-plaintext highlighter-rouge">tccutil reset Microphone</code> but this returned a failure message. What’s going on?</p>

<p>This blog post is my record of what I did to resolve the problem on macOS Catalina. Results are not guaranteed.</p>

<h2 id="root-cause">Root cause</h2>

<p>In my case, the root cause was the ownership of the <code class="language-plaintext highlighter-rouge">/Users/edburns/Library/Application Support/com.apple.TCC/TCC.db</code> file was incorrect. This file must be owned by me. Instead it was owned by some other user number. I remember making some bulk ownership changes somewhere along the line.</p>

<h2 id="nutshell-solution">Nutshell solution</h2>

<ol>
  <li>Do all the stuff that allows you to modify <code class="language-plaintext highlighter-rouge">TCC.db</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">chown</code> the <code class="language-plaintext highlighter-rouge">TCC.db</code> to me.</li>
  <li>Restore all the stuff that prevents you from modifying <code class="language-plaintext highlighter-rouge">TCC.db</code>.</li>
  <li><code class="language-plaintext highlighter-rouge">tccutil reset Microphone</code></li>
  <li>Perform the action in Zoom that caused it to prompt for permission.</li>
  <li>Say <strong>Yes</strong>.</li>
</ol>

<h3 id="detailed-solution">Detailed solution</h3>

<h4 id="temporarily-disable-system-integrity-protection-sip">Temporarily disable System Integrity Protection (SIP)</h4>

<ol>
  <li>Shut down and reboot in “Recovery mode”.
    <ol>
      <li>Shut down.</li>
      <li>Hold down Command R while powering on.</li>
      <li>Release when the Apple logo appears.</li>
    </ol>
  </li>
  <li>When you get a menu bar, in the <strong>Utilities menu</strong> select <strong>Terminal</strong>.</li>
  <li>The terminal should open as root.</li>
  <li><code class="language-plaintext highlighter-rouge">csrutil disable</code>.</li>
  <li>Exit the terminal and quit the <strong>Terminal</strong> app.</li>
  <li>Restart.</li>
</ol>

<h4 id="ensure-the-tccdb-has-the-correct-ownership">Ensure the TCC.db has the correct ownership</h4>

<p>For an apparently very helpful resource on <code class="language-plaintext highlighter-rouge">TCC.db</code> see <a href="https://www.rainforestqa.com/blog/macos-tcc-db-deep-dive">A deep dive into macOS TCC.db</a>.</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">cd ~Library/Application\ Support/com.apple.TCC</code>
If you can’t do this, grant “Full disk access” to your terminal program. Look elsewhere for how to do that.</li>
  <li><code class="language-plaintext highlighter-rouge">chown</code> the <code class="language-plaintext highlighter-rouge">TCC.db</code> file to your userid.</li>
  <li><code class="language-plaintext highlighter-rouge">cd</code> to get back to your home directory.</li>
</ol>

<h4 id="re-enable-system-integrity-protection-sip">Re-enable System Integrity Protection (SIP)</h4>

<ol>
  <li>Shut down and reboot in “Recovery mode”.
    <ol>
      <li>Shut down.</li>
      <li>Hold down Command R while powering on.</li>
      <li>Release when the Apple logo appears.</li>
    </ol>
  </li>
  <li>When you get a menu bar, in the <strong>Utilities menu</strong> select <strong>Terminal</strong>.</li>
  <li>The terminal should open as root.</li>
  <li><code class="language-plaintext highlighter-rouge">csrutil enable</code>.</li>
  <li>Exit the terminal and quit the <strong>Terminal</strong> app.</li>
  <li>Restart.</li>
</ol>

<h4 id="run-the-tccutil-command">Run the tccutil command</h4>

<ol>
  <li><code class="language-plaintext highlighter-rouge">tccutil reset Microphone</code>. If you want to reset other permissions, there is a big schema of names.  To reset everything replace <code class="language-plaintext highlighter-rouge">Microphone</code> with <code class="language-plaintext highlighter-rouge">All</code>. Case is sensitive.</li>
  <li>You should see a message that indicates success.</li>
</ol>]]></content><author><name></name></author><summary type="html"><![CDATA[Problem statement]]></summary></entry><entry><title type="html">Diagnose outbound database connection problems with Liberty on Azure</title><link href="/blog/2023/07/24/tcpdump-liberty-aks.html" rel="alternate" type="text/html" title="Diagnose outbound database connection problems with Liberty on Azure" /><published>2023-07-24T13:10:00-04:00</published><updated>2023-07-24T13:10:00-04:00</updated><id>/blog/2023/07/24/tcpdump-liberty-aks</id><content type="html" xml:base="/blog/2023/07/24/tcpdump-liberty-aks.html"><![CDATA[<p>Cross posted at <a href="">dev.to</a>.</p>

<p>This self-contained blog post shows how you to use <code class="language-plaintext highlighter-rouge">tcpdump</code> to troubleshoot and diagnose outbound network connections from a local Liberty server to an Azure SQL Database.</p>

<p>I was working on validating the steps in <a href="https://learn.microsoft.com/en-us/azure/aks/howto-deploy-java-liberty-app">Deploy a Java application with Open Liberty or WebSphere Liberty on an Azure Kubernetes Service (AKS) cluster</a> for use in an upcoming conference workshop. The workshop students would be given access to their own Ubuntu VMs and also their own Azure credits to execute the steps of the workshop. This is a very common pattern I have used many times in the past.</p>

<p>While preparing the VM, the hosting environment for the VM started having trouble connecting to the external Internet, and thus could not access the Azure SQL Database. When starting <code class="language-plaintext highlighter-rouge">mvn liberty:run</code>, I observed this error.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>INFO] <span class="o">[</span>ERROR   <span class="o">]</span> CWWJP0015E: An error occurred <span class="k">in </span>the org.eclipse.persistence.jpa.PersistenceProvider persistence provider when it attempted to create the container entity manager factory <span class="k">for </span>the coffees persistence unit. The following error occurred: Exception <span class="o">[</span>EclipseLink-4002] <span class="o">(</span>Eclipse Persistence Services - 2.7.11.v20220804-52dea2a3c0<span class="o">)</span>: org.eclipse.persistence.exceptions.DatabaseException
<span class="o">[</span>INFO] Internal Exception: java.sql.SQLException: The TCP/IP connection to the host rwo010720nxf.database.windows.net, port 1433 has failed. Error: <span class="s2">"Connect timed out. Verify the connection properties. Make sure that an instance of SQL Server is running on the host and accepting TCP/IP connections at the port. Make sure that TCP connections to the port are not blocked by a firewall."</span><span class="nb">.</span> DSRA0010E: SQL State <span class="o">=</span> 08S01, Error Code <span class="o">=</span> 0
<span class="o">[</span>INFO] Error Code: 0
</code></pre></div></div>

<p>However, when I ran <code class="language-plaintext highlighter-rouge">mvn liberty:run</code> on my local laptop with the same sample app code, I observed it was able to successfully connect to the database. Before concluding it was <a href="https://hitchhikers.fandom.com/wiki/Somebody_Else%27s_Problem_Field">Somebody Else’s Problem</a>, I wanted to rule out any local firewall configuration on the VM.</p>

<p>This was a matter of asking <code class="language-plaintext highlighter-rouge">firewall-cmd</code> to <code class="language-plaintext highlighter-rouge">--list-all</code> rules.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># firewall-cmd --list-all</span>
  target: default
  icmp-block-inversion: no
  interfaces: ens192
  sources: 
  services: cockpit dhcpv6-client ssh
  ports: 
  protocols: 
  forward: no
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules: 
</code></pre></div></div>

<p>Looks like no rules at all. That’s not it.</p>

<p>Let’s look at outbound traffic on TCP port 1433.</p>

<p>I forget where I found this tip, so I am recording it in this blog post for my own later referral. Yes, it’s obvious: <code class="language-plaintext highlighter-rouge">tcpdump</code>. There are probably better and more efficient ways to do this. But I work on so many different things at so many different levels of abstraction, I can’t remember the specifics. I have learned from rock star programmers I know: they accept their limitations and write things down.</p>

<h3 id="tcpdump-on-the-vm">tcpdump on the VM</h3>

<p>First we need to identify the network interface name. That’s <code class="language-plaintext highlighter-rouge">ifconfig -a</code>:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">[</span>ibmuser@student java-app]<span class="nv">$ </span>ifconfig <span class="nt">-a</span>
docker0: <span class="nv">flags</span><span class="o">=</span>4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500
        inet 172.17.0.1  netmask 255.255.0.0  broadcast 172.17.255.255
        ether 02:42:14:3c:39:f9  txqueuelen 0  <span class="o">(</span>Ethernet<span class="o">)</span>
        RX packets 0  bytes 0 <span class="o">(</span>0.0 B<span class="o">)</span>
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 <span class="o">(</span>0.0 B<span class="o">)</span>
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

ens192: <span class="nv">flags</span><span class="o">=</span>4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500
        inet 10.0.10.2  netmask 255.255.255.0  broadcast 10.0.10.255
        inet6 fe80::250:56ff:feb4:550c  prefixlen 64  scopeid 0x20&lt;<span class="nb">link</span><span class="o">&gt;</span>
        ether 00:50:56:b4:55:0c  txqueuelen 1000  <span class="o">(</span>Ethernet<span class="o">)</span>
        RX packets 591136  bytes 846561034 <span class="o">(</span>807.3 MiB<span class="o">)</span>
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 21664  bytes 2609977 <span class="o">(</span>2.4 MiB<span class="o">)</span>
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: <span class="nv">flags</span><span class="o">=</span>73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;
        loop  txqueuelen 1000  <span class="o">(</span>Local Loopback<span class="o">)</span>
        RX packets 41  bytes 2429 <span class="o">(</span>2.3 KiB<span class="o">)</span>
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 41  bytes 2429 <span class="o">(</span>2.3 KiB<span class="o">)</span>
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
</code></pre></div></div>

<p>Good news, that one is obvious. It must be <code class="language-plaintext highlighter-rouge">ens192</code>.</p>

<p>Then, run the magic <code class="language-plaintext highlighter-rouge">tcpdump -i ens192 port 1433</code>. This will hang indefinitely. This will show nothing untill some traffic appears on port 1433.</p>

<p>In a separate terminal, restart the app with <code class="language-plaintext highlighter-rouge">mvn liberty:run</code>. This caused the following output to appear in the <code class="language-plaintext highlighter-rouge">tcpdump</code> window.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tcpdump <span class="nt">-i</span> ens192 port 1433
dropped privs to tcpdump
tcpdump: verbose output suppressed, use <span class="nt">-v</span> or <span class="nt">-vv</span> <span class="k">for </span>full protocol decode
listening on ens192, link-type EN10MB <span class="o">(</span>Ethernet<span class="o">)</span>, capture size 262144 bytes
12:43:36.963152 IP student.51002 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>2117028828, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330981707 ecr 0,nop,wscale 7], length 0
12:43:37.563057 IP student.51008 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330982307 ecr 0,nop,wscale 7], length 0
12:43:38.626345 IP student.51008 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330983371 ecr 0,nop,wscale 7], length 0
12:43:40.674361 IP student.51008 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330985419 ecr 0,nop,wscale 7], length 0
12:43:41.521620 IP student.51012 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>384691879, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330986266 ecr 0,nop,wscale 7], length 0
12:43:42.530322 IP student.51012 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>384691879, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330987275 ecr 0,nop,wscale 7], length 0
12:43:44.578290 IP student.51012 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>384691879, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330989323 ecr 0,nop,wscale 7], length 0
12:43:48.610335 IP student.51012 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>384691879, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330993355 ecr 0,nop,wscale 7], length 0
12:43:49.431704 IP student.44964 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>824660250, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330994176 ecr 0,nop,wscale 7], length 0
12:43:50.466320 IP student.44964 <span class="o">&gt;</span> 40.79.153.12.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>824660250, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330995211 ecr 0,nop,wscale 7], length 0
</code></pre></div></div>

<h3 id="tcpdump-on-the-local-laptop">tcpdump on the local laptop</h3>

<p>Same story, I need to get the network interface name. <code class="language-plaintext highlighter-rouge">ifconfig -a</code> shows a lot more stuff, but I believe it’s this one.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>en7: <span class="nv">flags</span><span class="o">=</span>8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500
	<span class="nv">options</span><span class="o">=</span>404&lt;VLAN_MTU,CHANNEL_IO&gt;
	ether f8:e4:3b:59:02:a0
	inet6 fe80::886:47f3:c373:4803%en7 prefixlen 64 secured scopeid 0x16
	inet 192.168.1.160 netmask 0xffffff00 broadcast 192.168.1.255
	inet6 2600:1700:1590:2270:481:7264:b2ac:29dc prefixlen 64 autoconf secured
	inet6 2600:1700:1590:2270:3ce9:3b2:e9b2:7672 prefixlen 64 autoconf temporary
	inet6 2600:1700:1590:2270::1d prefixlen 64 dynamic
	nd6 <span class="nv">options</span><span class="o">=</span>201&lt;PERFORMNUD,DAD&gt;
	media: autoselect <span class="o">(</span>1000baseT &lt;full-duplex&gt;<span class="o">)</span>
	status: active
</code></pre></div></div>

<p>There are several other interfaces, but this one shows <code class="language-plaintext highlighter-rouge">status: active</code> and has a reasonable looking local IP address. I bet it’s that one.</p>

<p>Now I can run <code class="language-plaintext highlighter-rouge">sudo tcpdump -i en7 port 1433</code> and wait for output.</p>

<p>Run <code class="language-plaintext highlighter-rouge">mvn liberty:run</code> in a separate terminal and you’ll see this output.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>tcpdump: verbose output suppressed, use <span class="nt">-v</span><span class="o">[</span>v]... <span class="k">for </span>full protocol decode
listening on en7, link-type EN10MB <span class="o">(</span>Ethernet<span class="o">)</span>, snapshot length 524288 bytes
16:48:30.579463 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>S], <span class="nb">seq </span>1887813996, win 65535, options <span class="o">[</span>mss 1460,nop,wscale 6,nop,nop,TS val 4041241742 ecr 0,sackOK,eol], length 0
16:48:30.610481 IP 40.78.225.32.ms-sql-s <span class="o">&gt;</span> edwards-mbp.attlocal.net.51776: Flags <span class="o">[</span>S.], <span class="nb">seq </span>81912948, ack 1887813997, win 65535, options <span class="o">[</span>mss 1440,nop,wscale 8,nop,nop,sackOK], length 0
16:48:30.610608 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>.], ack 1, win 4096, length 0
16:48:30.633758 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>P.], <span class="nb">seq </span>1:68, ack 1, win 4096, length 67
16:48:30.665583 IP 40.78.225.32.ms-sql-s <span class="o">&gt;</span> edwards-mbp.attlocal.net.51776: Flags <span class="o">[</span>P.], <span class="nb">seq </span>1:32, ack 68, win 2052, length 31
16:48:30.665711 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>.], ack 32, win 4095, length 0
16:48:30.766804 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>P.], <span class="nb">seq </span>68:582, ack 32, win 4096, length 514
16:48:30.800942 IP 40.78.225.32.ms-sql-s <span class="o">&gt;</span> edwards-mbp.attlocal.net.51776: Flags <span class="o">[</span>.], <span class="nb">seq </span>32:1492, ack 582, win 2050, length 1460
16:48:30.801040 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>.], ack 1492, win 4073, length 0
16:48:30.801767 IP 40.78.225.32.ms-sql-s <span class="o">&gt;</span> edwards-mbp.attlocal.net.51776: Flags <span class="o">[</span>.], <span class="nb">seq </span>1492:2952, ack 582, win 2050, length 1460
16:48:30.801795 IP edwards-mbp.attlocal.net.51776 <span class="o">&gt;</span> 40.78.225.32.ms-sql-s: Flags <span class="o">[</span>.], ack 2952, win 4073, length 0
16:48:30.801948 IP 40.78.225.32.ms-sql-s <span class="o">&gt;</span> edwards-mbp.attlocal.net.51776: Flags <span class="o">[</span>P.], <span class="nb">seq </span>2952:4128, ack 582, win 2050, length 1176
</code></pre></div></div>

<h3 id="comparing-the-two-different-tcpdump-outputs">Comparing the two different tcpdump outputs.</h3>

<p>Let’s strip out extraneous information from the two <code class="language-plaintext highlighter-rouge">tcpdump</code> outputs for easier comparison.</p>

<p><strong>Output from the VM.</strong> This is the one where the connection failed.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>12:43:36 Flags <span class="o">[</span>S], <span class="nb">seq </span>2117028828, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330981707 ecr 0,nop,wscale 7], length 0
12:43:37 Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330982307 ecr 0,nop,wscale 7], length 0
12:43:38 Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330983371 ecr 0,nop,wscale 7], length 0
12:43:40 Flags <span class="o">[</span>S], <span class="nb">seq </span>3629156152, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330985419 ecr 0,nop,wscale 7], length 0
12:43:41 Flags <span class="o">[</span>S], <span class="nb">seq </span>384691879, win 29200, options <span class="o">[</span>mss 1460,sackOK,TS val 2330986266 ecr 0,nop,wscale 7], length 0
</code></pre></div></div>

<p><strong>Output from the local laptop.</strong> This is the one where the connection succeeded.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>16:48:30.57 Flags <span class="o">[</span>S], <span class="nb">seq </span>1887813996, win 65535, options <span class="o">[</span>mss 1460,nop,wscale 6,nop,nop,TS val 4041241742 ecr 0,sackOK,eol], length 0
16:48:30.61 Flags <span class="o">[</span>S.], <span class="nb">seq </span>81912948, ack 1887813997, win 65535, options <span class="o">[</span>mss 1440,nop,wscale 8,nop,nop,sackOK], length 0
16:48:30.61 Flags <span class="o">[</span>.], ack 1, win 4096, length 0
16:48:30.63 Flags <span class="o">[</span>P.], <span class="nb">seq </span>1:68, ack 1, win 4096, length 67
16:48:30.66 Flags <span class="o">[</span>P.], <span class="nb">seq </span>1:32, ack 68, win 2052, length 31
16:48:30.66 Flags <span class="o">[</span>.], ack 32, win 4095, length 0
</code></pre></div></div>

<p>We can see right away there are differences. Apparently the app running on the VM is unable to complete the TCP handshake, while the one from the VM is not. This old mozilla doc describes the TCP handshake well <a href="https://developer.mozilla.org/en-US/docs/Glossary/TCP_handshake">TCP handshake</a>.</p>

<p>In the <code class="language-plaintext highlighter-rouge">tcpdump</code> output, there is a line for each TCP packet.  In the first three lines, we can see the three packets for the TCP handshake.</p>

<p>In the local laptop output:</p>

<ol>
  <li>At <code class="language-plaintext highlighter-rouge">16:48:30.57</code> we see the <code class="language-plaintext highlighter-rouge">SYN</code> packet going from the VM to the Azure SQL Database.</li>
  <li>At <code class="language-plaintext highlighter-rouge">16:48:30.61</code> we see the reply <code class="language-plaintext highlighter-rouge">SYN-ACK</code> packet coming back from the Azure SQL Database.</li>
  <li>At <code class="language-plaintext highlighter-rouge">16:48:30.61</code> we see the <code class="language-plaintext highlighter-rouge">ACK</code> packet going from the VM to the Azure SQL Database.</li>
</ol>

<p>In the VM output we just see unanswered <code class="language-plaintext highlighter-rouge">SYN</code> packets.</p>

<p>If there is no firewall rule, and the <code class="language-plaintext highlighter-rouge">tcpdump</code> output shows unanswered TCP handshake packets, the most likely cause is some other network problem outside of the VM.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Cross posted at dev.to.]]></summary></entry><entry><title type="html">Deploy Jakarta EE 10 and MicroProfile 6 on Azure with IBM Liberty on Azure Kubernetes Service (AKS)</title><link href="/blog/2023/05/26/liberty-aks-ee10-mp6.html" rel="alternate" type="text/html" title="Deploy Jakarta EE 10 and MicroProfile 6 on Azure with IBM Liberty on Azure Kubernetes Service (AKS)" /><published>2023-05-26T13:10:00-04:00</published><updated>2023-05-26T13:10:00-04:00</updated><id>/blog/2023/05/26/liberty-aks-ee10-mp6</id><content type="html" xml:base="/blog/2023/05/26/liberty-aks-ee10-mp6.html"><![CDATA[<p>Cross posted at <a href="https://dev.to/edburns00/deploy-jakarta-ee-10-and-microprofile-6-on-azure-with-ibm-liberty-on-azure-kubernetes-service-aks-5d63">dev.to</a>.</p>

<p>This self-contained blog post shows how you to quickly and easily deploy a cloud native Java microservice on Azure Kubernetes Service (AKS) directly from the Azure Portal. The app uses a tightly-focused selection of technologies from <a href="https://jakarta.ee/specifications/coreprofile/10/jakarta-coreprofile-spec-10.0.html">Jakarta EE 10</a> and <a href="https://github.com/eclipse/microprofile/releases/tag/6.0.">MicroProfile 6</a> By using a tightly-focused selection of technologies from open standards, developers minimize maintenance cost and time to MVP and maximize skill portability and fun. For more of the benefits, see <a href="https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/microservices#what-are-microservices">What are microservices</a>.</p>

<p>For a more full-featured treatment, see this video from my colleague Brian Benz. <a href="https://www.youtube.com/watch?v=r0kMESOmWTQ">YouTube link</a>.</p>

<h3 id="deploy-the-app">Deploy the app</h3>

<p>The steps in this section show how to deploy the app from the Azure portal.</p>

<ol>
  <li>Visit https://aka.ms/publicportal and sign in with a <strong>sufficiently empowered Azure subscription</strong>.  If your identity doesn’t have these powers, appeal to your IT department to be granted these powers or use a subscription where you do have those powers.
    <ol>
      <li>The Azure identity deploying this offer must have one of the following two sets of Azure role-based access control roles:
        <ol>
          <li><a href="https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#contributor">Contributor</a> and <a href="https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#user-access-administrator">User Access Administrator</a> of the current subscription.</li>
          <li><a href="https://docs.microsoft.com/azure/role-based-access-control/built-in-roles?WT.mc_id=Portal-Microsoft_Azure_CreateUIDef#owner">Owner</a> of the current subscription.</li>
        </ol>
      </li>
    </ol>
  </li>
  <li>In the search box, enter “websphere liberty” without the quotes.</li>
  <li>In the <strong>Marketplace</strong> section of the search results, select “IBM WebSphere Liberty and Open Liberty on Azure Kubernete…”.</li>
  <li>Select <strong>Create</strong>.</li>
  <li>By the <strong>Resource group</strong> box, select <strong>Create new</strong> and enter the name of a new resource group. This must be unique in your subscription. I suggest disambiguating by prefixing a string with your initials and some form of date to the text <code class="language-plaintext highlighter-rouge">01aks</code>. For example, <code class="language-plaintext highlighter-rouge">ejb052601aks</code>.</li>
  <li>Select <strong>Next: AKS</strong>.</li>
  <li>Leave the defaults and select <strong>Next: Load balancing</strong>.</li>
  <li>Select <strong>Yes</strong> under <strong>Connect to Azure Application Gateway</strong>. Leave the remaining values at their defaults.</li>
  <li>Select <strong>Next: Operator and application</strong>.</li>
  <li>Explore the info box next to the text <strong>IBM supported</strong>. This offer can be covered by full support from IBM and Microsoft. <a href="https://www.ibm.com/services/systems-support?utm_content=SRCWW&amp;p1=Search&amp;p4=43700062199660180&amp;p5=p&amp;&amp;msclkid=70eee7a9df5a1fbfc42483d93977b7ad&amp;gclid=70eee7a9df5a1fbfc42483d93977b7ad&amp;gclsrc=3p.ds.">Purchase a support contract from IBM</a> This plus your existing Microsoft support as an Azure customer gives you full coverage.</li>
  <li>After thinking carefully about the value of buying support, make a note to yourself to ask your IT deparmment about it and select <strong>No</strong>.</li>
  <li>Next to <strong>Deploy an application?</strong>, select <strong>Yes</strong>.</li>
  <li>Next to <strong>Deploy your own application or a sample application?</strong> select <strong>The Open Liberty sample image</strong>.</li>
  <li>Select <strong>Next: Review + create</strong>.</li>
  <li>When you see <strong>Validation passed</strong>, select <strong>Create</strong>.</li>
</ol>

<h3 id="explore-the-deployed-app">Explore the deployed app</h3>

<p>The steps in this section show you how to explore the deployed app</p>

<ol>
  <li>Depending on cloud weather, you will see this screen in about fifteen minutes. Select <strong>Outputs</strong> as shown here. <img src="/blog/assets/20230526-dev-to-liberty-aks-01-outputs.png" alt="outputs screen" /></li>
  <li>Locate the output named <code class="language-plaintext highlighter-rouge">appHttpsEndpoint</code> and select the “copy” icon beside it.</li>
  <li>Paste that link in a new browser tab and go to the link. Accept the warning about the self-signed certificate. The offer created this certificate on your behalf. Do not use self-signed certificaties in production.</li>
  <li>View the app and play around.</li>
</ol>

<h3 id="verify-the-app-supports-jakarta-ee-10-and-microprofile-6">Verify the app supports Jakarta EE 10 and MicroProfile 6</h3>

<p>The steps in this section show you how to verify the app supports Jakarta EE 10 and MicroProfile 6.</p>

<p>If you followed the EE 10 and MicroProfile 6 links in the first paragraph, you’ll see a list of technologies included in those two open standards. Because this app is a microservice, and because Liberty is a fully modular microservice platform, the sample app includes only a subset of those two standards.</p>

<ol>
  <li>In the Azure portal, return to the page with the <strong>Outputs</strong> from the previous section.</li>
  <li>Locate the output named <code class="language-plaintext highlighter-rouge">cmdToConnectToCluster</code> and select the “copy” icon beside it.</li>
  <li>Still in the Azure portal, open an Azure Cloud Shell.
    <ol>
      <li>Select the icon with <code class="language-plaintext highlighter-rouge">&gt;_</code> in the tool bar at the top of the Azure portal, as shown here. <img src="/blog/assets/20230526-dev-to-liberty-aks-02-azure-cloud-shell.png" alt="How to open the Azure Cloud Shell in the Azure portal " /> The Azure Cloud Shell is incredibly powerful and worthy of your time investment to master it. For complete documentation see <a href="https://learn.microsoft.com/en-us/azure/cloud-shell/overview">Overview of Azure Cloud Shell.</a>.</li>
    </ol>
  </li>
  <li>You may be asked to create storage. If so, say <strong>Yes</strong>.</li>
  <li>In the cloudshell prompt, paste the value for <code class="language-plaintext highlighter-rouge">cmdToConnectToCluster</code> you just now copied and press <code class="language-plaintext highlighter-rouge">Enter</code>. You should see text similar to <code class="language-plaintext highlighter-rouge">Merged "cluster26234e-admin" as current context in /home/edward/.kube/config</code>.</li>
  <li>Enter <code class="language-plaintext highlighter-rouge">alias k=kubectl</code>. This may be useful later.</li>
  <li>Enter <code class="language-plaintext highlighter-rouge">k get pods</code>. Copy either of the two values in the <code class="language-plaintext highlighter-rouge">NAME</code> column.</li>
  <li>Enter <code class="language-plaintext highlighter-rouge">k logs &lt;paste value from preceding step&gt; | grep mpHealth | jq .</code> The output should look like the following.
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"liberty_message"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"host"</span><span class="p">:</span><span class="w"> </span><span class="s2">"app26234e-7bb7bc94f8-7bt7z"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_userDir"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/opt/ol/wlp/usr/"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_serverName"</span><span class="p">:</span><span class="w"> </span><span class="s2">"defaultServer"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"CWWKF0012I: The server installed the following features: [cdi-4.0, distributedMap-1.0, jndi-1.0, json-1.0, jsonb-3.0, jsonp-2.1, monitor-1.0, mpConfig-3.0, mpHealth-4.0, mpMetrics-5.0, restfulWS-3.1, restfulWSClient-3.1, ssl-1.0, transportSecurity-1.0]."</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_threadId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0000002a"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_datetime"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2023-05-25T17:05:50.340+0000"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_messageId"</span><span class="p">:</span><span class="w"> </span><span class="s2">"CWWKF0012I"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"module"</span><span class="p">:</span><span class="w"> </span><span class="s2">"com.ibm.ws.kernel.feature.internal.FeatureManager"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"loglevel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AUDIT"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ibm_sequence"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1685034350340_0000000000033"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"ext_thread"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Default Executor-thread-1"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
</ol>

<p>The value of the <code class="language-plaintext highlighter-rouge">message</code> property is your proof that a subset of technologies from both Jakarta EE 10 and MicroProfile 6 are running in the application.</p>

<p>Call to action: To learn more visit https://aka.ms/websphere-on-azure-contactme . If you want us to contact you directly, select the <strong>Contact Me</strong> button and I’ll get in touch directly.</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Cross posted at dev.to.]]></summary></entry><entry><title type="html">One minute video turns into fifteen minutes of WTF?</title><link href="/blog/2023/05/18/one-minute-video.html" rel="alternate" type="text/html" title="One minute video turns into fifteen minutes of WTF?" /><published>2023-05-18T13:10:00-04:00</published><updated>2023-05-18T13:10:00-04:00</updated><id>/blog/2023/05/18/one-minute-video</id><content type="html" xml:base="/blog/2023/05/18/one-minute-video.html"><![CDATA[<p>I strongly prefer Azure DevOps Boards for prodution quality project management, however, it’s very hard to beat gratis. For this reason, the <a href="https://jakarta.ee">Jakarta EE</a> project is using <a href="https://github.com/features/issues">GitHub Projects &amp; Issues</a>. As the release co-coordinator for Jakarta EE 11, I need to gain mastery of GitHub Projects &amp; Issues. So, I set out to understand this 71 second long video. How hard can it be? It’s only one minute!</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/o1wuW24Nv4E" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>

<p>I am glad this video exists. I understand the producers get to claim, “look it’s so easy it fits in a one minute video.” However, either because the video moves too fast or I move too slowly (I am over fifty years old), it took me fifteen minutes of play/pause/think/repeat to fully absorb the content in a way that I could replicate the steps shown. Is there a video that just runs the full ten minutes and explains it to me rather than this Gen-Z play/pause/think/repeat approach?</p>

<p>In the absence of such a video, here is my second-by-second breakdown of this action packed video.</p>

<ul>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=4s">00:04</a> an issue exists with a <a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists">task   list</a>   from some   <a href="https://www.investopedia.com/terms/a/accreditedinvestor.asp">Investor-type</a>   persona.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=6s">00:06</a> using the <a href="https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/about-task-lists#about-issue-task-lists">hover convert   technique</a>,   convert the three tasks to issues.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=7s">00:07</a> check the three checkboxes to close the newly created   issues. (Why? Seems a waste of time. But it’s only one second, so I   guess it doesn’t matter.)</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=14s">00:14</a> Create a new project.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=16s">00:16</a> Type the octothorpe. (You’re not the only one who can be   obtuse, defunkt.) This drops down a   repository picker. There are probably some scope limitations   here. Perhaps you can only pick repositories in the same   Organization?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=17s">00:17</a> Somehow more issues get added to a thing called <strong>The Plan</strong>,   which I don’t recall being explicitly named. Also, the Investor   wanted these to be called <strong>Epics</strong> but I don’t see that term   anywhere.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=21s">00:21</a> And now we have a giant flat unordered mess of about 25 issues   with no hierarchical structure or organization. Also, there is a   <strong>Status</strong> field, where are the valid values for that field defined?   Is that automatic, like <strong>The Plan</strong>?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=23s">00:23</a> Select (not click) the <code class="language-plaintext highlighter-rouge">+</code> icon to the right of the   <strong>Assignees</strong> column. This looks like some crude form of   categorization.  Apparently you must define your schema for   organizing your work on the fly. Apperently they invent the name   <strong>Area</strong>. The Investor wanted these to be called <strong>Epics</strong>. They   will not be happy with you using the wrong term.</p>

    <p>Anyhow, the video manually creates three <strong>Area</strong> values for the three   <strong>Epics</strong> listed by the Investor. Somehow icons are present. Where   do these come from?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=27s">00:27</a> Select <strong>Apply</strong>. Somehow, magically, a new column   appears. How is the ordering determined? How are the members for   that column decided?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=31s">00:31</a> Apparently the same process used for this <strong>Area</strong> column is   used to create a <strong>Milestone</strong> column. Again, there are icons, but   it’s not clear how they are chosen.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=31s">00:33</a> Each column apparently has a dropdown. However, there appears   to be a bug because the dropdown on the <strong>Milestone</strong> column has   <strong>Area</strong>. But because the video moves so fast I guess it doesn’t   matter. Anyhow, they use the <strong>Group by values</strong> item. This causes   expand/collapse sections to appear for all the values of that   column, with the member rows that have that value grouped together.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=41s">00:41</a> Now we select the search area at the top of the table. It   looks like they are demonstrating some kind of “filter”   feature. Yes. They are. They are showing how you can make it so the   table only shows issues belonging to the specified area.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=46s">00:46</a> Now they use the drop down on the tab labeled <strong>The Plan</strong> and   select <strong>Save changes to new view</strong>. This creates a new tab. Somehow   a title is pre-filled as <strong>Game loop Backlog</strong>. Why does the word   <strong>Backlog</strong> not appear in the first tab? Is there some convention   over configuration thing happening here? The first tab is always   called <strong>The Plan</strong> and the next one <strong>Backlog</strong>?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=50s">00:50</a> Now we have another tab <strong>Standup</strong>. Where did that come from?   I am guessing it came from using the same process to create the   <strong>Game loop Backlog</strong>? But again, how does it know the tab should be   called <strong>Standup</strong>? Anyhow, here we select the drop down on that tab   and select <strong>Board</strong>.</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=55s">00:55</a> you get columns for the <strong>Status</strong> field. Again, where is the   set of valid values for <strong>Status</strong> defined? How is it that the thing   knows that the columns should correspond to the valid values of   <strong>Status</strong>?</p>
  </li>
  <li>
    <p><a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=56s">0:56</a> - <a href="https://www.youtube.com/watch?v=o1wuW24Nv4E&amp;t=71s">01:11</a> We spend a luxurious fifteen seconds (20% of the total run time of the video) on a silly origami Octocat animation.</p>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[I strongly prefer Azure DevOps Boards for prodution quality project management, however, it’s very hard to beat gratis. For this reason, the Jakarta EE project is using GitHub Projects &amp; Issues. As the release co-coordinator for Jakarta EE 11, I need to gain mastery of GitHub Projects &amp; Issues. So, I set out to understand this 71 second long video. How hard can it be? It’s only one minute!]]></summary></entry><entry><title type="html">Notes from watching Ivar Grimstad Devoxx Belgium 2022 Jakarta EE 10 presentation</title><link href="/blog/2023/02/18/booty-duke.html" rel="alternate" type="text/html" title="Notes from watching Ivar Grimstad Devoxx Belgium 2022 Jakarta EE 10 presentation" /><published>2023-02-18T17:10:00-05:00</published><updated>2023-02-18T17:10:00-05:00</updated><id>/blog/2023/02/18/booty-duke</id><content type="html" xml:base="/blog/2023/02/18/booty-duke.html"><![CDATA[<p>50 minutes https://www.youtube.com/watch?v=8ke0kPrg9qc</p>

<p>Simplicity for Modern and Lightweight Cloud Applications</p>

<ul>
  <li>
    <p>Out on 2022-09-22.</p>

    <ul>
      <li>Community driven, modernized, simplified, lightweight.</li>
    </ul>
  </li>
  <li>
    <p>Specs and Impls</p>

    <ul>
      <li>
        <p>Spec, API, TCK</p>
      </li>
      <li>
        <p>Compatibile Impls</p>
      </li>
      <li>
        <p>We need at least one open source impl.</p>
      </li>
      <li>
        <p>Other impls can be fine, not open source.</p>
      </li>
      <li>
        <p>There is no “official” “reference implementation”</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Lots of specs, more than half received updates in EE 10</p>

    <ul>
      <li>
        <p>About half of these have a “.0” version number. In our impl of
SemVer, the .0 means it may have potentially breaking changes.</p>

        <p>Also a bit of marketing to signal there are big noteworthy
changes. (I like this idea)</p>
      </li>
      <li>
        <p>Authorization 2.1</p>
      </li>
      <li>
        <p>Activation 2.1</p>
      </li>
      <li>
        <p>Batch 2.1</p>
      </li>
      <li>
        <p>Connectors 2.1</p>
      </li>
      <li>
        <p>Mail 2.1</p>
      </li>
      <li>
        <p>Messaging 3.1</p>
      </li>
      <li>
        <p>Authentication 3.0</p>
      </li>
      <li>
        <p>Concurrency 3.0</p>
      </li>
      <li>
        <p>CDI 4.0</p>
      </li>
      <li>
        <p>EL 5.0</p>
      </li>
      <li>
        <p>CDI 4.0</p>
      </li>
      <li>
        <p>Faces 4.0</p>
      </li>
      <li>
        <p>Security 3.0</p>
      </li>
      <li>
        <p>Servlet 6.0</p>
      </li>
      <li>
        <p>(J)STL 3.0</p>
      </li>
      <li>
        <p>(J)SP 3.1</p>
      </li>
      <li>
        <p>(JPA)Persistence 3.1</p>
      </li>
      <li>
        <p>WebSocket 2.1</p>
      </li>
      <li>
        <p>Restful Web Services 3.1</p>
      </li>
      <li>
        <p>JSONP 2.1</p>
      </li>
      <li>
        <p>JSONB 3.0</p>
      </li>
      <li>
        <p>Annotations 2.1</p>
      </li>
      <li>
        <p>Interceptors 2.1</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Net new</p>

    <ul>
      <li>
        <p>But not really new.  Because it’s a part of CDI, or a sub spec.</p>
      </li>
      <li>
        <p>CDI Lite 4.0</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Not updated</p>

    <ul>
      <li>
        <p>EJB 4.0</p>
      </li>
      <li>
        <p>Bean Validation 3.0</p>
      </li>
      <li>
        <p>Debugging support 2.0</p>
      </li>
      <li>
        <p>EJB Lite 4.0</p>
      </li>
      <li>
        <p>Managed Beans 2.0</p>
      </li>
      <li>
        <p>Transactions 2.0</p>
      </li>
      <li>
        <p>DI 2.0</p>
      </li>
    </ul>
  </li>
  <li>
    <p>We don’t need to update every spec every time.</p>
  </li>
  <li>
    <p>Ivar subtracts the “enterprisy” and you are left with the “Web
Profile”.  We’ve had a web profile since EE6. Nothing new.</p>

    <p>Useful as a smaller platform.</p>

    <ul>
      <li>
        <p>Auth</p>
      </li>
      <li>
        <p>Concurrency</p>
      </li>
      <li>
        <p>CDI</p>
      </li>
      <li>
        <p>EL</p>
      </li>
      <li>
        <p>Faces</p>
      </li>
      <li>
        <p>Security</p>
      </li>
      <li>
        <p>Servlet</p>
      </li>
      <li>
        <p>STL</p>
      </li>
      <li>
        <p>Persistence</p>
      </li>
      <li>
        <p>JSP</p>
      </li>
      <li>
        <p>WebSocket</p>
      </li>
      <li>
        <p>BeanVal</p>
      </li>
      <li>
        <p>Debugging</p>
      </li>
      <li>
        <p>EJB lite</p>
      </li>
      <li>
        <p>Managed beans</p>
      </li>
      <li>
        <p>JTA</p>
      </li>
      <li>
        <p>JAX-RS</p>
      </li>
      <li>
        <p>JSONP</p>
      </li>
      <li>
        <p>JSONB</p>
      </li>
      <li>
        <p>Annotations</p>
      </li>
      <li>
        <p>Interceptors</p>
      </li>
      <li>
        <p>DI</p>
      </li>
      <li>
        <p>CDI Lite</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Take away the Webby specs, you get Core Profile. Brand new. EE10.</p>

    <ul>
      <li>
        <p>Enables impls to be certified as EE compatible</p>
      </li>
      <li>
        <p>Headless services, or microservices, if you like.</p>
      </li>
      <li>
        <p>JAX-RS</p>
      </li>
      <li>
        <p>JSONP</p>
      </li>
      <li>
        <p>JSONB</p>
      </li>
      <li>
        <p>Annotations</p>
      </li>
      <li>
        <p>Interceptors</p>
      </li>
      <li>
        <p>DI</p>
      </li>
      <li>
        <p>CDI Lite 4.0</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Raise the API source level from 8 to 11</p>

    <ul>
      <li>
        <p>Why not go further?</p>
      </li>
      <li>
        <p>There were not many specs that needed Java features beyond SE 11.</p>
      </li>
      <li>
        <p>This allows us to have a broader appeal.</p>
      </li>
      <li>
        <p><strong>TCK runs on 11 or 17.</strong></p>
      </li>
    </ul>
  </li>
  <li>
    <p>Security 3.0</p>

    <ul>
      <li>
        <p>https://jakarta.ee/specifications/security/</p>
      </li>
      <li>
        <p>Add support for OPenID Connect!</p>
      </li>
      <li>
        <p>Updates to Jakarta Authorization, and Authentication</p>
      </li>
      <li>
        <p>This is a foundation for future work (Q.2 Should this be in the
EE11 talk?)</p>
      </li>
      <li>
        <p>07:22 Code example for OpenID Connect Authentication. It’s an
annotation. <code class="language-plaintext highlighter-rouge">OpenIdAuthenticationMechanismDefinition</code> (love the
long name, very precise)</p>

        <ul>
          <li>Where do you put the annotation?</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Persistence 3.1</p>

    <ul>
      <li>
        <p>https://jakarta.ee/specifications/persistence/</p>
      </li>
      <li>
        <p>Small work interetsed by the community</p>
      </li>
      <li>
        <p>Add UUIDs as a basic java data type!</p>

        <ul>
          <li><code class="language-plaintext highlighter-rouge">GenerationType=UUID</code></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>JAX RS 3.1</p>

    <ul>
      <li>
        <p>https://jakarta.ee/specifications/restful-ws/</p>
      </li>
      <li>
        <p>Community features, requested a long time.</p>
      </li>
      <li>
        <p>Initially wanted a 4.0 release. But went with 3.1 for now.
Planning a 4.0 release for EE 11 (Q.3 this seems definitely like
what we want in the talk).</p>
      </li>
      <li>
        <p>Multipart form data support.</p>

        <ul>
          <li>RestEASY has this.  JAX-RS catches up now.</li>
        </ul>
      </li>
      <li>
        <p>Java SE Bootstrap API</p>

        <ul>
          <li>
            <p>Lets us run JAX-RS outside of an app server.  (Q.4: this seems
like a great thing to show with App Service Java SE! What about
functions?)</p>
          </li>
          <li>
            <p>09:51 Ivar shows a demo https://github.com/ivargrimstad/jakartaee-duke</p>

            <ul>
              <li>
                <p>booty-duke https://soundcloud.com/edburns00/booty-duke-m4a</p>
              </li>
              <li>
                <p>Note that we have explicit dependencies on API and
IMPL. There is no concept of “provided” scope, where you can
just depend on the API.</p>
              </li>
              <li>
                <p>Uses Maven Assembly plugin</p>
              </li>
              <li>
                <p>Needs a main method.</p>

                <ol>
                  <li>
                    <p>Add some configuration: 11:33. Port and root
path. That’s the minimum. There are sensible defaults.
Other options available.</p>
                  </li>
                  <li>
                    <p>Instantiate the app.</p>
                  </li>
                  <li>
                    <p>Start it. 12:21</p>

                    <ul>
                      <li>
                        <p><code class="language-plaintext highlighter-rouge">SeBootstrap.start()</code></p>

                        <ul>
                          <li>
                            <p>Pass in app and config.</p>
                          </li>
                          <li>
                            <p>`thenAccept’</p>
                          </li>
                        </ul>
                      </li>
                      <li>
                        <p><code class="language-plaintext highlighter-rouge">Thread.currentThread().join()</code></p>
                      </li>
                    </ul>
                  </li>
                </ol>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <p>Run it locally.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Core Profile</p>

    <ul>
      <li>
        <p>Reason: target smaller runtimes.</p>
      </li>
      <li>
        <p>Limit the amount of specs required to implement it.</p>
      </li>
      <li>
        <p>3 compatible impls</p>

        <ul>
          <li>
            <p>Open Liberty</p>
          </li>
          <li>
            <p>Payara</p>
          </li>
          <li>
            <p>WildFly</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Potentially compatible impls</p>

        <ul>
          <li>
            <p>Helidon</p>
          </li>
          <li>
            <p>Quarkus</p>
          </li>
          <li>
            <p>Micronaut</p>
          </li>
          <li>
            <p>Helidon and Quarkus have said they will apply for core profile
compatibility Q.5: What can I say about this in the talk?)</p>
          </li>
        </ul>
      </li>
      <li>
        <p>CDI Lite</p>

        <ul>
          <li>
            <p>Enables CDI to be used in GraalVM.</p>
          </li>
          <li>
            <p>Make CDI dynamic at build time, not run time.</p>
          </li>
          <li>
            <p>Create a new extensions API. Portable extensions is too late.</p>
          </li>
          <li>
            <p>Changes how the empty <code class="language-plaintext highlighter-rouge">beans.xml</code> behaves.</p>

            <ul>
              <li>
                <p>Prior: empty beans.xml turns on CDI. Everything is injectable.</p>
              </li>
              <li>
                <p>Now: beans.xml with only top level XML turns on CDI, but
Only things that that have the Injectable annotation are
injectable.</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>17:10 Taking a step back.</p>

    <ul>
      <li>
        <p>To EE8, how to get to 9.1 and 10.</p>
      </li>
      <li>
        <p>If going from 8 to 10, do take the 9 step in between. You don’t
need to go to prod with the 9 version, but it’s good to suss out
problems: new namespace.</p>
      </li>
      <li>
        <p>8 -&gt; 9 big thing: namespace change</p>

        <ul>
          <li>
            <p>javax.* to jakarta.*</p>
          </li>
          <li>
            <p>Why do I care? Because all the things: Spring, Tomcat, Jetty,
Hibernate, are moving to jakarta namespace.</p>
          </li>
          <li>
            <p>It’s usually just a import change.</p>
          </li>
          <li>
            <p>Tools: Changes the bytecode for you. Can use it at build time
or runtime. Not recommended to go to th long time.</p>

            <ul>
              <li>
                <p>Eclipse transformer</p>
              </li>
              <li>
                <p>Apache Tomcat Migration Tool</p>
              </li>
            </ul>
          </li>
          <li>
            <p>Tools: IDE help</p>

            <ul>
              <li>
                <p>IntelliJ Idea has a Java EE to Jakarta EE thing.</p>
              </li>
              <li>
                <p>A bit smarter than just a regexp action.</p>
              </li>
            </ul>
          </li>
          <li>
            <p>Manual 20:26</p>

            <ol>
              <li>
                <p>Update Jakarta EE version in pom.xml</p>
              </li>
              <li>
                <p>Fix the imports</p>
              </li>
              <li>
                <p>XML schema namespaces</p>
              </li>
              <li>
                <p>Rename properties prefixed with javax.</p>
              </li>
              <li>
                <p>Rename bootstrapping files</p>
              </li>
              <li>
                <p>Verify data and dynamic content</p>
              </li>
            </ol>

            <p>See https://github.com/ivargrimstad/jakartaee-duke/blob/master/complete-duke/README.adoc</p>
          </li>
          <li>
            <p>This is a three tier helloworld, to show the migration steps.</p>

            <ul>
              <li>
                <p>Starts with EE and SE 8 apis.</p>
              </li>
              <li>
                <p>Adds EE 8 and 9 to the classpath.  Both of them!</p>
              </li>
              <li>
                <p>App is the same as the booty-duke.</p>
              </li>
              <li>
                <p>Rest resource.  “hello” path, produces message. Is a
stateless bean. 23:00</p>

                <ul>
                  <li>Finds first message from injected stateful session bean,
if not there, hard codes the message value.</li>
                </ul>
              </li>
              <li>
                <p>Stateful session bean uses the entity manager from
Persistence.</p>

                <ul>
                  <li><code class="language-plaintext highlighter-rouge">findAll</code> method creates a <code class="language-plaintext highlighter-rouge">CriteriaQuery</code> that basically
does <code class="language-plaintext highlighter-rouge">SELECT * FROM GREETINGTABLE</code>.</li>
                </ul>
              </li>
              <li>
                <p><code class="language-plaintext highlighter-rouge">@Entity DukesGreeting</code> 23:30</p>
              </li>
              <li>
                <p>There is a CDI extension.  <code class="language-plaintext highlighter-rouge">@Dukes</code>. <code class="language-plaintext highlighter-rouge">DukesExtension
implements Extension</code>.</p>

                <ul>
                  <li>
                    <p><code class="language-plaintext highlighter-rouge">processAnnotatedType(@Observes
@WithAnnotations(Dukes.class)...</code></p>
                  </li>
                  <li>
                    <p>Prints out a message to the logger for every such
annotated class.</p>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
          <li>
            <p>24:10 Now does the namespace change</p>

            <ul>
              <li>
                <p>Uses the aforementioned IntelliJ Idea tool support.</p>
              </li>
              <li>
                <p><strong>This is why he added the EE 9 and EE8 jars both.</strong></p>
              </li>
              <li>
                <p>Once he ran the tool, he can remove the EE8 jars.</p>
              </li>
            </ul>
          </li>
          <li>
            <p>24:50 That’s steps 1 and 2.</p>
          </li>
          <li>
            <p>If you are using XML config, you have to pay attention to that.</p>

            <ul>
              <li>
                <p>He has a <code class="language-plaintext highlighter-rouge">persistence.xml</code>.  Uses the JCP namespace.</p>
              </li>
              <li>
                <p>23:58 Replace <code class="language-plaintext highlighter-rouge">jcp.org</code> with <code class="language-plaintext highlighter-rouge">jakarta.ee</code>.</p>
              </li>
              <li>
                <p>Also change the <code class="language-plaintext highlighter-rouge">schemaLocation</code></p>

                <ul>
                  <li>
                    <p>version number</p>
                  </li>
                  <li>
                    <p><code class="language-plaintext highlighter-rouge">jcp.org</code> to <code class="language-plaintext highlighter-rouge">jakarta.ee</code></p>
                  </li>
                </ul>
              </li>
              <li>
                <p>version number in xml <code class="language-plaintext highlighter-rouge">version</code> attribute.</p>
              </li>
            </ul>
          </li>
          <li>
            <ol>
              <li>Properties</li>
            </ol>

            <ul>
              <li>he has these in his <code class="language-plaintext highlighter-rouge">persistence.xml</code> file.  In his case
this is for drop and create of the table.</li>
            </ul>
          </li>
          <li>
            <ol>
              <li>Rename bootstrapping files</li>
            </ol>

            <ul>
              <li>
                <p>CDI bootstrapping file
<code class="language-plaintext highlighter-rouge">META-INF/services/javax.enterprise.inject.spi.Extension</code></p>
              </li>
              <li>
                <p>Rename the file to jakarta.enterprise….</p>
              </li>
            </ul>
          </li>
          <li>
            <ol>
              <li>Verify data and dynamic content. 28:00  Runs it in GlassFish 6
(EE9) In his case, it’s the text in the database. He updates
the database using some table editor in IntelliJ Idea. Reloads
the page.</li>
            </ol>

            <ul>
              <li>
                <p>EE9 supports Java 17.</p>
              </li>
              <li>
                <p>Updates the pom.</p>
              </li>
              <li>
                <p>Let’s use some Java 17 features as well.</p>

                <ul>
                  <li>
                    <p>How about records? 31:27</p>
                  </li>
                  <li>
                    <p>Lets us avoid exposing our database architecture in the
API.</p>
                  </li>
                  <li>
                    <p>Creates <code class="language-plaintext highlighter-rouge">DukesGreetingRecord</code>. 31:49</p>
                  </li>
                  <li>
                    <p>In the business logic, use a mapper, map it from the
greeting to a <code class="language-plaintext highlighter-rouge">new DukesGreetingRecord</code> populates using
the getters.</p>
                  </li>
                  <li>
                    <p>Are we done? 33:29.  No.  It’ came up empty.  Why?</p>

                    <ul>
                      <li>
                        <p>JSON Binding is expecting a Java Bean.</p>
                      </li>
                      <li>
                        <p>It must have a getter.  Records don’t have
getters. Records are not Java Beans.</p>
                      </li>
                      <li>
                        <p>Simplest thing is to change the name of the fields in
the record: <code class="language-plaintext highlighter-rouge">getDate</code> <code class="language-plaintext highlighter-rouge">getMessage</code>.</p>
                      </li>
                    </ul>
                  </li>
                </ul>
              </li>
              <li>
                <p>Let’s upgrade it to EE 10.</p>

                <ul>
                  <li>
                    <p>Very simple.</p>
                  </li>
                  <li>
                    <p>Update the pom dependency from 9 to 10.</p>
                  </li>
                  <li>
                    <p>But is it? No. When running he got a servlet exception.</p>

                    <ul>
                      <li>
                        <p>Has to do with the <code class="language-plaintext highlighter-rouge">beans.xml</code> stuff.</p>
                      </li>
                      <li>
                        <p>Adds a <code class="language-plaintext highlighter-rouge">beans.xml</code>. Make sure it’s
version 4. <code class="language-plaintext highlighter-rouge">bean-discovery-mode</code> should be
<code class="language-plaintext highlighter-rouge">annotated</code>.  This is the default, so you can remove
<code class="language-plaintext highlighter-rouge">bean-discovory-mode</code>.</p>
                      </li>
                      <li>
                        <p>Must also update the schema namespace version.</p>
                      </li>
                    </ul>
                  </li>
                  <li>
                    <p>37:44 So great! Can remove the ugly hack we did with the record.  Set
record fields back to <code class="language-plaintext highlighter-rouge">message</code> and <code class="language-plaintext highlighter-rouge">date</code>.</p>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <p>If you are relying on the “no beans.xml” or “empty beans.xml”
behavior, then you must take the action.  If you have a
beans.xml, have it set at annotated, you’re fine.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>38:37 the core profile.</p>

    <ul>
      <li>
        <p>Takes this application, strips away a bit</p>

        <ul>
          <li>
            <p>Removes database</p>
          </li>
          <li>
            <p>Makes the CDI extension “build compatibile” rather than
“portable” extension.</p>
          </li>
          <li>
            <p>39:12.  Implements the <code class="language-plaintext highlighter-rouge">spi.Extension</code> interface. Has
<code class="language-plaintext highlighter-rouge">processAnnotatedType</code> method.</p>
          </li>
          <li>
            <p>New API in core has <code class="language-plaintext highlighter-rouge">spi.BuildCompatibileExtension</code></p>

            <ul>
              <li>
                <p>Annotations for the different lifecycle events.</p>
              </li>
              <li>
                <p>40:11 Recommendation. If you are running your app in a
thing that supports full CDI, stick to the portable
extension. Only if you are running in a CDI lite
environment should you consider this kind of extension.</p>
              </li>
              <li>
                <p>Use the <code class="language-plaintext highlighter-rouge">@Enhancement</code> annotation.</p>
              </li>
              <li>
                <p>Have
<code class="language-plaintext highlighter-rouge">META-INF/services/jakarta.enterprise.inject.build.compatible.spi.BuildCompatibleExtension</code>
identify the extension. This is the package name of the
interface, so you don’t have to remember the long name.</p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <p>Runs it in WildFly 27.0.0.Alpha1</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Payara Cloud 42:07</p>

    <ul>
      <li>
        <p>Upload the application, run it.</p>
      </li>
      <li>
        <p>Gives the PaaS value prop: someone else manages the complexity of
Kubernetes.</p>
      </li>
    </ul>
  </li>
  <li>
    <p>44:30 We’re now thinking of Jakarta EE 11 Q.6</p>

    <ul>
      <li>
        <p>Discussion: what Java SE level should we base Jakarta EE 11 on?</p>

        <ul>
          <li>
            <p>Raise to 17?</p>
          </li>
          <li>
            <p>Raise to 21?</p>
          </li>
        </ul>
      </li>
      <li>
        <p>How to handle the removal of the <code class="language-plaintext highlighter-rouge">SecurityManager</code>.</p>

        <ul>
          <li>
            <p>Users will not notice.</p>
          </li>
          <li>
            <p>Impls will have to change.</p>
          </li>
        </ul>
      </li>
      <li>
        <p>New spec: Jakarta Config (finally!)</p>

        <ul>
          <li>
            <p>https://jakarta.ee/specifications/config/</p>

            <ul>
              <li>
                <p>More or less based on MicroProfile Config.  Will be
compatible with it.</p>
              </li>
              <li>
                <p>When Jakarta Config comes out, MicroProfile Config will
probably be retired.</p>
              </li>
              <li>
                <p><code class="language-plaintext highlighter-rouge">@ConfigProperty</code></p>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <p>Possible New spec: Jakarta MVC</p>

        <ul>
          <li>
            <p>https://jakarta.ee/specifications/mvc/</p>
          </li>
          <li>
            <p>Server side rendering</p>
          </li>
          <li>
            <p>Runs on WildFly, GlassFish, anything with Jersey</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Possible new spec: Jakarta NoSQL</p>

        <ul>
          <li>https://jakarta.ee/specifications/nosql/</li>
        </ul>
      </li>
      <li>
        <p>Possible new spec: Jakarta RPC</p>

        <ul>
          <li>
            <p>Standardizes gRPC within Jakarta EE</p>
          </li>
          <li>
            <p>https://jakarta.ee/specifications/rpc/</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Possible new spec: Jakarta Data</p>

        <ul>
          <li>
            <p>Standardizes the repository pattern for data access</p>
          </li>
          <li>
            <p>Spring Data, but for Jakarta EE</p>
          </li>
        </ul>
      </li>
      <li>
        <p>Cloud functions?</p>
      </li>
    </ul>
  </li>
  <li>
    <p>Summary 48:00</p>
  </li>
</ul>]]></content><author><name></name></author><summary type="html"><![CDATA[50 minutes https://www.youtube.com/watch?v=8ke0kPrg9qc]]></summary></entry><entry><title type="html">Using git worktree and a script to copy commits from one branch to another in the same repo</title><link href="/blog/2022/07/19/git-worktree.html" rel="alternate" type="text/html" title="Using git worktree and a script to copy commits from one branch to another in the same repo" /><published>2022-07-19T09:25:00-04:00</published><updated>2022-07-19T09:25:00-04:00</updated><id>/blog/2022/07/19/git-worktree</id><content type="html" xml:base="/blog/2022/07/19/git-worktree.html"><![CDATA[<p>This brief post shows how to use <code class="language-plaintext highlighter-rouge">git worktree</code> to perform development work multiple branches of your local clone of a remote git repository, such as a repository on GitHub.<br />
The <code class="language-plaintext highlighter-rouge">worktree</code> git sub-command allows you to “Manage multiple working trees”. If you want to know everything there is to know about <code class="language-plaintext highlighter-rouge">worktree</code>, you can view the manual page by doing <code class="language-plaintext highlighter-rouge">man git-worktree</code>.  Yes, that’s right, the literal string <code class="language-plaintext highlighter-rouge">git-worktree</code>.  All git sub-commands have their own manual page which you can access with <code class="language-plaintext highlighter-rouge">man git-subcommandname</code>.  Try it with <code class="language-plaintext highlighter-rouge">man git-branch</code>, for example.</p>

<p>The post assumes makes the following assumptions.</p>

<ul>
  <li>You have already done <code class="language-plaintext highlighter-rouge">git clone</code> of the remote repository on your local environment.</li>
  <li>For discussion, this local clone is called <code class="language-plaintext highlighter-rouge">myrepo</code>.</li>
  <li>Within <code class="language-plaintext highlighter-rouge">myrepo</code> you already have three branches: <code class="language-plaintext highlighter-rouge">main</code>, <code class="language-plaintext highlighter-rouge">myfeature</code>, and <code class="language-plaintext highlighter-rouge">myotherfeature</code>.</li>
  <li>The <code class="language-plaintext highlighter-rouge">main</code> branch is currently checked out.  This is the default behavior when you do <code class="language-plaintext highlighter-rouge">git clone</code>.</li>
</ul>

<h3 id="check-out-myfeature-using-git-worktree-add">Check out myfeature using git worktree add</h3>

<ol>
  <li><code class="language-plaintext highlighter-rouge">cd myrepo</code></li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git status</code> <br />
You should see the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
</code></pre></div>    </div>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git worktree list</code> <br />
You should see something similar to the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/home/edburns/workareas/myrepo  5bb3c2a [main]
</code></pre></div>    </div>
  </li>
  <li>
    <p>Now, it’s time to check out your <code class="language-plaintext highlighter-rouge">myfeature</code> branch using <code class="language-plaintext highlighter-rouge">git worktree</code>.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git worktree add --track -b myfeature ../myrepo-01 origin/myfeature
git worktree list
</code></pre></div>    </div>

    <p>You should see something similar to the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/home/edburns/workareas/myrepo  5bb3c2a [main]
/home/edburns/workareas/myrepo-01  49336e1 [myfeature]
</code></pre></div>    </div>

    <p><strong>IMPORTANT:</strong> With <code class="language-plaintext highlighter-rouge">git worktree</code>, you only have one <code class="language-plaintext highlighter-rouge">.git</code> directory, in this case <code class="language-plaintext highlighter-rouge">myrepo/.git</code>.  If you do <code class="language-plaintext highlighter-rouge">ls -la</code> in <code class="language-plaintext highlighter-rouge">myrepo-01</code>, you will see a <code class="language-plaintext highlighter-rouge">.git</code> <strong>file</strong>.  It’s name the same, but it is a file, not a directory.  So, even though you have two checked out branches you are not using twice as much disk space because the <code class="language-plaintext highlighter-rouge">myrepo-01</code> directory only has the most recent files of the checked out branch.</p>
  </li>
</ol>

<h3 id="check-out-myotherfeature-using-git-worktree-add">Check out myotherfeature using git worktree add</h3>

<ol>
  <li><code class="language-plaintext highlighter-rouge">cd myrepo</code></li>
  <li>
    <p>Now, it’s time to check out your <code class="language-plaintext highlighter-rouge">myotherfeature</code> branch using <code class="language-plaintext highlighter-rouge">git worktree</code>.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git worktree add --track -b myotherfeature ../myrepo-02 origin/myotherfeature
git worktree list
</code></pre></div>    </div>

    <p>You should see something similar to the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/home/edburns/workareas/myrepo  5bb3c2a [main]
/home/edburns/workareas/myrepo-01  49336e1 [myfeature]
/home/edburns/workareas/myrepo-02  52059ba [myotherfeature]
</code></pre></div>    </div>
  </li>
</ol>

<h3 id="copy-commits-from-myotherfeature-to-myfeature">Copy commits from myotherfeature to myfeature</h3>

<p>Now comes the interesting part, how to to copy commits from <code class="language-plaintext highlighter-rouge">myotherfeature</code> to <code class="language-plaintext highlighter-rouge">myfeature</code>.</p>

<p>The following script, which I suggest you save as <code class="language-plaintext highlighter-rouge">~/bin/copyLastNWorktreeCommits.sh</code>, copies the last N commits from one worktree branch to another.  The script makes the simplifying assumption that the commits you want to copy are the most recent N commits.  If the commits you want to copy are not the most recent N commits, you can use <code class="language-plaintext highlighter-rouge">git rebase -i</code> to re-order the commits as described in this <a href="https://www.atlassian.com/git/tutorials/rewriting-history#git-rebase-i">decent tutorial from Atlassian</a>.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># pwd has the dest branch checked out</span>
<span class="c"># first argument is relative path to source branch, checked out with worktree</span>
<span class="c"># second argument is dest branch</span>
<span class="c"># third argument is num commits</span>
<span class="nv">ontoValue</span><span class="o">=</span><span class="sb">`</span>git rev-parse HEAD<span class="sb">`</span>
<span class="nv">sourceBranch</span><span class="o">=</span><span class="nv">$1</span>
<span class="nv">destBranch</span><span class="o">=</span><span class="nv">$2</span>
<span class="nv">numLastCommitsOnPrivateBranch</span><span class="o">=</span><span class="nv">$3</span>

<span class="nb">pushd</span> <span class="nb">.</span>
<span class="nb">cd</span> <span class="nv">$1</span>
<span class="nv">startingCommit</span><span class="o">=</span><span class="sb">`</span>git rev-parse HEAD<span class="sb">`</span>
<span class="nv">endingCommit</span><span class="o">=</span><span class="sb">`</span>git rev-parse HEAD~<span class="k">${</span><span class="nv">numLastCommitsOnPrivateBranch</span><span class="k">}</span><span class="sb">`</span>

<span class="nb">popd

</span>git rebase <span class="nt">--onto</span> <span class="k">${</span><span class="nv">ontoValue</span><span class="k">}</span> <span class="k">${</span><span class="nv">endingCommit</span><span class="k">}</span> <span class="k">${</span><span class="nv">startingCommit</span><span class="k">}</span>
git rebase HEAD <span class="k">${</span><span class="nv">destBranch</span><span class="k">}</span>
</code></pre></div></div>

<p>Let’s say we want to copy the last 3 commits from <code class="language-plaintext highlighter-rouge">myotherfeature</code> to <code class="language-plaintext highlighter-rouge">myfeature</code>.  Assuming <code class="language-plaintext highlighter-rouge">copyLastNWorktreeCommits.sh</code> is in your <code class="language-plaintext highlighter-rouge">~/bin</code> directory and is on your path, as described in the appendix, the following commands will accomplish this.</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">cd myrepo-01</code></li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">git status</code></p>

    <p>You should see something similar to the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>On branch myfeature
Your branch is up to date with 'origin/myfeature.

nothing to commit, working tree clean
</code></pre></div>    </div>

    <p>Verify that you are in the correct directory. The script treats the current directory as the destination directory.</p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">copyLastNWorktreeCommits.sh ../myrepo-02 myfeature 3</code></p>

    <p>You should see output similar to the following.</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>First, rewinding <span class="nb">head </span>to replay your work on top of it...
Applying: my change 01
Applying: my change 02
Applying: my change 03
First, rewinding <span class="nb">head </span>to replay your work on top of it...
Fast-forwarded main to HEAD.
</code></pre></div>    </div>
  </li>
  <li>
    <p>Verify that the commits have been copied.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log -3
</code></pre></div>    </div>

    <p>You should see output similar to the following.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit 9f1116063f0ce1c097e3118fc096a764d678798e (HEAD -&gt; main)
Author: Ed Burns &lt;email@address.com&gt;
Date:   Tue Jul 19 14:23:41 2022 -0400

    my change 03

commit 072da86c6b8e360120aab1f2a6fd87368c64fc3d
Author: Ed Burns &lt;email@address.com&gt;
Date:   Tue Jul 19 14:23:27 2022 -0400

    my change 02

commit 38036c3d4a4597b2ac070d32c236adc7b6106ae2
Author: Ed Burns &lt;email@address.com&gt;
Date:   Tue Jul 19 14:23:16 2022 -0400

    my change 01
</code></pre></div>    </div>
  </li>
  <li>
    <p>Verify that the commits are ready to be pushed.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git status
On branch myfeature
Your branch is ahead of 'origin/myfeature' by 3 commits.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
</code></pre></div>    </div>

    <p>Don’t be thrown off by the “nothing to commit”.  Yes, it’s true, you have nothing to commit to <code class="language-plaintext highlighter-rouge">myfeature</code>, because those three changes were already committed on <code class="language-plaintext highlighter-rouge">myotherfeature</code>.  So while you have nothing to commit, you <strong>do</strong> have something to push.</p>
  </li>
  <li>If you want, you can push those changes now, but doing so is an exercise for the reader.</li>
</ol>

<h3 id="summary">Summary</h3>

<p>In this post we learned how to use <code class="language-plaintext highlighter-rouge">git worktree</code> to have three branches checked out at the same time, each in their own directories, conveniently located as siblings in the filesystem.  We learned how to copy commits from one branch to another in this arranchement.</p>

<h3 id="appendix-bash-basics-preconditions">Appendix: bash basics preconditions</h3>

<p>This appendix describes how to make it so you can call the script shown in the post from the command line.  As with everything in GNU/Linux, <a href="/blog/2010/03/03/perils-8220there8217s-more-one-way-do-it8221.html">there is more than one way to do it</a>.  I’m not even sure this is the best way. This is just how I do it.</p>

<ol>
  <li>Make sure you have a <code class="language-plaintext highlighter-rouge">bin</code> directory in your home directory.</li>
  <li>Save the script to a file in that <code class="language-plaintext highlighter-rouge">bin</code> directory.  As stated in the post, I recommend naming the file <code class="language-plaintext highlighter-rouge">copyLastNWorktreeCommits.sh</code>.</li>
  <li>Make sure the file has executable permissions. <br />
<code class="language-plaintext highlighter-rouge">chmod ugo+x ~/bin/copyLastNWorktreeCommits.sh</code>.</li>
  <li>Make sure your <code class="language-plaintext highlighter-rouge">bin</code> directory in your home directory is in your <code class="language-plaintext highlighter-rouge">$PATH</code> environment variable.
    <ul>
      <li>There are lots of ways to do this.  This one seems pretty reasonable: <a href="https://linuxize.com/post/how-to-add-directory-to-path-in-linux/">https://linuxize.com/post/how-to-add-directory-to-path-in-linux/</a>.</li>
    </ul>
  </li>
</ol>]]></content><author><name></name></author><summary type="html"><![CDATA[This brief post shows how to use git worktree to perform development work multiple branches of your local clone of a remote git repository, such as a repository on GitHub. The worktree git sub-command allows you to “Manage multiple working trees”. If you want to know everything there is to know about worktree, you can view the manual page by doing man git-worktree. Yes, that’s right, the literal string git-worktree. All git sub-commands have their own manual page which you can access with man git-subcommandname. Try it with man git-branch, for example.]]></summary></entry><entry><title type="html">Ed’s JavaLand 2022 Session Picks (Updated)</title><link href="/blog/2022/02/15/javaland-2022-picks.html" rel="alternate" type="text/html" title="Ed’s JavaLand 2022 Session Picks (Updated)" /><published>2022-02-15T18:25:00-05:00</published><updated>2022-02-15T18:25:00-05:00</updated><id>/blog/2022/02/15/javaland-2022-picks</id><content type="html" xml:base="/blog/2022/02/15/javaland-2022-picks.html"><![CDATA[<p>Cross posted at <a href="https://dev.to/edburns00/eds-javaland-2022-session-picks-updated-2ghj">dev.to</a>.</p>

<p>In my <a href="/blog/2021/05/19/build-picks.html">previous</a> “session picks” post I lamented, “Ever since the end of in-person events, I have not bothered to do my traditional session picks posts”.  Well, with <a href="https://javaland.eu">JavaLand 2022</a> fast approaching, the time has come to resume the practice.</p>

<p>All times in local timezone in JavaLand.  See <a href="https://www.javaland.eu/de/programm/">the program</a> for more details on each session.</p>

<h3 id="monday-14-march-2022">Monday, 14 March 2022</h3>

<h4 id="1700---1900-dambali-matamba---pattern-matching-mit-java">17:00 - 19:00 Dambali (Matamba) - Pattern matching mit Java</h4>

<p>The day before JavaLand is usually reserved for JavaLand kids activities, but with Coronavirus I have not heard about any such plans.  What I do see on the schedule is one talk from German Java conference veteran <a href="https://twitter.com/sippsack">Falk Sippach</a> and newcomer <a href="https://twitter.com/MBoegie">Merlin Bögershausen</a> about pattern matching in Java.  Nope, it’s not regular expressions they’re talking about.  They are talking about language level features such as pattern matching in switch statements, records, and arrays, as described in this authoritative blog post from <a href="https://blogs.oracle.com/javamagazine/post/java-project-amber-lambda-loom-panama-valhalla">Andrew Binstock</a>.  The talk is in German, but well worth a look.  It’s also the only scheduled talk on Monday.</p>

<h3 id="tuesday-15-march-2022">Tuesday, 15 March 2022</h3>

<h4 id="0830---0910-schauspielhaus---unittesting-für-jakarta-ee---das-vernachlässigte-wesen">08:30 - 09:10 Schauspielhaus - Unittesting für Jakarta EE - das vernachlässigte Wesen</h4>

<p>After many years of working mainly with the arrangement of boxes on architecture diagrams, and the JSON it takes to connect those boxes, I look forward to looking deep inside a single box at the humble Unit Test. Join <a href="https://github.com/guhilling/">Gunnar Hilling</a> for this Jakarta EE focused look at this neglected discipline.</p>

<p>I also close out my conference picks with a talk about assertions.</p>

<h4 id="0930---1000---silverado---begrüßung">09:30 - 10:00 - Silverado - Begrüßung</h4>

<p>I’ve been to every JavaLand ever, and I can attest that Fried’s energetic greetings are not to be missed. I am sure it will be especially emotional after we’ve all been through two years of pandemic hardship. If you are interested in my take on being thankful to be at a conference after two years of pandemic hardship, check out <a href="/blog/2021/11/22/workshoptage-keynote-summary-document.html">this previous post</a>.</p>

<h4 id="1000---1040---silverado---common-misunderstandings-in-software-architecture">10:00 - 10:40 - Silverado - Common Misunderstandings in Software Architecture</h4>

<p>I am unfamiliar with <a href="https://twitter.com/Cairolali">Dr. Carola Lilienthal</a>, but her book “Sustainable Software Architecture” looks excellent. This talk is likely a distillation of the lessons in the book.</p>

<h4 id="1100---1040---schauspielhaus---quarkus-a-bliss-for-developers">11:00 - 10:40 - Schauspielhaus - Quarkus: a Bliss for Developers</h4>

<p>Alex Soto Bueno is delivering a talk on Red Hat’s flagship, post-monolith,
cloud-native, enterprise Java developer runtime. I’m confident it will
be true to the legacy of excellent talks from the legendary Burr
Sutter.  Even though this talk competes with Ivar Grimstad’s Jakarta
EE 10 talk, I prioritize this one because I see Quarkus as delivery
vehicle for some Jakarta EE specs.  Look at it this way: EE10 is the
future, and some of the EE10 specs will eventually show up in Quarkus.</p>

<h4 id="1200---1240---wintergarden---low-cost-cloud-native-open-standard-java-on-azure-kubernetes-service">12:00 - 12:40 - Wintergarden - Low Cost, Cloud Native, Open Standard Java on Azure Kubernetes Service</h4>

<p>My biased opinion recommends my own session.  <a href="https://twitter.com/emilyfhjiang">Emily Jiang</a> and will observe that customers have made it clear: they want Kubernetes, but they want it easy and affordable. It is possible to address these two competing concerns by using open source runtimes on commodity hardware. This lecture shows how to use the EPLv1 licensed Open Liberty runtime on vanilla Azure Kubernetes Service.</p>

<p>If I wasn’t giving this talk, I would attend <a href="https://twitter.com/johanjanssen42">Johan Janssen’s</a>
“Why and How to Upgrade to Java 17” in Silverado.  I find an in-person conference is really great for these “one stop shop” sessions.</p>

<h4 id="1300---1340---silverado---the-project-that-changed-my-mind-on-java-modules">13:00 - 13:40 - Silverado - The Project that Changed my Mind on Java Modules</h4>

<p>Java modules is the feature that should have been in JDK 1.0, but for
many extremely valid reasons did not show up until eleven years
later. Most of the trouble people have had using Java modules in
practice can be traced to necessary decisions projects have had to
make in the absence of such a core feature in the JDK.  The problem of
modularity is fundamental to computer science, and the Java module
system is one answer to that problem for the Java platform.  The
abstract for <a href="https://twitter.com/JaapCoomans">Jaap Coomans’s</a> talk
states, “That’s when the box of Pandora really opened up.” Yep, that
is the most common experience of people trying to use Java modules in
practice. I am very curious to see Jaap’s answer.</p>

<h4 id="1400---1440---silverado---debugging-distributed-systems">14:00 - 14:40 - Silverado - Debugging Distributed Systems</h4>

<p>This topic is solid gold.  In my lexicon “debugging” is the same thing
as “deeply understanding”. If you can’t debug a system, you can’t
claim to deeply understand it.  I expect Java Champion <a href="https://twitter.com/bjschrijver">Bert Jan
Schrijver</a> will leave you with
actionable lessons on this essential skill.</p>

<h4 id="1500---1540---rotunde---jvm-ergonomics-and-the-container-deep-dive">15:00 - 15:40 - Rotunde - JVM Ergonomics and the Container: Deep Dive</h4>

<p>The first thing that popped into my mind when reading <a href="https://twitter.com/Tommy1199">Sascha Selzer’s</a> abstract for “JVM Ergonomics and the Container: Deep Dive” was Martin Thompson’s 2017 JavaLand Keynote about <a href="https://www.javaland.eu/de/home/news/details/?tx_news_pi1%5Bnews%5D=1327&amp;tx_news_pi1%5Bcontroller%5D=News&amp;tx_news_pi1%5Baction%5D=detail&amp;cHash=bb7d83b09cba83204cb0c902d1700990">Mechanical Sympathy</a>.  Martin’s concept is all about understanding the relationship between the hardware and the software running on top of it.  Given the complete centrality of containerized workloads to our current practice, this talk seems essential.</p>

<h4 id="1600---1640---rotunde---observing-cloud-native-java-apps-using-opentelemetry-on-aws-gcp-and-azure">16:00 - 16:40 - Rotunde - Observing Cloud Native Java Apps Using OpenTelemetry on AWS, GCP and Azure</h4>

<p>Sticking with the operations angle, this talk covers OpenTelemetry.  I’d say that OpenTelemetry will do for observability what the Servlet API did for CGI-BIN: make it standard for all Java apps.  Check this talk by <a href="https://www.xing.com/profile/Bernhard_Lubomski/cv">Bernhard Lubomski</a> out.</p>

<h4 id="1700---1740---wintergarten---openid-connect-support-in-jakarta-ee-10">17:00 - 17:40 - Wintergarten - OpenId Connect Support in Jakarta EE 10</h4>

<p><a href="https://twitter.com/rdebusscher">Rudy De Bunsscher</a> is a driving
force behind Payara and also an active Jakarta EE contributor. This
talk demonstrates the continued vitality of Jakarta EE by showing how
the OpenId Connect standard is supported in Jakarta EE 10.  From a
historical perspective, the Security API, introduced by David Blevins
in Jakarta EE 8, is a great foundation for OpenId Connect.  I am curious to see if Spring adopts the Security spec or continues in their
<a href="https://www.youtube.com/watch?v=VZAJMBFq85s">go your own way</a>
approach when it comes to the “invent vs adopt” decision.</p>

<h4 id="1800---1840---silverado---how-to-survive-a-live-coding-session">18:00 - 18:40 - Silverado - How to Survive a Live Coding Session</h4>

<p>I have observed the world-master of live coding, Dr. Venkat
Subramaniam, and wondered, “how does he do it?” This meta-session
about live coding sessions from <a href="https://twitter.com/rucek">Jacek
Kunicki</a> offers, “tips and tricks [to] help
you feel more comfortable and prepared for (almost)
everything. Real-life horror stories included!”  Sounds great!</p>

<h4 id="1900---1940---quantum-12---die-neue-gesprächskultur-ganz-wie-in-panama">19:00 - 19:40 - Quantum 1+2 - Die neue Gesprächskultur: ganz wie in Panama</h4>

<p>I’m glad to see my JSF expert group old colleague <a href="https://www.goodreads.com/review/show/378749161">Bernd Müller</a> is still doing new and exciting different things in the Java world.  This particular topic of native-Java interaction (but not the GraalVM kind) is close to my heart, having worked with JNI over <a href="https://www-archive.mozilla.org/oji/">20 years ago</a>.</p>

<h3 id="wednesday-16-march-2022">Wednesday, 16 March 2022</h3>

<h4 id="0900---0940---wintergarden---java-at-microsoft---behind-the-scenes">09:00 - 09:40 - Wintergarden - Java at Microsoft - Behind the scenes</h4>

<p>When I first published this post, I had recommended Fabian’s talk
titled “State of the Java Metrics Libraries” in Rotunde.  I still want
to see this talk, but I must recommend you attend my colleagues
<a href="https://twitter.com/karianna">Martijn Verburg</a> and <a href="https://twitter.com/gdams_">George
Adams’s</a> talk about the latest entrant in
the OpenJDK ecosystem, Microsoft. You can read more about it in this
blog post announcing <a href="https://devblogs.microsoft.com/java/microsoft-deepens-its-investments-in-java/">Microsoft joining the JCP</a>.</p>

<h4 id="1000---1040---wintergarten---increase-your-productivity-with-intellij">10:00 - 10:40 - Wintergarten - Increase Your Productivity with IntelliJ</h4>

<p>My own interviews with <a href="https://ridingthecrest.com/">Rockstar Programmers</a> support the observation that mastery of tools is the single most important skill in the Rockstar programmer’s toolbox. This session from <a href="https://twitter.com/BoukeNijhuis">Bouke Nijhuis</a>, gives you tips for mastery of the most masterful Java IDE.</p>

<h4 id="1100---1140---wintergarten---from-zero-to-spring-boot-hero-with-github-codespaces">11:00 - 11:40 - Wintergarten - From Zero to Spring Boot Hero with GitHub Codespaces</h4>

<p>Have you heard of GitHub codespaces? Well, <a href="https://twitter.com/sKriemhild">Sandra Ahlgrimm</a> is a past master of this transformative developer technology.  She joins forces with <a href="http://twitter.com/martinlippert">Martin Lippert</a> to show how to become super productive with CodeSpaces and Spring Boot.</p>

<h4 id="1200---1240---stocks---der-application-server-ist-tot----es-lebe-jakarta-ee">12:00 - 12:40 - Stock’s - Der Application Server ist tot (?) - es lebe Jakarta EE!</h4>

<p>My main job at Microsoft is to ensure Java EE application server
workloads have a great home on Azure.  I have seen irrefutable Azure
revenue numbers that prove the Java EE app server is far from dead.
I’m looking forward to an outside perspective from <a href="https://twitter.com/dirkweil">Dirk Weil</a> on this same question.</p>

<h4 id="1300---1340---wintergarten---die-all-stars-der-software-bugs--und-was-wir-von-ihnen-lernen-können">13:00 - 13:40 - Wintergarten - Die All-Stars der Software-Bugs – und was wir von ihnen lernen können</h4>

<p>I have seen many different anthropomorphisms for software bugs, but “all star team” is a new one. <a href="https://twitter.com/perdian_de">Christian Seifert</a> brings this entertaining perspective on a fact of life for practicing developers.</p>

<h4 id="1400---1440---schauspielhaus---feminism-for-geeks--a-gentle-introduction">14:00 - 14:40 - Schauspielhaus - Feminism for Geeks – A Gentle Introduction</h4>

<p>I vehemently challenge anyone who asserts that being “woke” or
“anti-fascist” is a bad thing.  The same thing goes for anyone who
feels that masculinity is somehow under attack. It’s not, and if you
believe it is, you believe so in spite of reams of empirical evidence.
I applaud the conference committee for accepting this talk from Wenny
Susanto-Berky and urge you not to miss it.</p>

<h4 id="1500---1540---silverado---hilfe-ich-will-meinen-monolithen-zurück">15:00 - 15:40 - Silverado - Hilfe, ich will meinen Monolithen zurück!</h4>

<p>Here we are, roughly seven years since Sam Newman’s seminal book
“Building Microservices” and I’m starting to see talks like <a href="https://twitter.com/mobilelarson">Lars Röwekamp’s</a> “Help, I want my
monolith back”.  This view is not mere contrarianism. There are
definitely aspects of the monolith that should be preserved, even in a
microservices based architecture.  I’m sure Lars will break it down
for us.</p>

<h4 id="1600---1640---schauspielhaus---der-java-werkzeugkasten--die-praktischen-kommandozeilentools-des-jdk">16:00 - 16:40 - Schauspielhaus - Der Java-Werkzeugkasten – Die praktischen Kommandozeilentools des JDK</h4>

<p>All of us have been installing JDKs on machines for years and years, but how many know about all the command line tools that get installed in that package? <a href="https://twitter.com/mesirii">Michael Hunger</a> shows you how to get more from what you already have.</p>

<h4 id="1700---1740---quantum-34---im-dutzend-billiger-kanns-eine-assertion-mehr-sein-mit-assertj-zum-testerfolg">17:00 - 17:40 - Quantum 3+4 - Im Dutzend billiger. Kann’s eine Assertion mehr sein? Mit AssertJ zum Testerfolg</h4>

<p>There is a whole track on testing at JavaLand, but this is only the second testing talk I’ve selected. I assure you, this is not because testing is unimportant. Rather, my role as Principal Architect at Microsoft has me working at a higher level of abstraction.  However, I am fascinated by the journey of the humble assertion over time.  The <code class="language-plaintext highlighter-rouge">assert</code> keyword was added to Java in 2002, but since then the entire practice of CI/CD has evolved.  This talk from <a href="https://twitter.com/bikratz">Birgit Kratz</a> shows how the concept of assertions is compatible with our contemporary highly-automated development practice.</p>

<h3 id="thursday-17-march-2022">Thursday, 17 March 2022</h3>

<h4 id="0900---1700----bambuti-matamba---modern-jakarta-ee-and-microprofile-on-azure-open-liberty-jboss-eap-and-weblogic">09:00 - 17:00 -  Bambuti (Matamba) - Modern Jakarta EE and Microprofile on Azure: Open Liberty, JBoss EAP, and WebLogic</h4>

<p>I’m just going to recommend my own workshop with Sandra Ahlgrimm.
Here’s the snappy abstract I wrote.</p>

<blockquote>
  <p>You may have heard of the saying, “software is eating the
world”. You may have heard of the concept of “digital
transformation”.  You may be, or know, someone who must implement
both of these things by moving an existing system to a public cloud.
Talk about a full stack job! Join Java veteran Ed Burns and Senior
Developor Advocate Sandra Ahlgrimm for an educational and
informative deep dive into how to build for Microsoft Azure. This
workshop will teach Azure concepts by the example of how to easily
stand up an Azure Kubernetes Service (AKS) and run a Java EE
application inside of it.</p>
</blockquote>

<blockquote>
  <p>Participants will explore Oracle WebLogic Server, IBM Open Liberty
and JBoss EAP as the Java EE runtimes.  We will run the first two of
these Java EE environments on AKS and the third on Azure App
Service. As we go along, we will look under the hood at the
Microsoft, Oracle IBM and Red Hat technologies that enable it all to
work.</p>
</blockquote>]]></content><author><name></name></author><summary type="html"><![CDATA[Cross posted at dev.to.]]></summary></entry></feed>